#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_968011467570668732) {
   out_968011467570668732[0] = 0;
   out_968011467570668732[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_968011467570668732[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_968011467570668732[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_968011467570668732[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_968011467570668732[5] = -sin(in_vec[1]);
   out_968011467570668732[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_968011467570668732[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_968011467570668732[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_968011467570668732[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_968011467570668732[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_968011467570668732[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_968011467570668732[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_968011467570668732[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_968011467570668732[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_968011467570668732[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_968011467570668732[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_968011467570668732[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6037579360156852475) {
   out_6037579360156852475[0] = delta_x[0] + nom_x[0];
   out_6037579360156852475[1] = delta_x[1] + nom_x[1];
   out_6037579360156852475[2] = delta_x[2] + nom_x[2];
   out_6037579360156852475[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6037579360156852475[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6037579360156852475[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6037579360156852475[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6037579360156852475[7] = delta_x[6] + nom_x[7];
   out_6037579360156852475[8] = delta_x[7] + nom_x[8];
   out_6037579360156852475[9] = delta_x[8] + nom_x[9];
   out_6037579360156852475[10] = delta_x[9] + nom_x[10];
   out_6037579360156852475[11] = delta_x[10] + nom_x[11];
   out_6037579360156852475[12] = delta_x[11] + nom_x[12];
   out_6037579360156852475[13] = delta_x[12] + nom_x[13];
   out_6037579360156852475[14] = delta_x[13] + nom_x[14];
   out_6037579360156852475[15] = delta_x[14] + nom_x[15];
   out_6037579360156852475[16] = delta_x[15] + nom_x[16];
   out_6037579360156852475[17] = delta_x[16] + nom_x[17];
   out_6037579360156852475[18] = delta_x[17] + nom_x[18];
   out_6037579360156852475[19] = delta_x[18] + nom_x[19];
   out_6037579360156852475[20] = delta_x[19] + nom_x[20];
   out_6037579360156852475[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7864497656021003597) {
   out_7864497656021003597[0] = -nom_x[0] + true_x[0];
   out_7864497656021003597[1] = -nom_x[1] + true_x[1];
   out_7864497656021003597[2] = -nom_x[2] + true_x[2];
   out_7864497656021003597[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7864497656021003597[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7864497656021003597[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7864497656021003597[6] = -nom_x[7] + true_x[7];
   out_7864497656021003597[7] = -nom_x[8] + true_x[8];
   out_7864497656021003597[8] = -nom_x[9] + true_x[9];
   out_7864497656021003597[9] = -nom_x[10] + true_x[10];
   out_7864497656021003597[10] = -nom_x[11] + true_x[11];
   out_7864497656021003597[11] = -nom_x[12] + true_x[12];
   out_7864497656021003597[12] = -nom_x[13] + true_x[13];
   out_7864497656021003597[13] = -nom_x[14] + true_x[14];
   out_7864497656021003597[14] = -nom_x[15] + true_x[15];
   out_7864497656021003597[15] = -nom_x[16] + true_x[16];
   out_7864497656021003597[16] = -nom_x[17] + true_x[17];
   out_7864497656021003597[17] = -nom_x[18] + true_x[18];
   out_7864497656021003597[18] = -nom_x[19] + true_x[19];
   out_7864497656021003597[19] = -nom_x[20] + true_x[20];
   out_7864497656021003597[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2010250974602982044) {
   out_2010250974602982044[0] = 1.0;
   out_2010250974602982044[1] = 0;
   out_2010250974602982044[2] = 0;
   out_2010250974602982044[3] = 0;
   out_2010250974602982044[4] = 0;
   out_2010250974602982044[5] = 0;
   out_2010250974602982044[6] = 0;
   out_2010250974602982044[7] = 0;
   out_2010250974602982044[8] = 0;
   out_2010250974602982044[9] = 0;
   out_2010250974602982044[10] = 0;
   out_2010250974602982044[11] = 0;
   out_2010250974602982044[12] = 0;
   out_2010250974602982044[13] = 0;
   out_2010250974602982044[14] = 0;
   out_2010250974602982044[15] = 0;
   out_2010250974602982044[16] = 0;
   out_2010250974602982044[17] = 0;
   out_2010250974602982044[18] = 0;
   out_2010250974602982044[19] = 0;
   out_2010250974602982044[20] = 0;
   out_2010250974602982044[21] = 0;
   out_2010250974602982044[22] = 1.0;
   out_2010250974602982044[23] = 0;
   out_2010250974602982044[24] = 0;
   out_2010250974602982044[25] = 0;
   out_2010250974602982044[26] = 0;
   out_2010250974602982044[27] = 0;
   out_2010250974602982044[28] = 0;
   out_2010250974602982044[29] = 0;
   out_2010250974602982044[30] = 0;
   out_2010250974602982044[31] = 0;
   out_2010250974602982044[32] = 0;
   out_2010250974602982044[33] = 0;
   out_2010250974602982044[34] = 0;
   out_2010250974602982044[35] = 0;
   out_2010250974602982044[36] = 0;
   out_2010250974602982044[37] = 0;
   out_2010250974602982044[38] = 0;
   out_2010250974602982044[39] = 0;
   out_2010250974602982044[40] = 0;
   out_2010250974602982044[41] = 0;
   out_2010250974602982044[42] = 0;
   out_2010250974602982044[43] = 0;
   out_2010250974602982044[44] = 1.0;
   out_2010250974602982044[45] = 0;
   out_2010250974602982044[46] = 0;
   out_2010250974602982044[47] = 0;
   out_2010250974602982044[48] = 0;
   out_2010250974602982044[49] = 0;
   out_2010250974602982044[50] = 0;
   out_2010250974602982044[51] = 0;
   out_2010250974602982044[52] = 0;
   out_2010250974602982044[53] = 0;
   out_2010250974602982044[54] = 0;
   out_2010250974602982044[55] = 0;
   out_2010250974602982044[56] = 0;
   out_2010250974602982044[57] = 0;
   out_2010250974602982044[58] = 0;
   out_2010250974602982044[59] = 0;
   out_2010250974602982044[60] = 0;
   out_2010250974602982044[61] = 0;
   out_2010250974602982044[62] = 0;
   out_2010250974602982044[63] = 0;
   out_2010250974602982044[64] = 0;
   out_2010250974602982044[65] = 0;
   out_2010250974602982044[66] = -0.5*state[4];
   out_2010250974602982044[67] = -0.5*state[5];
   out_2010250974602982044[68] = -0.5*state[6];
   out_2010250974602982044[69] = 0;
   out_2010250974602982044[70] = 0;
   out_2010250974602982044[71] = 0;
   out_2010250974602982044[72] = 0;
   out_2010250974602982044[73] = 0;
   out_2010250974602982044[74] = 0;
   out_2010250974602982044[75] = 0;
   out_2010250974602982044[76] = 0;
   out_2010250974602982044[77] = 0;
   out_2010250974602982044[78] = 0;
   out_2010250974602982044[79] = 0;
   out_2010250974602982044[80] = 0;
   out_2010250974602982044[81] = 0;
   out_2010250974602982044[82] = 0;
   out_2010250974602982044[83] = 0;
   out_2010250974602982044[84] = 0;
   out_2010250974602982044[85] = 0;
   out_2010250974602982044[86] = 0;
   out_2010250974602982044[87] = 0.5*state[3];
   out_2010250974602982044[88] = 0.5*state[6];
   out_2010250974602982044[89] = -0.5*state[5];
   out_2010250974602982044[90] = 0;
   out_2010250974602982044[91] = 0;
   out_2010250974602982044[92] = 0;
   out_2010250974602982044[93] = 0;
   out_2010250974602982044[94] = 0;
   out_2010250974602982044[95] = 0;
   out_2010250974602982044[96] = 0;
   out_2010250974602982044[97] = 0;
   out_2010250974602982044[98] = 0;
   out_2010250974602982044[99] = 0;
   out_2010250974602982044[100] = 0;
   out_2010250974602982044[101] = 0;
   out_2010250974602982044[102] = 0;
   out_2010250974602982044[103] = 0;
   out_2010250974602982044[104] = 0;
   out_2010250974602982044[105] = 0;
   out_2010250974602982044[106] = 0;
   out_2010250974602982044[107] = 0;
   out_2010250974602982044[108] = -0.5*state[6];
   out_2010250974602982044[109] = 0.5*state[3];
   out_2010250974602982044[110] = 0.5*state[4];
   out_2010250974602982044[111] = 0;
   out_2010250974602982044[112] = 0;
   out_2010250974602982044[113] = 0;
   out_2010250974602982044[114] = 0;
   out_2010250974602982044[115] = 0;
   out_2010250974602982044[116] = 0;
   out_2010250974602982044[117] = 0;
   out_2010250974602982044[118] = 0;
   out_2010250974602982044[119] = 0;
   out_2010250974602982044[120] = 0;
   out_2010250974602982044[121] = 0;
   out_2010250974602982044[122] = 0;
   out_2010250974602982044[123] = 0;
   out_2010250974602982044[124] = 0;
   out_2010250974602982044[125] = 0;
   out_2010250974602982044[126] = 0;
   out_2010250974602982044[127] = 0;
   out_2010250974602982044[128] = 0;
   out_2010250974602982044[129] = 0.5*state[5];
   out_2010250974602982044[130] = -0.5*state[4];
   out_2010250974602982044[131] = 0.5*state[3];
   out_2010250974602982044[132] = 0;
   out_2010250974602982044[133] = 0;
   out_2010250974602982044[134] = 0;
   out_2010250974602982044[135] = 0;
   out_2010250974602982044[136] = 0;
   out_2010250974602982044[137] = 0;
   out_2010250974602982044[138] = 0;
   out_2010250974602982044[139] = 0;
   out_2010250974602982044[140] = 0;
   out_2010250974602982044[141] = 0;
   out_2010250974602982044[142] = 0;
   out_2010250974602982044[143] = 0;
   out_2010250974602982044[144] = 0;
   out_2010250974602982044[145] = 0;
   out_2010250974602982044[146] = 0;
   out_2010250974602982044[147] = 0;
   out_2010250974602982044[148] = 0;
   out_2010250974602982044[149] = 0;
   out_2010250974602982044[150] = 0;
   out_2010250974602982044[151] = 0;
   out_2010250974602982044[152] = 0;
   out_2010250974602982044[153] = 1.0;
   out_2010250974602982044[154] = 0;
   out_2010250974602982044[155] = 0;
   out_2010250974602982044[156] = 0;
   out_2010250974602982044[157] = 0;
   out_2010250974602982044[158] = 0;
   out_2010250974602982044[159] = 0;
   out_2010250974602982044[160] = 0;
   out_2010250974602982044[161] = 0;
   out_2010250974602982044[162] = 0;
   out_2010250974602982044[163] = 0;
   out_2010250974602982044[164] = 0;
   out_2010250974602982044[165] = 0;
   out_2010250974602982044[166] = 0;
   out_2010250974602982044[167] = 0;
   out_2010250974602982044[168] = 0;
   out_2010250974602982044[169] = 0;
   out_2010250974602982044[170] = 0;
   out_2010250974602982044[171] = 0;
   out_2010250974602982044[172] = 0;
   out_2010250974602982044[173] = 0;
   out_2010250974602982044[174] = 0;
   out_2010250974602982044[175] = 1.0;
   out_2010250974602982044[176] = 0;
   out_2010250974602982044[177] = 0;
   out_2010250974602982044[178] = 0;
   out_2010250974602982044[179] = 0;
   out_2010250974602982044[180] = 0;
   out_2010250974602982044[181] = 0;
   out_2010250974602982044[182] = 0;
   out_2010250974602982044[183] = 0;
   out_2010250974602982044[184] = 0;
   out_2010250974602982044[185] = 0;
   out_2010250974602982044[186] = 0;
   out_2010250974602982044[187] = 0;
   out_2010250974602982044[188] = 0;
   out_2010250974602982044[189] = 0;
   out_2010250974602982044[190] = 0;
   out_2010250974602982044[191] = 0;
   out_2010250974602982044[192] = 0;
   out_2010250974602982044[193] = 0;
   out_2010250974602982044[194] = 0;
   out_2010250974602982044[195] = 0;
   out_2010250974602982044[196] = 0;
   out_2010250974602982044[197] = 1.0;
   out_2010250974602982044[198] = 0;
   out_2010250974602982044[199] = 0;
   out_2010250974602982044[200] = 0;
   out_2010250974602982044[201] = 0;
   out_2010250974602982044[202] = 0;
   out_2010250974602982044[203] = 0;
   out_2010250974602982044[204] = 0;
   out_2010250974602982044[205] = 0;
   out_2010250974602982044[206] = 0;
   out_2010250974602982044[207] = 0;
   out_2010250974602982044[208] = 0;
   out_2010250974602982044[209] = 0;
   out_2010250974602982044[210] = 0;
   out_2010250974602982044[211] = 0;
   out_2010250974602982044[212] = 0;
   out_2010250974602982044[213] = 0;
   out_2010250974602982044[214] = 0;
   out_2010250974602982044[215] = 0;
   out_2010250974602982044[216] = 0;
   out_2010250974602982044[217] = 0;
   out_2010250974602982044[218] = 0;
   out_2010250974602982044[219] = 1.0;
   out_2010250974602982044[220] = 0;
   out_2010250974602982044[221] = 0;
   out_2010250974602982044[222] = 0;
   out_2010250974602982044[223] = 0;
   out_2010250974602982044[224] = 0;
   out_2010250974602982044[225] = 0;
   out_2010250974602982044[226] = 0;
   out_2010250974602982044[227] = 0;
   out_2010250974602982044[228] = 0;
   out_2010250974602982044[229] = 0;
   out_2010250974602982044[230] = 0;
   out_2010250974602982044[231] = 0;
   out_2010250974602982044[232] = 0;
   out_2010250974602982044[233] = 0;
   out_2010250974602982044[234] = 0;
   out_2010250974602982044[235] = 0;
   out_2010250974602982044[236] = 0;
   out_2010250974602982044[237] = 0;
   out_2010250974602982044[238] = 0;
   out_2010250974602982044[239] = 0;
   out_2010250974602982044[240] = 0;
   out_2010250974602982044[241] = 1.0;
   out_2010250974602982044[242] = 0;
   out_2010250974602982044[243] = 0;
   out_2010250974602982044[244] = 0;
   out_2010250974602982044[245] = 0;
   out_2010250974602982044[246] = 0;
   out_2010250974602982044[247] = 0;
   out_2010250974602982044[248] = 0;
   out_2010250974602982044[249] = 0;
   out_2010250974602982044[250] = 0;
   out_2010250974602982044[251] = 0;
   out_2010250974602982044[252] = 0;
   out_2010250974602982044[253] = 0;
   out_2010250974602982044[254] = 0;
   out_2010250974602982044[255] = 0;
   out_2010250974602982044[256] = 0;
   out_2010250974602982044[257] = 0;
   out_2010250974602982044[258] = 0;
   out_2010250974602982044[259] = 0;
   out_2010250974602982044[260] = 0;
   out_2010250974602982044[261] = 0;
   out_2010250974602982044[262] = 0;
   out_2010250974602982044[263] = 1.0;
   out_2010250974602982044[264] = 0;
   out_2010250974602982044[265] = 0;
   out_2010250974602982044[266] = 0;
   out_2010250974602982044[267] = 0;
   out_2010250974602982044[268] = 0;
   out_2010250974602982044[269] = 0;
   out_2010250974602982044[270] = 0;
   out_2010250974602982044[271] = 0;
   out_2010250974602982044[272] = 0;
   out_2010250974602982044[273] = 0;
   out_2010250974602982044[274] = 0;
   out_2010250974602982044[275] = 0;
   out_2010250974602982044[276] = 0;
   out_2010250974602982044[277] = 0;
   out_2010250974602982044[278] = 0;
   out_2010250974602982044[279] = 0;
   out_2010250974602982044[280] = 0;
   out_2010250974602982044[281] = 0;
   out_2010250974602982044[282] = 0;
   out_2010250974602982044[283] = 0;
   out_2010250974602982044[284] = 0;
   out_2010250974602982044[285] = 1.0;
   out_2010250974602982044[286] = 0;
   out_2010250974602982044[287] = 0;
   out_2010250974602982044[288] = 0;
   out_2010250974602982044[289] = 0;
   out_2010250974602982044[290] = 0;
   out_2010250974602982044[291] = 0;
   out_2010250974602982044[292] = 0;
   out_2010250974602982044[293] = 0;
   out_2010250974602982044[294] = 0;
   out_2010250974602982044[295] = 0;
   out_2010250974602982044[296] = 0;
   out_2010250974602982044[297] = 0;
   out_2010250974602982044[298] = 0;
   out_2010250974602982044[299] = 0;
   out_2010250974602982044[300] = 0;
   out_2010250974602982044[301] = 0;
   out_2010250974602982044[302] = 0;
   out_2010250974602982044[303] = 0;
   out_2010250974602982044[304] = 0;
   out_2010250974602982044[305] = 0;
   out_2010250974602982044[306] = 0;
   out_2010250974602982044[307] = 1.0;
   out_2010250974602982044[308] = 0;
   out_2010250974602982044[309] = 0;
   out_2010250974602982044[310] = 0;
   out_2010250974602982044[311] = 0;
   out_2010250974602982044[312] = 0;
   out_2010250974602982044[313] = 0;
   out_2010250974602982044[314] = 0;
   out_2010250974602982044[315] = 0;
   out_2010250974602982044[316] = 0;
   out_2010250974602982044[317] = 0;
   out_2010250974602982044[318] = 0;
   out_2010250974602982044[319] = 0;
   out_2010250974602982044[320] = 0;
   out_2010250974602982044[321] = 0;
   out_2010250974602982044[322] = 0;
   out_2010250974602982044[323] = 0;
   out_2010250974602982044[324] = 0;
   out_2010250974602982044[325] = 0;
   out_2010250974602982044[326] = 0;
   out_2010250974602982044[327] = 0;
   out_2010250974602982044[328] = 0;
   out_2010250974602982044[329] = 1.0;
   out_2010250974602982044[330] = 0;
   out_2010250974602982044[331] = 0;
   out_2010250974602982044[332] = 0;
   out_2010250974602982044[333] = 0;
   out_2010250974602982044[334] = 0;
   out_2010250974602982044[335] = 0;
   out_2010250974602982044[336] = 0;
   out_2010250974602982044[337] = 0;
   out_2010250974602982044[338] = 0;
   out_2010250974602982044[339] = 0;
   out_2010250974602982044[340] = 0;
   out_2010250974602982044[341] = 0;
   out_2010250974602982044[342] = 0;
   out_2010250974602982044[343] = 0;
   out_2010250974602982044[344] = 0;
   out_2010250974602982044[345] = 0;
   out_2010250974602982044[346] = 0;
   out_2010250974602982044[347] = 0;
   out_2010250974602982044[348] = 0;
   out_2010250974602982044[349] = 0;
   out_2010250974602982044[350] = 0;
   out_2010250974602982044[351] = 1.0;
   out_2010250974602982044[352] = 0;
   out_2010250974602982044[353] = 0;
   out_2010250974602982044[354] = 0;
   out_2010250974602982044[355] = 0;
   out_2010250974602982044[356] = 0;
   out_2010250974602982044[357] = 0;
   out_2010250974602982044[358] = 0;
   out_2010250974602982044[359] = 0;
   out_2010250974602982044[360] = 0;
   out_2010250974602982044[361] = 0;
   out_2010250974602982044[362] = 0;
   out_2010250974602982044[363] = 0;
   out_2010250974602982044[364] = 0;
   out_2010250974602982044[365] = 0;
   out_2010250974602982044[366] = 0;
   out_2010250974602982044[367] = 0;
   out_2010250974602982044[368] = 0;
   out_2010250974602982044[369] = 0;
   out_2010250974602982044[370] = 0;
   out_2010250974602982044[371] = 0;
   out_2010250974602982044[372] = 0;
   out_2010250974602982044[373] = 1.0;
   out_2010250974602982044[374] = 0;
   out_2010250974602982044[375] = 0;
   out_2010250974602982044[376] = 0;
   out_2010250974602982044[377] = 0;
   out_2010250974602982044[378] = 0;
   out_2010250974602982044[379] = 0;
   out_2010250974602982044[380] = 0;
   out_2010250974602982044[381] = 0;
   out_2010250974602982044[382] = 0;
   out_2010250974602982044[383] = 0;
   out_2010250974602982044[384] = 0;
   out_2010250974602982044[385] = 0;
   out_2010250974602982044[386] = 0;
   out_2010250974602982044[387] = 0;
   out_2010250974602982044[388] = 0;
   out_2010250974602982044[389] = 0;
   out_2010250974602982044[390] = 0;
   out_2010250974602982044[391] = 0;
   out_2010250974602982044[392] = 0;
   out_2010250974602982044[393] = 0;
   out_2010250974602982044[394] = 0;
   out_2010250974602982044[395] = 1.0;
   out_2010250974602982044[396] = 0;
   out_2010250974602982044[397] = 0;
   out_2010250974602982044[398] = 0;
   out_2010250974602982044[399] = 0;
   out_2010250974602982044[400] = 0;
   out_2010250974602982044[401] = 0;
   out_2010250974602982044[402] = 0;
   out_2010250974602982044[403] = 0;
   out_2010250974602982044[404] = 0;
   out_2010250974602982044[405] = 0;
   out_2010250974602982044[406] = 0;
   out_2010250974602982044[407] = 0;
   out_2010250974602982044[408] = 0;
   out_2010250974602982044[409] = 0;
   out_2010250974602982044[410] = 0;
   out_2010250974602982044[411] = 0;
   out_2010250974602982044[412] = 0;
   out_2010250974602982044[413] = 0;
   out_2010250974602982044[414] = 0;
   out_2010250974602982044[415] = 0;
   out_2010250974602982044[416] = 0;
   out_2010250974602982044[417] = 1.0;
   out_2010250974602982044[418] = 0;
   out_2010250974602982044[419] = 0;
   out_2010250974602982044[420] = 0;
   out_2010250974602982044[421] = 0;
   out_2010250974602982044[422] = 0;
   out_2010250974602982044[423] = 0;
   out_2010250974602982044[424] = 0;
   out_2010250974602982044[425] = 0;
   out_2010250974602982044[426] = 0;
   out_2010250974602982044[427] = 0;
   out_2010250974602982044[428] = 0;
   out_2010250974602982044[429] = 0;
   out_2010250974602982044[430] = 0;
   out_2010250974602982044[431] = 0;
   out_2010250974602982044[432] = 0;
   out_2010250974602982044[433] = 0;
   out_2010250974602982044[434] = 0;
   out_2010250974602982044[435] = 0;
   out_2010250974602982044[436] = 0;
   out_2010250974602982044[437] = 0;
   out_2010250974602982044[438] = 0;
   out_2010250974602982044[439] = 1.0;
   out_2010250974602982044[440] = 0;
   out_2010250974602982044[441] = 0;
   out_2010250974602982044[442] = 0;
   out_2010250974602982044[443] = 0;
   out_2010250974602982044[444] = 0;
   out_2010250974602982044[445] = 0;
   out_2010250974602982044[446] = 0;
   out_2010250974602982044[447] = 0;
   out_2010250974602982044[448] = 0;
   out_2010250974602982044[449] = 0;
   out_2010250974602982044[450] = 0;
   out_2010250974602982044[451] = 0;
   out_2010250974602982044[452] = 0;
   out_2010250974602982044[453] = 0;
   out_2010250974602982044[454] = 0;
   out_2010250974602982044[455] = 0;
   out_2010250974602982044[456] = 0;
   out_2010250974602982044[457] = 0;
   out_2010250974602982044[458] = 0;
   out_2010250974602982044[459] = 0;
   out_2010250974602982044[460] = 0;
   out_2010250974602982044[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5437099138004693151) {
   out_5437099138004693151[0] = dt*state[7] + state[0];
   out_5437099138004693151[1] = dt*state[8] + state[1];
   out_5437099138004693151[2] = dt*state[9] + state[2];
   out_5437099138004693151[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5437099138004693151[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5437099138004693151[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5437099138004693151[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5437099138004693151[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5437099138004693151[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5437099138004693151[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5437099138004693151[10] = state[10];
   out_5437099138004693151[11] = state[11];
   out_5437099138004693151[12] = state[12];
   out_5437099138004693151[13] = state[13];
   out_5437099138004693151[14] = state[14];
   out_5437099138004693151[15] = state[15];
   out_5437099138004693151[16] = state[16];
   out_5437099138004693151[17] = state[17];
   out_5437099138004693151[18] = state[18];
   out_5437099138004693151[19] = state[19];
   out_5437099138004693151[20] = state[20];
   out_5437099138004693151[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5021697117202483803) {
   out_5021697117202483803[0] = 1;
   out_5021697117202483803[1] = 0;
   out_5021697117202483803[2] = 0;
   out_5021697117202483803[3] = 0;
   out_5021697117202483803[4] = 0;
   out_5021697117202483803[5] = 0;
   out_5021697117202483803[6] = dt;
   out_5021697117202483803[7] = 0;
   out_5021697117202483803[8] = 0;
   out_5021697117202483803[9] = 0;
   out_5021697117202483803[10] = 0;
   out_5021697117202483803[11] = 0;
   out_5021697117202483803[12] = 0;
   out_5021697117202483803[13] = 0;
   out_5021697117202483803[14] = 0;
   out_5021697117202483803[15] = 0;
   out_5021697117202483803[16] = 0;
   out_5021697117202483803[17] = 0;
   out_5021697117202483803[18] = 0;
   out_5021697117202483803[19] = 0;
   out_5021697117202483803[20] = 0;
   out_5021697117202483803[21] = 0;
   out_5021697117202483803[22] = 1;
   out_5021697117202483803[23] = 0;
   out_5021697117202483803[24] = 0;
   out_5021697117202483803[25] = 0;
   out_5021697117202483803[26] = 0;
   out_5021697117202483803[27] = 0;
   out_5021697117202483803[28] = dt;
   out_5021697117202483803[29] = 0;
   out_5021697117202483803[30] = 0;
   out_5021697117202483803[31] = 0;
   out_5021697117202483803[32] = 0;
   out_5021697117202483803[33] = 0;
   out_5021697117202483803[34] = 0;
   out_5021697117202483803[35] = 0;
   out_5021697117202483803[36] = 0;
   out_5021697117202483803[37] = 0;
   out_5021697117202483803[38] = 0;
   out_5021697117202483803[39] = 0;
   out_5021697117202483803[40] = 0;
   out_5021697117202483803[41] = 0;
   out_5021697117202483803[42] = 0;
   out_5021697117202483803[43] = 0;
   out_5021697117202483803[44] = 1;
   out_5021697117202483803[45] = 0;
   out_5021697117202483803[46] = 0;
   out_5021697117202483803[47] = 0;
   out_5021697117202483803[48] = 0;
   out_5021697117202483803[49] = 0;
   out_5021697117202483803[50] = dt;
   out_5021697117202483803[51] = 0;
   out_5021697117202483803[52] = 0;
   out_5021697117202483803[53] = 0;
   out_5021697117202483803[54] = 0;
   out_5021697117202483803[55] = 0;
   out_5021697117202483803[56] = 0;
   out_5021697117202483803[57] = 0;
   out_5021697117202483803[58] = 0;
   out_5021697117202483803[59] = 0;
   out_5021697117202483803[60] = 0;
   out_5021697117202483803[61] = 0;
   out_5021697117202483803[62] = 0;
   out_5021697117202483803[63] = 0;
   out_5021697117202483803[64] = 0;
   out_5021697117202483803[65] = 0;
   out_5021697117202483803[66] = 1;
   out_5021697117202483803[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5021697117202483803[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5021697117202483803[69] = 0;
   out_5021697117202483803[70] = 0;
   out_5021697117202483803[71] = 0;
   out_5021697117202483803[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5021697117202483803[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5021697117202483803[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5021697117202483803[75] = 0;
   out_5021697117202483803[76] = 0;
   out_5021697117202483803[77] = 0;
   out_5021697117202483803[78] = 0;
   out_5021697117202483803[79] = 0;
   out_5021697117202483803[80] = 0;
   out_5021697117202483803[81] = 0;
   out_5021697117202483803[82] = 0;
   out_5021697117202483803[83] = 0;
   out_5021697117202483803[84] = 0;
   out_5021697117202483803[85] = 0;
   out_5021697117202483803[86] = 0;
   out_5021697117202483803[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5021697117202483803[88] = 1;
   out_5021697117202483803[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5021697117202483803[90] = 0;
   out_5021697117202483803[91] = 0;
   out_5021697117202483803[92] = 0;
   out_5021697117202483803[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5021697117202483803[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5021697117202483803[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5021697117202483803[96] = 0;
   out_5021697117202483803[97] = 0;
   out_5021697117202483803[98] = 0;
   out_5021697117202483803[99] = 0;
   out_5021697117202483803[100] = 0;
   out_5021697117202483803[101] = 0;
   out_5021697117202483803[102] = 0;
   out_5021697117202483803[103] = 0;
   out_5021697117202483803[104] = 0;
   out_5021697117202483803[105] = 0;
   out_5021697117202483803[106] = 0;
   out_5021697117202483803[107] = 0;
   out_5021697117202483803[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5021697117202483803[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5021697117202483803[110] = 1;
   out_5021697117202483803[111] = 0;
   out_5021697117202483803[112] = 0;
   out_5021697117202483803[113] = 0;
   out_5021697117202483803[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5021697117202483803[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5021697117202483803[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5021697117202483803[117] = 0;
   out_5021697117202483803[118] = 0;
   out_5021697117202483803[119] = 0;
   out_5021697117202483803[120] = 0;
   out_5021697117202483803[121] = 0;
   out_5021697117202483803[122] = 0;
   out_5021697117202483803[123] = 0;
   out_5021697117202483803[124] = 0;
   out_5021697117202483803[125] = 0;
   out_5021697117202483803[126] = 0;
   out_5021697117202483803[127] = 0;
   out_5021697117202483803[128] = 0;
   out_5021697117202483803[129] = 0;
   out_5021697117202483803[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5021697117202483803[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5021697117202483803[132] = 1;
   out_5021697117202483803[133] = 0;
   out_5021697117202483803[134] = 0;
   out_5021697117202483803[135] = 0;
   out_5021697117202483803[136] = 0;
   out_5021697117202483803[137] = 0;
   out_5021697117202483803[138] = 0;
   out_5021697117202483803[139] = 0;
   out_5021697117202483803[140] = 0;
   out_5021697117202483803[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5021697117202483803[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5021697117202483803[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5021697117202483803[144] = 0;
   out_5021697117202483803[145] = 0;
   out_5021697117202483803[146] = 0;
   out_5021697117202483803[147] = 0;
   out_5021697117202483803[148] = 0;
   out_5021697117202483803[149] = 0;
   out_5021697117202483803[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5021697117202483803[151] = 0;
   out_5021697117202483803[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5021697117202483803[153] = 0;
   out_5021697117202483803[154] = 1;
   out_5021697117202483803[155] = 0;
   out_5021697117202483803[156] = 0;
   out_5021697117202483803[157] = 0;
   out_5021697117202483803[158] = 0;
   out_5021697117202483803[159] = 0;
   out_5021697117202483803[160] = 0;
   out_5021697117202483803[161] = 0;
   out_5021697117202483803[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5021697117202483803[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5021697117202483803[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5021697117202483803[165] = 0;
   out_5021697117202483803[166] = 0;
   out_5021697117202483803[167] = 0;
   out_5021697117202483803[168] = 0;
   out_5021697117202483803[169] = 0;
   out_5021697117202483803[170] = 0;
   out_5021697117202483803[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5021697117202483803[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5021697117202483803[173] = 0;
   out_5021697117202483803[174] = 0;
   out_5021697117202483803[175] = 0;
   out_5021697117202483803[176] = 1;
   out_5021697117202483803[177] = 0;
   out_5021697117202483803[178] = 0;
   out_5021697117202483803[179] = 0;
   out_5021697117202483803[180] = 0;
   out_5021697117202483803[181] = 0;
   out_5021697117202483803[182] = 0;
   out_5021697117202483803[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5021697117202483803[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5021697117202483803[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5021697117202483803[186] = 0;
   out_5021697117202483803[187] = 0;
   out_5021697117202483803[188] = 0;
   out_5021697117202483803[189] = 0;
   out_5021697117202483803[190] = 0;
   out_5021697117202483803[191] = 0;
   out_5021697117202483803[192] = 0;
   out_5021697117202483803[193] = 0;
   out_5021697117202483803[194] = 0;
   out_5021697117202483803[195] = 0;
   out_5021697117202483803[196] = 0;
   out_5021697117202483803[197] = 0;
   out_5021697117202483803[198] = 1;
   out_5021697117202483803[199] = 0;
   out_5021697117202483803[200] = 0;
   out_5021697117202483803[201] = 0;
   out_5021697117202483803[202] = 0;
   out_5021697117202483803[203] = 0;
   out_5021697117202483803[204] = 0;
   out_5021697117202483803[205] = 0;
   out_5021697117202483803[206] = 0;
   out_5021697117202483803[207] = 0;
   out_5021697117202483803[208] = 0;
   out_5021697117202483803[209] = 0;
   out_5021697117202483803[210] = 0;
   out_5021697117202483803[211] = 0;
   out_5021697117202483803[212] = 0;
   out_5021697117202483803[213] = 0;
   out_5021697117202483803[214] = 0;
   out_5021697117202483803[215] = 0;
   out_5021697117202483803[216] = 0;
   out_5021697117202483803[217] = 0;
   out_5021697117202483803[218] = 0;
   out_5021697117202483803[219] = 0;
   out_5021697117202483803[220] = 1;
   out_5021697117202483803[221] = 0;
   out_5021697117202483803[222] = 0;
   out_5021697117202483803[223] = 0;
   out_5021697117202483803[224] = 0;
   out_5021697117202483803[225] = 0;
   out_5021697117202483803[226] = 0;
   out_5021697117202483803[227] = 0;
   out_5021697117202483803[228] = 0;
   out_5021697117202483803[229] = 0;
   out_5021697117202483803[230] = 0;
   out_5021697117202483803[231] = 0;
   out_5021697117202483803[232] = 0;
   out_5021697117202483803[233] = 0;
   out_5021697117202483803[234] = 0;
   out_5021697117202483803[235] = 0;
   out_5021697117202483803[236] = 0;
   out_5021697117202483803[237] = 0;
   out_5021697117202483803[238] = 0;
   out_5021697117202483803[239] = 0;
   out_5021697117202483803[240] = 0;
   out_5021697117202483803[241] = 0;
   out_5021697117202483803[242] = 1;
   out_5021697117202483803[243] = 0;
   out_5021697117202483803[244] = 0;
   out_5021697117202483803[245] = 0;
   out_5021697117202483803[246] = 0;
   out_5021697117202483803[247] = 0;
   out_5021697117202483803[248] = 0;
   out_5021697117202483803[249] = 0;
   out_5021697117202483803[250] = 0;
   out_5021697117202483803[251] = 0;
   out_5021697117202483803[252] = 0;
   out_5021697117202483803[253] = 0;
   out_5021697117202483803[254] = 0;
   out_5021697117202483803[255] = 0;
   out_5021697117202483803[256] = 0;
   out_5021697117202483803[257] = 0;
   out_5021697117202483803[258] = 0;
   out_5021697117202483803[259] = 0;
   out_5021697117202483803[260] = 0;
   out_5021697117202483803[261] = 0;
   out_5021697117202483803[262] = 0;
   out_5021697117202483803[263] = 0;
   out_5021697117202483803[264] = 1;
   out_5021697117202483803[265] = 0;
   out_5021697117202483803[266] = 0;
   out_5021697117202483803[267] = 0;
   out_5021697117202483803[268] = 0;
   out_5021697117202483803[269] = 0;
   out_5021697117202483803[270] = 0;
   out_5021697117202483803[271] = 0;
   out_5021697117202483803[272] = 0;
   out_5021697117202483803[273] = 0;
   out_5021697117202483803[274] = 0;
   out_5021697117202483803[275] = 0;
   out_5021697117202483803[276] = 0;
   out_5021697117202483803[277] = 0;
   out_5021697117202483803[278] = 0;
   out_5021697117202483803[279] = 0;
   out_5021697117202483803[280] = 0;
   out_5021697117202483803[281] = 0;
   out_5021697117202483803[282] = 0;
   out_5021697117202483803[283] = 0;
   out_5021697117202483803[284] = 0;
   out_5021697117202483803[285] = 0;
   out_5021697117202483803[286] = 1;
   out_5021697117202483803[287] = 0;
   out_5021697117202483803[288] = 0;
   out_5021697117202483803[289] = 0;
   out_5021697117202483803[290] = 0;
   out_5021697117202483803[291] = 0;
   out_5021697117202483803[292] = 0;
   out_5021697117202483803[293] = 0;
   out_5021697117202483803[294] = 0;
   out_5021697117202483803[295] = 0;
   out_5021697117202483803[296] = 0;
   out_5021697117202483803[297] = 0;
   out_5021697117202483803[298] = 0;
   out_5021697117202483803[299] = 0;
   out_5021697117202483803[300] = 0;
   out_5021697117202483803[301] = 0;
   out_5021697117202483803[302] = 0;
   out_5021697117202483803[303] = 0;
   out_5021697117202483803[304] = 0;
   out_5021697117202483803[305] = 0;
   out_5021697117202483803[306] = 0;
   out_5021697117202483803[307] = 0;
   out_5021697117202483803[308] = 1;
   out_5021697117202483803[309] = 0;
   out_5021697117202483803[310] = 0;
   out_5021697117202483803[311] = 0;
   out_5021697117202483803[312] = 0;
   out_5021697117202483803[313] = 0;
   out_5021697117202483803[314] = 0;
   out_5021697117202483803[315] = 0;
   out_5021697117202483803[316] = 0;
   out_5021697117202483803[317] = 0;
   out_5021697117202483803[318] = 0;
   out_5021697117202483803[319] = 0;
   out_5021697117202483803[320] = 0;
   out_5021697117202483803[321] = 0;
   out_5021697117202483803[322] = 0;
   out_5021697117202483803[323] = 0;
   out_5021697117202483803[324] = 0;
   out_5021697117202483803[325] = 0;
   out_5021697117202483803[326] = 0;
   out_5021697117202483803[327] = 0;
   out_5021697117202483803[328] = 0;
   out_5021697117202483803[329] = 0;
   out_5021697117202483803[330] = 1;
   out_5021697117202483803[331] = 0;
   out_5021697117202483803[332] = 0;
   out_5021697117202483803[333] = 0;
   out_5021697117202483803[334] = 0;
   out_5021697117202483803[335] = 0;
   out_5021697117202483803[336] = 0;
   out_5021697117202483803[337] = 0;
   out_5021697117202483803[338] = 0;
   out_5021697117202483803[339] = 0;
   out_5021697117202483803[340] = 0;
   out_5021697117202483803[341] = 0;
   out_5021697117202483803[342] = 0;
   out_5021697117202483803[343] = 0;
   out_5021697117202483803[344] = 0;
   out_5021697117202483803[345] = 0;
   out_5021697117202483803[346] = 0;
   out_5021697117202483803[347] = 0;
   out_5021697117202483803[348] = 0;
   out_5021697117202483803[349] = 0;
   out_5021697117202483803[350] = 0;
   out_5021697117202483803[351] = 0;
   out_5021697117202483803[352] = 1;
   out_5021697117202483803[353] = 0;
   out_5021697117202483803[354] = 0;
   out_5021697117202483803[355] = 0;
   out_5021697117202483803[356] = 0;
   out_5021697117202483803[357] = 0;
   out_5021697117202483803[358] = 0;
   out_5021697117202483803[359] = 0;
   out_5021697117202483803[360] = 0;
   out_5021697117202483803[361] = 0;
   out_5021697117202483803[362] = 0;
   out_5021697117202483803[363] = 0;
   out_5021697117202483803[364] = 0;
   out_5021697117202483803[365] = 0;
   out_5021697117202483803[366] = 0;
   out_5021697117202483803[367] = 0;
   out_5021697117202483803[368] = 0;
   out_5021697117202483803[369] = 0;
   out_5021697117202483803[370] = 0;
   out_5021697117202483803[371] = 0;
   out_5021697117202483803[372] = 0;
   out_5021697117202483803[373] = 0;
   out_5021697117202483803[374] = 1;
   out_5021697117202483803[375] = 0;
   out_5021697117202483803[376] = 0;
   out_5021697117202483803[377] = 0;
   out_5021697117202483803[378] = 0;
   out_5021697117202483803[379] = 0;
   out_5021697117202483803[380] = 0;
   out_5021697117202483803[381] = 0;
   out_5021697117202483803[382] = 0;
   out_5021697117202483803[383] = 0;
   out_5021697117202483803[384] = 0;
   out_5021697117202483803[385] = 0;
   out_5021697117202483803[386] = 0;
   out_5021697117202483803[387] = 0;
   out_5021697117202483803[388] = 0;
   out_5021697117202483803[389] = 0;
   out_5021697117202483803[390] = 0;
   out_5021697117202483803[391] = 0;
   out_5021697117202483803[392] = 0;
   out_5021697117202483803[393] = 0;
   out_5021697117202483803[394] = 0;
   out_5021697117202483803[395] = 0;
   out_5021697117202483803[396] = 1;
   out_5021697117202483803[397] = 0;
   out_5021697117202483803[398] = 0;
   out_5021697117202483803[399] = 0;
   out_5021697117202483803[400] = 0;
   out_5021697117202483803[401] = 0;
   out_5021697117202483803[402] = 0;
   out_5021697117202483803[403] = 0;
   out_5021697117202483803[404] = 0;
   out_5021697117202483803[405] = 0;
   out_5021697117202483803[406] = 0;
   out_5021697117202483803[407] = 0;
   out_5021697117202483803[408] = 0;
   out_5021697117202483803[409] = 0;
   out_5021697117202483803[410] = 0;
   out_5021697117202483803[411] = 0;
   out_5021697117202483803[412] = 0;
   out_5021697117202483803[413] = 0;
   out_5021697117202483803[414] = 0;
   out_5021697117202483803[415] = 0;
   out_5021697117202483803[416] = 0;
   out_5021697117202483803[417] = 0;
   out_5021697117202483803[418] = 1;
   out_5021697117202483803[419] = 0;
   out_5021697117202483803[420] = 0;
   out_5021697117202483803[421] = 0;
   out_5021697117202483803[422] = 0;
   out_5021697117202483803[423] = 0;
   out_5021697117202483803[424] = 0;
   out_5021697117202483803[425] = 0;
   out_5021697117202483803[426] = 0;
   out_5021697117202483803[427] = 0;
   out_5021697117202483803[428] = 0;
   out_5021697117202483803[429] = 0;
   out_5021697117202483803[430] = 0;
   out_5021697117202483803[431] = 0;
   out_5021697117202483803[432] = 0;
   out_5021697117202483803[433] = 0;
   out_5021697117202483803[434] = 0;
   out_5021697117202483803[435] = 0;
   out_5021697117202483803[436] = 0;
   out_5021697117202483803[437] = 0;
   out_5021697117202483803[438] = 0;
   out_5021697117202483803[439] = 0;
   out_5021697117202483803[440] = 1;
}
void h_4(double *state, double *unused, double *out_7575519598094397122) {
   out_7575519598094397122[0] = state[10] + state[13];
   out_7575519598094397122[1] = state[11] + state[14];
   out_7575519598094397122[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2572543162658106509) {
   out_2572543162658106509[0] = 0;
   out_2572543162658106509[1] = 0;
   out_2572543162658106509[2] = 0;
   out_2572543162658106509[3] = 0;
   out_2572543162658106509[4] = 0;
   out_2572543162658106509[5] = 0;
   out_2572543162658106509[6] = 0;
   out_2572543162658106509[7] = 0;
   out_2572543162658106509[8] = 0;
   out_2572543162658106509[9] = 0;
   out_2572543162658106509[10] = 1;
   out_2572543162658106509[11] = 0;
   out_2572543162658106509[12] = 0;
   out_2572543162658106509[13] = 1;
   out_2572543162658106509[14] = 0;
   out_2572543162658106509[15] = 0;
   out_2572543162658106509[16] = 0;
   out_2572543162658106509[17] = 0;
   out_2572543162658106509[18] = 0;
   out_2572543162658106509[19] = 0;
   out_2572543162658106509[20] = 0;
   out_2572543162658106509[21] = 0;
   out_2572543162658106509[22] = 0;
   out_2572543162658106509[23] = 0;
   out_2572543162658106509[24] = 0;
   out_2572543162658106509[25] = 0;
   out_2572543162658106509[26] = 0;
   out_2572543162658106509[27] = 0;
   out_2572543162658106509[28] = 0;
   out_2572543162658106509[29] = 0;
   out_2572543162658106509[30] = 0;
   out_2572543162658106509[31] = 0;
   out_2572543162658106509[32] = 0;
   out_2572543162658106509[33] = 1;
   out_2572543162658106509[34] = 0;
   out_2572543162658106509[35] = 0;
   out_2572543162658106509[36] = 1;
   out_2572543162658106509[37] = 0;
   out_2572543162658106509[38] = 0;
   out_2572543162658106509[39] = 0;
   out_2572543162658106509[40] = 0;
   out_2572543162658106509[41] = 0;
   out_2572543162658106509[42] = 0;
   out_2572543162658106509[43] = 0;
   out_2572543162658106509[44] = 0;
   out_2572543162658106509[45] = 0;
   out_2572543162658106509[46] = 0;
   out_2572543162658106509[47] = 0;
   out_2572543162658106509[48] = 0;
   out_2572543162658106509[49] = 0;
   out_2572543162658106509[50] = 0;
   out_2572543162658106509[51] = 0;
   out_2572543162658106509[52] = 0;
   out_2572543162658106509[53] = 0;
   out_2572543162658106509[54] = 0;
   out_2572543162658106509[55] = 0;
   out_2572543162658106509[56] = 1;
   out_2572543162658106509[57] = 0;
   out_2572543162658106509[58] = 0;
   out_2572543162658106509[59] = 1;
   out_2572543162658106509[60] = 0;
   out_2572543162658106509[61] = 0;
   out_2572543162658106509[62] = 0;
   out_2572543162658106509[63] = 0;
   out_2572543162658106509[64] = 0;
   out_2572543162658106509[65] = 0;
}
void h_9(double *state, double *unused, double *out_289586171280812220) {
   out_289586171280812220[0] = state[10];
   out_289586171280812220[1] = state[11];
   out_289586171280812220[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8586981975786997637) {
   out_8586981975786997637[0] = 0;
   out_8586981975786997637[1] = 0;
   out_8586981975786997637[2] = 0;
   out_8586981975786997637[3] = 0;
   out_8586981975786997637[4] = 0;
   out_8586981975786997637[5] = 0;
   out_8586981975786997637[6] = 0;
   out_8586981975786997637[7] = 0;
   out_8586981975786997637[8] = 0;
   out_8586981975786997637[9] = 0;
   out_8586981975786997637[10] = 1;
   out_8586981975786997637[11] = 0;
   out_8586981975786997637[12] = 0;
   out_8586981975786997637[13] = 0;
   out_8586981975786997637[14] = 0;
   out_8586981975786997637[15] = 0;
   out_8586981975786997637[16] = 0;
   out_8586981975786997637[17] = 0;
   out_8586981975786997637[18] = 0;
   out_8586981975786997637[19] = 0;
   out_8586981975786997637[20] = 0;
   out_8586981975786997637[21] = 0;
   out_8586981975786997637[22] = 0;
   out_8586981975786997637[23] = 0;
   out_8586981975786997637[24] = 0;
   out_8586981975786997637[25] = 0;
   out_8586981975786997637[26] = 0;
   out_8586981975786997637[27] = 0;
   out_8586981975786997637[28] = 0;
   out_8586981975786997637[29] = 0;
   out_8586981975786997637[30] = 0;
   out_8586981975786997637[31] = 0;
   out_8586981975786997637[32] = 0;
   out_8586981975786997637[33] = 1;
   out_8586981975786997637[34] = 0;
   out_8586981975786997637[35] = 0;
   out_8586981975786997637[36] = 0;
   out_8586981975786997637[37] = 0;
   out_8586981975786997637[38] = 0;
   out_8586981975786997637[39] = 0;
   out_8586981975786997637[40] = 0;
   out_8586981975786997637[41] = 0;
   out_8586981975786997637[42] = 0;
   out_8586981975786997637[43] = 0;
   out_8586981975786997637[44] = 0;
   out_8586981975786997637[45] = 0;
   out_8586981975786997637[46] = 0;
   out_8586981975786997637[47] = 0;
   out_8586981975786997637[48] = 0;
   out_8586981975786997637[49] = 0;
   out_8586981975786997637[50] = 0;
   out_8586981975786997637[51] = 0;
   out_8586981975786997637[52] = 0;
   out_8586981975786997637[53] = 0;
   out_8586981975786997637[54] = 0;
   out_8586981975786997637[55] = 0;
   out_8586981975786997637[56] = 1;
   out_8586981975786997637[57] = 0;
   out_8586981975786997637[58] = 0;
   out_8586981975786997637[59] = 0;
   out_8586981975786997637[60] = 0;
   out_8586981975786997637[61] = 0;
   out_8586981975786997637[62] = 0;
   out_8586981975786997637[63] = 0;
   out_8586981975786997637[64] = 0;
   out_8586981975786997637[65] = 0;
}
void h_10(double *state, double *unused, double *out_1468905659837071927) {
   out_1468905659837071927[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1468905659837071927[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1468905659837071927[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8143538164724119802) {
   out_8143538164724119802[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8143538164724119802[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8143538164724119802[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8143538164724119802[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8143538164724119802[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8143538164724119802[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8143538164724119802[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8143538164724119802[7] = 0;
   out_8143538164724119802[8] = 0;
   out_8143538164724119802[9] = 0;
   out_8143538164724119802[10] = 0;
   out_8143538164724119802[11] = 0;
   out_8143538164724119802[12] = 0;
   out_8143538164724119802[13] = 0;
   out_8143538164724119802[14] = 0;
   out_8143538164724119802[15] = 0;
   out_8143538164724119802[16] = 1;
   out_8143538164724119802[17] = 0;
   out_8143538164724119802[18] = 0;
   out_8143538164724119802[19] = 1;
   out_8143538164724119802[20] = 0;
   out_8143538164724119802[21] = 0;
   out_8143538164724119802[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8143538164724119802[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8143538164724119802[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8143538164724119802[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8143538164724119802[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8143538164724119802[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8143538164724119802[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8143538164724119802[29] = 0;
   out_8143538164724119802[30] = 0;
   out_8143538164724119802[31] = 0;
   out_8143538164724119802[32] = 0;
   out_8143538164724119802[33] = 0;
   out_8143538164724119802[34] = 0;
   out_8143538164724119802[35] = 0;
   out_8143538164724119802[36] = 0;
   out_8143538164724119802[37] = 0;
   out_8143538164724119802[38] = 0;
   out_8143538164724119802[39] = 1;
   out_8143538164724119802[40] = 0;
   out_8143538164724119802[41] = 0;
   out_8143538164724119802[42] = 1;
   out_8143538164724119802[43] = 0;
   out_8143538164724119802[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8143538164724119802[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8143538164724119802[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8143538164724119802[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8143538164724119802[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8143538164724119802[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8143538164724119802[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8143538164724119802[51] = 0;
   out_8143538164724119802[52] = 0;
   out_8143538164724119802[53] = 0;
   out_8143538164724119802[54] = 0;
   out_8143538164724119802[55] = 0;
   out_8143538164724119802[56] = 0;
   out_8143538164724119802[57] = 0;
   out_8143538164724119802[58] = 0;
   out_8143538164724119802[59] = 0;
   out_8143538164724119802[60] = 0;
   out_8143538164724119802[61] = 0;
   out_8143538164724119802[62] = 1;
   out_8143538164724119802[63] = 0;
   out_8143538164724119802[64] = 0;
   out_8143538164724119802[65] = 1;
}
void h_12(double *state, double *unused, double *out_8949021263684363832) {
   out_8949021263684363832[0] = state[0];
   out_8949021263684363832[1] = state[1];
   out_8949021263684363832[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7591999570690068304) {
   out_7591999570690068304[0] = 1;
   out_7591999570690068304[1] = 0;
   out_7591999570690068304[2] = 0;
   out_7591999570690068304[3] = 0;
   out_7591999570690068304[4] = 0;
   out_7591999570690068304[5] = 0;
   out_7591999570690068304[6] = 0;
   out_7591999570690068304[7] = 0;
   out_7591999570690068304[8] = 0;
   out_7591999570690068304[9] = 0;
   out_7591999570690068304[10] = 0;
   out_7591999570690068304[11] = 0;
   out_7591999570690068304[12] = 0;
   out_7591999570690068304[13] = 0;
   out_7591999570690068304[14] = 0;
   out_7591999570690068304[15] = 0;
   out_7591999570690068304[16] = 0;
   out_7591999570690068304[17] = 0;
   out_7591999570690068304[18] = 0;
   out_7591999570690068304[19] = 0;
   out_7591999570690068304[20] = 0;
   out_7591999570690068304[21] = 0;
   out_7591999570690068304[22] = 0;
   out_7591999570690068304[23] = 1;
   out_7591999570690068304[24] = 0;
   out_7591999570690068304[25] = 0;
   out_7591999570690068304[26] = 0;
   out_7591999570690068304[27] = 0;
   out_7591999570690068304[28] = 0;
   out_7591999570690068304[29] = 0;
   out_7591999570690068304[30] = 0;
   out_7591999570690068304[31] = 0;
   out_7591999570690068304[32] = 0;
   out_7591999570690068304[33] = 0;
   out_7591999570690068304[34] = 0;
   out_7591999570690068304[35] = 0;
   out_7591999570690068304[36] = 0;
   out_7591999570690068304[37] = 0;
   out_7591999570690068304[38] = 0;
   out_7591999570690068304[39] = 0;
   out_7591999570690068304[40] = 0;
   out_7591999570690068304[41] = 0;
   out_7591999570690068304[42] = 0;
   out_7591999570690068304[43] = 0;
   out_7591999570690068304[44] = 0;
   out_7591999570690068304[45] = 0;
   out_7591999570690068304[46] = 1;
   out_7591999570690068304[47] = 0;
   out_7591999570690068304[48] = 0;
   out_7591999570690068304[49] = 0;
   out_7591999570690068304[50] = 0;
   out_7591999570690068304[51] = 0;
   out_7591999570690068304[52] = 0;
   out_7591999570690068304[53] = 0;
   out_7591999570690068304[54] = 0;
   out_7591999570690068304[55] = 0;
   out_7591999570690068304[56] = 0;
   out_7591999570690068304[57] = 0;
   out_7591999570690068304[58] = 0;
   out_7591999570690068304[59] = 0;
   out_7591999570690068304[60] = 0;
   out_7591999570690068304[61] = 0;
   out_7591999570690068304[62] = 0;
   out_7591999570690068304[63] = 0;
   out_7591999570690068304[64] = 0;
   out_7591999570690068304[65] = 0;
}
void h_35(double *state, double *unused, double *out_4015960998823172591) {
   out_4015960998823172591[0] = state[7];
   out_4015960998823172591[1] = state[8];
   out_4015960998823172591[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5939205220030713885) {
   out_5939205220030713885[0] = 0;
   out_5939205220030713885[1] = 0;
   out_5939205220030713885[2] = 0;
   out_5939205220030713885[3] = 0;
   out_5939205220030713885[4] = 0;
   out_5939205220030713885[5] = 0;
   out_5939205220030713885[6] = 0;
   out_5939205220030713885[7] = 1;
   out_5939205220030713885[8] = 0;
   out_5939205220030713885[9] = 0;
   out_5939205220030713885[10] = 0;
   out_5939205220030713885[11] = 0;
   out_5939205220030713885[12] = 0;
   out_5939205220030713885[13] = 0;
   out_5939205220030713885[14] = 0;
   out_5939205220030713885[15] = 0;
   out_5939205220030713885[16] = 0;
   out_5939205220030713885[17] = 0;
   out_5939205220030713885[18] = 0;
   out_5939205220030713885[19] = 0;
   out_5939205220030713885[20] = 0;
   out_5939205220030713885[21] = 0;
   out_5939205220030713885[22] = 0;
   out_5939205220030713885[23] = 0;
   out_5939205220030713885[24] = 0;
   out_5939205220030713885[25] = 0;
   out_5939205220030713885[26] = 0;
   out_5939205220030713885[27] = 0;
   out_5939205220030713885[28] = 0;
   out_5939205220030713885[29] = 0;
   out_5939205220030713885[30] = 1;
   out_5939205220030713885[31] = 0;
   out_5939205220030713885[32] = 0;
   out_5939205220030713885[33] = 0;
   out_5939205220030713885[34] = 0;
   out_5939205220030713885[35] = 0;
   out_5939205220030713885[36] = 0;
   out_5939205220030713885[37] = 0;
   out_5939205220030713885[38] = 0;
   out_5939205220030713885[39] = 0;
   out_5939205220030713885[40] = 0;
   out_5939205220030713885[41] = 0;
   out_5939205220030713885[42] = 0;
   out_5939205220030713885[43] = 0;
   out_5939205220030713885[44] = 0;
   out_5939205220030713885[45] = 0;
   out_5939205220030713885[46] = 0;
   out_5939205220030713885[47] = 0;
   out_5939205220030713885[48] = 0;
   out_5939205220030713885[49] = 0;
   out_5939205220030713885[50] = 0;
   out_5939205220030713885[51] = 0;
   out_5939205220030713885[52] = 0;
   out_5939205220030713885[53] = 1;
   out_5939205220030713885[54] = 0;
   out_5939205220030713885[55] = 0;
   out_5939205220030713885[56] = 0;
   out_5939205220030713885[57] = 0;
   out_5939205220030713885[58] = 0;
   out_5939205220030713885[59] = 0;
   out_5939205220030713885[60] = 0;
   out_5939205220030713885[61] = 0;
   out_5939205220030713885[62] = 0;
   out_5939205220030713885[63] = 0;
   out_5939205220030713885[64] = 0;
   out_5939205220030713885[65] = 0;
}
void h_32(double *state, double *unused, double *out_5842724540973150969) {
   out_5842724540973150969[0] = state[3];
   out_5842724540973150969[1] = state[4];
   out_5842724540973150969[2] = state[5];
   out_5842724540973150969[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1720505982358804815) {
   out_1720505982358804815[0] = 0;
   out_1720505982358804815[1] = 0;
   out_1720505982358804815[2] = 0;
   out_1720505982358804815[3] = 1;
   out_1720505982358804815[4] = 0;
   out_1720505982358804815[5] = 0;
   out_1720505982358804815[6] = 0;
   out_1720505982358804815[7] = 0;
   out_1720505982358804815[8] = 0;
   out_1720505982358804815[9] = 0;
   out_1720505982358804815[10] = 0;
   out_1720505982358804815[11] = 0;
   out_1720505982358804815[12] = 0;
   out_1720505982358804815[13] = 0;
   out_1720505982358804815[14] = 0;
   out_1720505982358804815[15] = 0;
   out_1720505982358804815[16] = 0;
   out_1720505982358804815[17] = 0;
   out_1720505982358804815[18] = 0;
   out_1720505982358804815[19] = 0;
   out_1720505982358804815[20] = 0;
   out_1720505982358804815[21] = 0;
   out_1720505982358804815[22] = 0;
   out_1720505982358804815[23] = 0;
   out_1720505982358804815[24] = 0;
   out_1720505982358804815[25] = 0;
   out_1720505982358804815[26] = 1;
   out_1720505982358804815[27] = 0;
   out_1720505982358804815[28] = 0;
   out_1720505982358804815[29] = 0;
   out_1720505982358804815[30] = 0;
   out_1720505982358804815[31] = 0;
   out_1720505982358804815[32] = 0;
   out_1720505982358804815[33] = 0;
   out_1720505982358804815[34] = 0;
   out_1720505982358804815[35] = 0;
   out_1720505982358804815[36] = 0;
   out_1720505982358804815[37] = 0;
   out_1720505982358804815[38] = 0;
   out_1720505982358804815[39] = 0;
   out_1720505982358804815[40] = 0;
   out_1720505982358804815[41] = 0;
   out_1720505982358804815[42] = 0;
   out_1720505982358804815[43] = 0;
   out_1720505982358804815[44] = 0;
   out_1720505982358804815[45] = 0;
   out_1720505982358804815[46] = 0;
   out_1720505982358804815[47] = 0;
   out_1720505982358804815[48] = 0;
   out_1720505982358804815[49] = 1;
   out_1720505982358804815[50] = 0;
   out_1720505982358804815[51] = 0;
   out_1720505982358804815[52] = 0;
   out_1720505982358804815[53] = 0;
   out_1720505982358804815[54] = 0;
   out_1720505982358804815[55] = 0;
   out_1720505982358804815[56] = 0;
   out_1720505982358804815[57] = 0;
   out_1720505982358804815[58] = 0;
   out_1720505982358804815[59] = 0;
   out_1720505982358804815[60] = 0;
   out_1720505982358804815[61] = 0;
   out_1720505982358804815[62] = 0;
   out_1720505982358804815[63] = 0;
   out_1720505982358804815[64] = 0;
   out_1720505982358804815[65] = 0;
   out_1720505982358804815[66] = 0;
   out_1720505982358804815[67] = 0;
   out_1720505982358804815[68] = 0;
   out_1720505982358804815[69] = 0;
   out_1720505982358804815[70] = 0;
   out_1720505982358804815[71] = 0;
   out_1720505982358804815[72] = 1;
   out_1720505982358804815[73] = 0;
   out_1720505982358804815[74] = 0;
   out_1720505982358804815[75] = 0;
   out_1720505982358804815[76] = 0;
   out_1720505982358804815[77] = 0;
   out_1720505982358804815[78] = 0;
   out_1720505982358804815[79] = 0;
   out_1720505982358804815[80] = 0;
   out_1720505982358804815[81] = 0;
   out_1720505982358804815[82] = 0;
   out_1720505982358804815[83] = 0;
   out_1720505982358804815[84] = 0;
   out_1720505982358804815[85] = 0;
   out_1720505982358804815[86] = 0;
   out_1720505982358804815[87] = 0;
}
void h_13(double *state, double *unused, double *out_2099026812676065914) {
   out_2099026812676065914[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2099026812676065914[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2099026812676065914[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1924990768107862603) {
   out_1924990768107862603[0] = 0;
   out_1924990768107862603[1] = 0;
   out_1924990768107862603[2] = 0;
   out_1924990768107862603[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1924990768107862603[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1924990768107862603[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1924990768107862603[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1924990768107862603[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1924990768107862603[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1924990768107862603[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1924990768107862603[10] = 0;
   out_1924990768107862603[11] = 0;
   out_1924990768107862603[12] = 0;
   out_1924990768107862603[13] = 0;
   out_1924990768107862603[14] = 0;
   out_1924990768107862603[15] = 0;
   out_1924990768107862603[16] = 0;
   out_1924990768107862603[17] = 0;
   out_1924990768107862603[18] = 0;
   out_1924990768107862603[19] = 0;
   out_1924990768107862603[20] = 0;
   out_1924990768107862603[21] = 0;
   out_1924990768107862603[22] = 0;
   out_1924990768107862603[23] = 0;
   out_1924990768107862603[24] = 0;
   out_1924990768107862603[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1924990768107862603[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1924990768107862603[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1924990768107862603[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1924990768107862603[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1924990768107862603[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1924990768107862603[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1924990768107862603[32] = 0;
   out_1924990768107862603[33] = 0;
   out_1924990768107862603[34] = 0;
   out_1924990768107862603[35] = 0;
   out_1924990768107862603[36] = 0;
   out_1924990768107862603[37] = 0;
   out_1924990768107862603[38] = 0;
   out_1924990768107862603[39] = 0;
   out_1924990768107862603[40] = 0;
   out_1924990768107862603[41] = 0;
   out_1924990768107862603[42] = 0;
   out_1924990768107862603[43] = 0;
   out_1924990768107862603[44] = 0;
   out_1924990768107862603[45] = 0;
   out_1924990768107862603[46] = 0;
   out_1924990768107862603[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1924990768107862603[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1924990768107862603[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1924990768107862603[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1924990768107862603[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1924990768107862603[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1924990768107862603[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1924990768107862603[54] = 0;
   out_1924990768107862603[55] = 0;
   out_1924990768107862603[56] = 0;
   out_1924990768107862603[57] = 0;
   out_1924990768107862603[58] = 0;
   out_1924990768107862603[59] = 0;
   out_1924990768107862603[60] = 0;
   out_1924990768107862603[61] = 0;
   out_1924990768107862603[62] = 0;
   out_1924990768107862603[63] = 0;
   out_1924990768107862603[64] = 0;
   out_1924990768107862603[65] = 0;
}
void h_14(double *state, double *unused, double *out_289586171280812220) {
   out_289586171280812220[0] = state[10];
   out_289586171280812220[1] = state[11];
   out_289586171280812220[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8586981975786997637) {
   out_8586981975786997637[0] = 0;
   out_8586981975786997637[1] = 0;
   out_8586981975786997637[2] = 0;
   out_8586981975786997637[3] = 0;
   out_8586981975786997637[4] = 0;
   out_8586981975786997637[5] = 0;
   out_8586981975786997637[6] = 0;
   out_8586981975786997637[7] = 0;
   out_8586981975786997637[8] = 0;
   out_8586981975786997637[9] = 0;
   out_8586981975786997637[10] = 1;
   out_8586981975786997637[11] = 0;
   out_8586981975786997637[12] = 0;
   out_8586981975786997637[13] = 0;
   out_8586981975786997637[14] = 0;
   out_8586981975786997637[15] = 0;
   out_8586981975786997637[16] = 0;
   out_8586981975786997637[17] = 0;
   out_8586981975786997637[18] = 0;
   out_8586981975786997637[19] = 0;
   out_8586981975786997637[20] = 0;
   out_8586981975786997637[21] = 0;
   out_8586981975786997637[22] = 0;
   out_8586981975786997637[23] = 0;
   out_8586981975786997637[24] = 0;
   out_8586981975786997637[25] = 0;
   out_8586981975786997637[26] = 0;
   out_8586981975786997637[27] = 0;
   out_8586981975786997637[28] = 0;
   out_8586981975786997637[29] = 0;
   out_8586981975786997637[30] = 0;
   out_8586981975786997637[31] = 0;
   out_8586981975786997637[32] = 0;
   out_8586981975786997637[33] = 1;
   out_8586981975786997637[34] = 0;
   out_8586981975786997637[35] = 0;
   out_8586981975786997637[36] = 0;
   out_8586981975786997637[37] = 0;
   out_8586981975786997637[38] = 0;
   out_8586981975786997637[39] = 0;
   out_8586981975786997637[40] = 0;
   out_8586981975786997637[41] = 0;
   out_8586981975786997637[42] = 0;
   out_8586981975786997637[43] = 0;
   out_8586981975786997637[44] = 0;
   out_8586981975786997637[45] = 0;
   out_8586981975786997637[46] = 0;
   out_8586981975786997637[47] = 0;
   out_8586981975786997637[48] = 0;
   out_8586981975786997637[49] = 0;
   out_8586981975786997637[50] = 0;
   out_8586981975786997637[51] = 0;
   out_8586981975786997637[52] = 0;
   out_8586981975786997637[53] = 0;
   out_8586981975786997637[54] = 0;
   out_8586981975786997637[55] = 0;
   out_8586981975786997637[56] = 1;
   out_8586981975786997637[57] = 0;
   out_8586981975786997637[58] = 0;
   out_8586981975786997637[59] = 0;
   out_8586981975786997637[60] = 0;
   out_8586981975786997637[61] = 0;
   out_8586981975786997637[62] = 0;
   out_8586981975786997637[63] = 0;
   out_8586981975786997637[64] = 0;
   out_8586981975786997637[65] = 0;
}
void h_33(double *state, double *unused, double *out_7495900128305509326) {
   out_7495900128305509326[0] = state[16];
   out_7495900128305509326[1] = state[17];
   out_7495900128305509326[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9089762224669571489) {
   out_9089762224669571489[0] = 0;
   out_9089762224669571489[1] = 0;
   out_9089762224669571489[2] = 0;
   out_9089762224669571489[3] = 0;
   out_9089762224669571489[4] = 0;
   out_9089762224669571489[5] = 0;
   out_9089762224669571489[6] = 0;
   out_9089762224669571489[7] = 0;
   out_9089762224669571489[8] = 0;
   out_9089762224669571489[9] = 0;
   out_9089762224669571489[10] = 0;
   out_9089762224669571489[11] = 0;
   out_9089762224669571489[12] = 0;
   out_9089762224669571489[13] = 0;
   out_9089762224669571489[14] = 0;
   out_9089762224669571489[15] = 0;
   out_9089762224669571489[16] = 1;
   out_9089762224669571489[17] = 0;
   out_9089762224669571489[18] = 0;
   out_9089762224669571489[19] = 0;
   out_9089762224669571489[20] = 0;
   out_9089762224669571489[21] = 0;
   out_9089762224669571489[22] = 0;
   out_9089762224669571489[23] = 0;
   out_9089762224669571489[24] = 0;
   out_9089762224669571489[25] = 0;
   out_9089762224669571489[26] = 0;
   out_9089762224669571489[27] = 0;
   out_9089762224669571489[28] = 0;
   out_9089762224669571489[29] = 0;
   out_9089762224669571489[30] = 0;
   out_9089762224669571489[31] = 0;
   out_9089762224669571489[32] = 0;
   out_9089762224669571489[33] = 0;
   out_9089762224669571489[34] = 0;
   out_9089762224669571489[35] = 0;
   out_9089762224669571489[36] = 0;
   out_9089762224669571489[37] = 0;
   out_9089762224669571489[38] = 0;
   out_9089762224669571489[39] = 1;
   out_9089762224669571489[40] = 0;
   out_9089762224669571489[41] = 0;
   out_9089762224669571489[42] = 0;
   out_9089762224669571489[43] = 0;
   out_9089762224669571489[44] = 0;
   out_9089762224669571489[45] = 0;
   out_9089762224669571489[46] = 0;
   out_9089762224669571489[47] = 0;
   out_9089762224669571489[48] = 0;
   out_9089762224669571489[49] = 0;
   out_9089762224669571489[50] = 0;
   out_9089762224669571489[51] = 0;
   out_9089762224669571489[52] = 0;
   out_9089762224669571489[53] = 0;
   out_9089762224669571489[54] = 0;
   out_9089762224669571489[55] = 0;
   out_9089762224669571489[56] = 0;
   out_9089762224669571489[57] = 0;
   out_9089762224669571489[58] = 0;
   out_9089762224669571489[59] = 0;
   out_9089762224669571489[60] = 0;
   out_9089762224669571489[61] = 0;
   out_9089762224669571489[62] = 1;
   out_9089762224669571489[63] = 0;
   out_9089762224669571489[64] = 0;
   out_9089762224669571489[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_968011467570668732) {
  H(in_vec, out_968011467570668732);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6037579360156852475) {
  err_fun(nom_x, delta_x, out_6037579360156852475);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7864497656021003597) {
  inv_err_fun(nom_x, true_x, out_7864497656021003597);
}
void live_H_mod_fun(double *state, double *out_2010250974602982044) {
  H_mod_fun(state, out_2010250974602982044);
}
void live_f_fun(double *state, double dt, double *out_5437099138004693151) {
  f_fun(state,  dt, out_5437099138004693151);
}
void live_F_fun(double *state, double dt, double *out_5021697117202483803) {
  F_fun(state,  dt, out_5021697117202483803);
}
void live_h_4(double *state, double *unused, double *out_7575519598094397122) {
  h_4(state, unused, out_7575519598094397122);
}
void live_H_4(double *state, double *unused, double *out_2572543162658106509) {
  H_4(state, unused, out_2572543162658106509);
}
void live_h_9(double *state, double *unused, double *out_289586171280812220) {
  h_9(state, unused, out_289586171280812220);
}
void live_H_9(double *state, double *unused, double *out_8586981975786997637) {
  H_9(state, unused, out_8586981975786997637);
}
void live_h_10(double *state, double *unused, double *out_1468905659837071927) {
  h_10(state, unused, out_1468905659837071927);
}
void live_H_10(double *state, double *unused, double *out_8143538164724119802) {
  H_10(state, unused, out_8143538164724119802);
}
void live_h_12(double *state, double *unused, double *out_8949021263684363832) {
  h_12(state, unused, out_8949021263684363832);
}
void live_H_12(double *state, double *unused, double *out_7591999570690068304) {
  H_12(state, unused, out_7591999570690068304);
}
void live_h_35(double *state, double *unused, double *out_4015960998823172591) {
  h_35(state, unused, out_4015960998823172591);
}
void live_H_35(double *state, double *unused, double *out_5939205220030713885) {
  H_35(state, unused, out_5939205220030713885);
}
void live_h_32(double *state, double *unused, double *out_5842724540973150969) {
  h_32(state, unused, out_5842724540973150969);
}
void live_H_32(double *state, double *unused, double *out_1720505982358804815) {
  H_32(state, unused, out_1720505982358804815);
}
void live_h_13(double *state, double *unused, double *out_2099026812676065914) {
  h_13(state, unused, out_2099026812676065914);
}
void live_H_13(double *state, double *unused, double *out_1924990768107862603) {
  H_13(state, unused, out_1924990768107862603);
}
void live_h_14(double *state, double *unused, double *out_289586171280812220) {
  h_14(state, unused, out_289586171280812220);
}
void live_H_14(double *state, double *unused, double *out_8586981975786997637) {
  H_14(state, unused, out_8586981975786997637);
}
void live_h_33(double *state, double *unused, double *out_7495900128305509326) {
  h_33(state, unused, out_7495900128305509326);
}
void live_H_33(double *state, double *unused, double *out_9089762224669571489) {
  H_33(state, unused, out_9089762224669571489);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
