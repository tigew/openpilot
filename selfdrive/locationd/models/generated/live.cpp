#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2932638753638069008) {
   out_2932638753638069008[0] = 0;
   out_2932638753638069008[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2932638753638069008[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2932638753638069008[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2932638753638069008[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2932638753638069008[5] = -sin(in_vec[1]);
   out_2932638753638069008[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2932638753638069008[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2932638753638069008[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2932638753638069008[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2932638753638069008[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2932638753638069008[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2932638753638069008[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2932638753638069008[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2932638753638069008[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2932638753638069008[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2932638753638069008[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2932638753638069008[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3082778792051611074) {
   out_3082778792051611074[0] = delta_x[0] + nom_x[0];
   out_3082778792051611074[1] = delta_x[1] + nom_x[1];
   out_3082778792051611074[2] = delta_x[2] + nom_x[2];
   out_3082778792051611074[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3082778792051611074[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3082778792051611074[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3082778792051611074[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3082778792051611074[7] = delta_x[6] + nom_x[7];
   out_3082778792051611074[8] = delta_x[7] + nom_x[8];
   out_3082778792051611074[9] = delta_x[8] + nom_x[9];
   out_3082778792051611074[10] = delta_x[9] + nom_x[10];
   out_3082778792051611074[11] = delta_x[10] + nom_x[11];
   out_3082778792051611074[12] = delta_x[11] + nom_x[12];
   out_3082778792051611074[13] = delta_x[12] + nom_x[13];
   out_3082778792051611074[14] = delta_x[13] + nom_x[14];
   out_3082778792051611074[15] = delta_x[14] + nom_x[15];
   out_3082778792051611074[16] = delta_x[15] + nom_x[16];
   out_3082778792051611074[17] = delta_x[16] + nom_x[17];
   out_3082778792051611074[18] = delta_x[17] + nom_x[18];
   out_3082778792051611074[19] = delta_x[18] + nom_x[19];
   out_3082778792051611074[20] = delta_x[19] + nom_x[20];
   out_3082778792051611074[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5124076748781897325) {
   out_5124076748781897325[0] = -nom_x[0] + true_x[0];
   out_5124076748781897325[1] = -nom_x[1] + true_x[1];
   out_5124076748781897325[2] = -nom_x[2] + true_x[2];
   out_5124076748781897325[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5124076748781897325[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5124076748781897325[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5124076748781897325[6] = -nom_x[7] + true_x[7];
   out_5124076748781897325[7] = -nom_x[8] + true_x[8];
   out_5124076748781897325[8] = -nom_x[9] + true_x[9];
   out_5124076748781897325[9] = -nom_x[10] + true_x[10];
   out_5124076748781897325[10] = -nom_x[11] + true_x[11];
   out_5124076748781897325[11] = -nom_x[12] + true_x[12];
   out_5124076748781897325[12] = -nom_x[13] + true_x[13];
   out_5124076748781897325[13] = -nom_x[14] + true_x[14];
   out_5124076748781897325[14] = -nom_x[15] + true_x[15];
   out_5124076748781897325[15] = -nom_x[16] + true_x[16];
   out_5124076748781897325[16] = -nom_x[17] + true_x[17];
   out_5124076748781897325[17] = -nom_x[18] + true_x[18];
   out_5124076748781897325[18] = -nom_x[19] + true_x[19];
   out_5124076748781897325[19] = -nom_x[20] + true_x[20];
   out_5124076748781897325[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1613094616844734651) {
   out_1613094616844734651[0] = 1.0;
   out_1613094616844734651[1] = 0;
   out_1613094616844734651[2] = 0;
   out_1613094616844734651[3] = 0;
   out_1613094616844734651[4] = 0;
   out_1613094616844734651[5] = 0;
   out_1613094616844734651[6] = 0;
   out_1613094616844734651[7] = 0;
   out_1613094616844734651[8] = 0;
   out_1613094616844734651[9] = 0;
   out_1613094616844734651[10] = 0;
   out_1613094616844734651[11] = 0;
   out_1613094616844734651[12] = 0;
   out_1613094616844734651[13] = 0;
   out_1613094616844734651[14] = 0;
   out_1613094616844734651[15] = 0;
   out_1613094616844734651[16] = 0;
   out_1613094616844734651[17] = 0;
   out_1613094616844734651[18] = 0;
   out_1613094616844734651[19] = 0;
   out_1613094616844734651[20] = 0;
   out_1613094616844734651[21] = 0;
   out_1613094616844734651[22] = 1.0;
   out_1613094616844734651[23] = 0;
   out_1613094616844734651[24] = 0;
   out_1613094616844734651[25] = 0;
   out_1613094616844734651[26] = 0;
   out_1613094616844734651[27] = 0;
   out_1613094616844734651[28] = 0;
   out_1613094616844734651[29] = 0;
   out_1613094616844734651[30] = 0;
   out_1613094616844734651[31] = 0;
   out_1613094616844734651[32] = 0;
   out_1613094616844734651[33] = 0;
   out_1613094616844734651[34] = 0;
   out_1613094616844734651[35] = 0;
   out_1613094616844734651[36] = 0;
   out_1613094616844734651[37] = 0;
   out_1613094616844734651[38] = 0;
   out_1613094616844734651[39] = 0;
   out_1613094616844734651[40] = 0;
   out_1613094616844734651[41] = 0;
   out_1613094616844734651[42] = 0;
   out_1613094616844734651[43] = 0;
   out_1613094616844734651[44] = 1.0;
   out_1613094616844734651[45] = 0;
   out_1613094616844734651[46] = 0;
   out_1613094616844734651[47] = 0;
   out_1613094616844734651[48] = 0;
   out_1613094616844734651[49] = 0;
   out_1613094616844734651[50] = 0;
   out_1613094616844734651[51] = 0;
   out_1613094616844734651[52] = 0;
   out_1613094616844734651[53] = 0;
   out_1613094616844734651[54] = 0;
   out_1613094616844734651[55] = 0;
   out_1613094616844734651[56] = 0;
   out_1613094616844734651[57] = 0;
   out_1613094616844734651[58] = 0;
   out_1613094616844734651[59] = 0;
   out_1613094616844734651[60] = 0;
   out_1613094616844734651[61] = 0;
   out_1613094616844734651[62] = 0;
   out_1613094616844734651[63] = 0;
   out_1613094616844734651[64] = 0;
   out_1613094616844734651[65] = 0;
   out_1613094616844734651[66] = -0.5*state[4];
   out_1613094616844734651[67] = -0.5*state[5];
   out_1613094616844734651[68] = -0.5*state[6];
   out_1613094616844734651[69] = 0;
   out_1613094616844734651[70] = 0;
   out_1613094616844734651[71] = 0;
   out_1613094616844734651[72] = 0;
   out_1613094616844734651[73] = 0;
   out_1613094616844734651[74] = 0;
   out_1613094616844734651[75] = 0;
   out_1613094616844734651[76] = 0;
   out_1613094616844734651[77] = 0;
   out_1613094616844734651[78] = 0;
   out_1613094616844734651[79] = 0;
   out_1613094616844734651[80] = 0;
   out_1613094616844734651[81] = 0;
   out_1613094616844734651[82] = 0;
   out_1613094616844734651[83] = 0;
   out_1613094616844734651[84] = 0;
   out_1613094616844734651[85] = 0;
   out_1613094616844734651[86] = 0;
   out_1613094616844734651[87] = 0.5*state[3];
   out_1613094616844734651[88] = 0.5*state[6];
   out_1613094616844734651[89] = -0.5*state[5];
   out_1613094616844734651[90] = 0;
   out_1613094616844734651[91] = 0;
   out_1613094616844734651[92] = 0;
   out_1613094616844734651[93] = 0;
   out_1613094616844734651[94] = 0;
   out_1613094616844734651[95] = 0;
   out_1613094616844734651[96] = 0;
   out_1613094616844734651[97] = 0;
   out_1613094616844734651[98] = 0;
   out_1613094616844734651[99] = 0;
   out_1613094616844734651[100] = 0;
   out_1613094616844734651[101] = 0;
   out_1613094616844734651[102] = 0;
   out_1613094616844734651[103] = 0;
   out_1613094616844734651[104] = 0;
   out_1613094616844734651[105] = 0;
   out_1613094616844734651[106] = 0;
   out_1613094616844734651[107] = 0;
   out_1613094616844734651[108] = -0.5*state[6];
   out_1613094616844734651[109] = 0.5*state[3];
   out_1613094616844734651[110] = 0.5*state[4];
   out_1613094616844734651[111] = 0;
   out_1613094616844734651[112] = 0;
   out_1613094616844734651[113] = 0;
   out_1613094616844734651[114] = 0;
   out_1613094616844734651[115] = 0;
   out_1613094616844734651[116] = 0;
   out_1613094616844734651[117] = 0;
   out_1613094616844734651[118] = 0;
   out_1613094616844734651[119] = 0;
   out_1613094616844734651[120] = 0;
   out_1613094616844734651[121] = 0;
   out_1613094616844734651[122] = 0;
   out_1613094616844734651[123] = 0;
   out_1613094616844734651[124] = 0;
   out_1613094616844734651[125] = 0;
   out_1613094616844734651[126] = 0;
   out_1613094616844734651[127] = 0;
   out_1613094616844734651[128] = 0;
   out_1613094616844734651[129] = 0.5*state[5];
   out_1613094616844734651[130] = -0.5*state[4];
   out_1613094616844734651[131] = 0.5*state[3];
   out_1613094616844734651[132] = 0;
   out_1613094616844734651[133] = 0;
   out_1613094616844734651[134] = 0;
   out_1613094616844734651[135] = 0;
   out_1613094616844734651[136] = 0;
   out_1613094616844734651[137] = 0;
   out_1613094616844734651[138] = 0;
   out_1613094616844734651[139] = 0;
   out_1613094616844734651[140] = 0;
   out_1613094616844734651[141] = 0;
   out_1613094616844734651[142] = 0;
   out_1613094616844734651[143] = 0;
   out_1613094616844734651[144] = 0;
   out_1613094616844734651[145] = 0;
   out_1613094616844734651[146] = 0;
   out_1613094616844734651[147] = 0;
   out_1613094616844734651[148] = 0;
   out_1613094616844734651[149] = 0;
   out_1613094616844734651[150] = 0;
   out_1613094616844734651[151] = 0;
   out_1613094616844734651[152] = 0;
   out_1613094616844734651[153] = 1.0;
   out_1613094616844734651[154] = 0;
   out_1613094616844734651[155] = 0;
   out_1613094616844734651[156] = 0;
   out_1613094616844734651[157] = 0;
   out_1613094616844734651[158] = 0;
   out_1613094616844734651[159] = 0;
   out_1613094616844734651[160] = 0;
   out_1613094616844734651[161] = 0;
   out_1613094616844734651[162] = 0;
   out_1613094616844734651[163] = 0;
   out_1613094616844734651[164] = 0;
   out_1613094616844734651[165] = 0;
   out_1613094616844734651[166] = 0;
   out_1613094616844734651[167] = 0;
   out_1613094616844734651[168] = 0;
   out_1613094616844734651[169] = 0;
   out_1613094616844734651[170] = 0;
   out_1613094616844734651[171] = 0;
   out_1613094616844734651[172] = 0;
   out_1613094616844734651[173] = 0;
   out_1613094616844734651[174] = 0;
   out_1613094616844734651[175] = 1.0;
   out_1613094616844734651[176] = 0;
   out_1613094616844734651[177] = 0;
   out_1613094616844734651[178] = 0;
   out_1613094616844734651[179] = 0;
   out_1613094616844734651[180] = 0;
   out_1613094616844734651[181] = 0;
   out_1613094616844734651[182] = 0;
   out_1613094616844734651[183] = 0;
   out_1613094616844734651[184] = 0;
   out_1613094616844734651[185] = 0;
   out_1613094616844734651[186] = 0;
   out_1613094616844734651[187] = 0;
   out_1613094616844734651[188] = 0;
   out_1613094616844734651[189] = 0;
   out_1613094616844734651[190] = 0;
   out_1613094616844734651[191] = 0;
   out_1613094616844734651[192] = 0;
   out_1613094616844734651[193] = 0;
   out_1613094616844734651[194] = 0;
   out_1613094616844734651[195] = 0;
   out_1613094616844734651[196] = 0;
   out_1613094616844734651[197] = 1.0;
   out_1613094616844734651[198] = 0;
   out_1613094616844734651[199] = 0;
   out_1613094616844734651[200] = 0;
   out_1613094616844734651[201] = 0;
   out_1613094616844734651[202] = 0;
   out_1613094616844734651[203] = 0;
   out_1613094616844734651[204] = 0;
   out_1613094616844734651[205] = 0;
   out_1613094616844734651[206] = 0;
   out_1613094616844734651[207] = 0;
   out_1613094616844734651[208] = 0;
   out_1613094616844734651[209] = 0;
   out_1613094616844734651[210] = 0;
   out_1613094616844734651[211] = 0;
   out_1613094616844734651[212] = 0;
   out_1613094616844734651[213] = 0;
   out_1613094616844734651[214] = 0;
   out_1613094616844734651[215] = 0;
   out_1613094616844734651[216] = 0;
   out_1613094616844734651[217] = 0;
   out_1613094616844734651[218] = 0;
   out_1613094616844734651[219] = 1.0;
   out_1613094616844734651[220] = 0;
   out_1613094616844734651[221] = 0;
   out_1613094616844734651[222] = 0;
   out_1613094616844734651[223] = 0;
   out_1613094616844734651[224] = 0;
   out_1613094616844734651[225] = 0;
   out_1613094616844734651[226] = 0;
   out_1613094616844734651[227] = 0;
   out_1613094616844734651[228] = 0;
   out_1613094616844734651[229] = 0;
   out_1613094616844734651[230] = 0;
   out_1613094616844734651[231] = 0;
   out_1613094616844734651[232] = 0;
   out_1613094616844734651[233] = 0;
   out_1613094616844734651[234] = 0;
   out_1613094616844734651[235] = 0;
   out_1613094616844734651[236] = 0;
   out_1613094616844734651[237] = 0;
   out_1613094616844734651[238] = 0;
   out_1613094616844734651[239] = 0;
   out_1613094616844734651[240] = 0;
   out_1613094616844734651[241] = 1.0;
   out_1613094616844734651[242] = 0;
   out_1613094616844734651[243] = 0;
   out_1613094616844734651[244] = 0;
   out_1613094616844734651[245] = 0;
   out_1613094616844734651[246] = 0;
   out_1613094616844734651[247] = 0;
   out_1613094616844734651[248] = 0;
   out_1613094616844734651[249] = 0;
   out_1613094616844734651[250] = 0;
   out_1613094616844734651[251] = 0;
   out_1613094616844734651[252] = 0;
   out_1613094616844734651[253] = 0;
   out_1613094616844734651[254] = 0;
   out_1613094616844734651[255] = 0;
   out_1613094616844734651[256] = 0;
   out_1613094616844734651[257] = 0;
   out_1613094616844734651[258] = 0;
   out_1613094616844734651[259] = 0;
   out_1613094616844734651[260] = 0;
   out_1613094616844734651[261] = 0;
   out_1613094616844734651[262] = 0;
   out_1613094616844734651[263] = 1.0;
   out_1613094616844734651[264] = 0;
   out_1613094616844734651[265] = 0;
   out_1613094616844734651[266] = 0;
   out_1613094616844734651[267] = 0;
   out_1613094616844734651[268] = 0;
   out_1613094616844734651[269] = 0;
   out_1613094616844734651[270] = 0;
   out_1613094616844734651[271] = 0;
   out_1613094616844734651[272] = 0;
   out_1613094616844734651[273] = 0;
   out_1613094616844734651[274] = 0;
   out_1613094616844734651[275] = 0;
   out_1613094616844734651[276] = 0;
   out_1613094616844734651[277] = 0;
   out_1613094616844734651[278] = 0;
   out_1613094616844734651[279] = 0;
   out_1613094616844734651[280] = 0;
   out_1613094616844734651[281] = 0;
   out_1613094616844734651[282] = 0;
   out_1613094616844734651[283] = 0;
   out_1613094616844734651[284] = 0;
   out_1613094616844734651[285] = 1.0;
   out_1613094616844734651[286] = 0;
   out_1613094616844734651[287] = 0;
   out_1613094616844734651[288] = 0;
   out_1613094616844734651[289] = 0;
   out_1613094616844734651[290] = 0;
   out_1613094616844734651[291] = 0;
   out_1613094616844734651[292] = 0;
   out_1613094616844734651[293] = 0;
   out_1613094616844734651[294] = 0;
   out_1613094616844734651[295] = 0;
   out_1613094616844734651[296] = 0;
   out_1613094616844734651[297] = 0;
   out_1613094616844734651[298] = 0;
   out_1613094616844734651[299] = 0;
   out_1613094616844734651[300] = 0;
   out_1613094616844734651[301] = 0;
   out_1613094616844734651[302] = 0;
   out_1613094616844734651[303] = 0;
   out_1613094616844734651[304] = 0;
   out_1613094616844734651[305] = 0;
   out_1613094616844734651[306] = 0;
   out_1613094616844734651[307] = 1.0;
   out_1613094616844734651[308] = 0;
   out_1613094616844734651[309] = 0;
   out_1613094616844734651[310] = 0;
   out_1613094616844734651[311] = 0;
   out_1613094616844734651[312] = 0;
   out_1613094616844734651[313] = 0;
   out_1613094616844734651[314] = 0;
   out_1613094616844734651[315] = 0;
   out_1613094616844734651[316] = 0;
   out_1613094616844734651[317] = 0;
   out_1613094616844734651[318] = 0;
   out_1613094616844734651[319] = 0;
   out_1613094616844734651[320] = 0;
   out_1613094616844734651[321] = 0;
   out_1613094616844734651[322] = 0;
   out_1613094616844734651[323] = 0;
   out_1613094616844734651[324] = 0;
   out_1613094616844734651[325] = 0;
   out_1613094616844734651[326] = 0;
   out_1613094616844734651[327] = 0;
   out_1613094616844734651[328] = 0;
   out_1613094616844734651[329] = 1.0;
   out_1613094616844734651[330] = 0;
   out_1613094616844734651[331] = 0;
   out_1613094616844734651[332] = 0;
   out_1613094616844734651[333] = 0;
   out_1613094616844734651[334] = 0;
   out_1613094616844734651[335] = 0;
   out_1613094616844734651[336] = 0;
   out_1613094616844734651[337] = 0;
   out_1613094616844734651[338] = 0;
   out_1613094616844734651[339] = 0;
   out_1613094616844734651[340] = 0;
   out_1613094616844734651[341] = 0;
   out_1613094616844734651[342] = 0;
   out_1613094616844734651[343] = 0;
   out_1613094616844734651[344] = 0;
   out_1613094616844734651[345] = 0;
   out_1613094616844734651[346] = 0;
   out_1613094616844734651[347] = 0;
   out_1613094616844734651[348] = 0;
   out_1613094616844734651[349] = 0;
   out_1613094616844734651[350] = 0;
   out_1613094616844734651[351] = 1.0;
   out_1613094616844734651[352] = 0;
   out_1613094616844734651[353] = 0;
   out_1613094616844734651[354] = 0;
   out_1613094616844734651[355] = 0;
   out_1613094616844734651[356] = 0;
   out_1613094616844734651[357] = 0;
   out_1613094616844734651[358] = 0;
   out_1613094616844734651[359] = 0;
   out_1613094616844734651[360] = 0;
   out_1613094616844734651[361] = 0;
   out_1613094616844734651[362] = 0;
   out_1613094616844734651[363] = 0;
   out_1613094616844734651[364] = 0;
   out_1613094616844734651[365] = 0;
   out_1613094616844734651[366] = 0;
   out_1613094616844734651[367] = 0;
   out_1613094616844734651[368] = 0;
   out_1613094616844734651[369] = 0;
   out_1613094616844734651[370] = 0;
   out_1613094616844734651[371] = 0;
   out_1613094616844734651[372] = 0;
   out_1613094616844734651[373] = 1.0;
   out_1613094616844734651[374] = 0;
   out_1613094616844734651[375] = 0;
   out_1613094616844734651[376] = 0;
   out_1613094616844734651[377] = 0;
   out_1613094616844734651[378] = 0;
   out_1613094616844734651[379] = 0;
   out_1613094616844734651[380] = 0;
   out_1613094616844734651[381] = 0;
   out_1613094616844734651[382] = 0;
   out_1613094616844734651[383] = 0;
   out_1613094616844734651[384] = 0;
   out_1613094616844734651[385] = 0;
   out_1613094616844734651[386] = 0;
   out_1613094616844734651[387] = 0;
   out_1613094616844734651[388] = 0;
   out_1613094616844734651[389] = 0;
   out_1613094616844734651[390] = 0;
   out_1613094616844734651[391] = 0;
   out_1613094616844734651[392] = 0;
   out_1613094616844734651[393] = 0;
   out_1613094616844734651[394] = 0;
   out_1613094616844734651[395] = 1.0;
   out_1613094616844734651[396] = 0;
   out_1613094616844734651[397] = 0;
   out_1613094616844734651[398] = 0;
   out_1613094616844734651[399] = 0;
   out_1613094616844734651[400] = 0;
   out_1613094616844734651[401] = 0;
   out_1613094616844734651[402] = 0;
   out_1613094616844734651[403] = 0;
   out_1613094616844734651[404] = 0;
   out_1613094616844734651[405] = 0;
   out_1613094616844734651[406] = 0;
   out_1613094616844734651[407] = 0;
   out_1613094616844734651[408] = 0;
   out_1613094616844734651[409] = 0;
   out_1613094616844734651[410] = 0;
   out_1613094616844734651[411] = 0;
   out_1613094616844734651[412] = 0;
   out_1613094616844734651[413] = 0;
   out_1613094616844734651[414] = 0;
   out_1613094616844734651[415] = 0;
   out_1613094616844734651[416] = 0;
   out_1613094616844734651[417] = 1.0;
   out_1613094616844734651[418] = 0;
   out_1613094616844734651[419] = 0;
   out_1613094616844734651[420] = 0;
   out_1613094616844734651[421] = 0;
   out_1613094616844734651[422] = 0;
   out_1613094616844734651[423] = 0;
   out_1613094616844734651[424] = 0;
   out_1613094616844734651[425] = 0;
   out_1613094616844734651[426] = 0;
   out_1613094616844734651[427] = 0;
   out_1613094616844734651[428] = 0;
   out_1613094616844734651[429] = 0;
   out_1613094616844734651[430] = 0;
   out_1613094616844734651[431] = 0;
   out_1613094616844734651[432] = 0;
   out_1613094616844734651[433] = 0;
   out_1613094616844734651[434] = 0;
   out_1613094616844734651[435] = 0;
   out_1613094616844734651[436] = 0;
   out_1613094616844734651[437] = 0;
   out_1613094616844734651[438] = 0;
   out_1613094616844734651[439] = 1.0;
   out_1613094616844734651[440] = 0;
   out_1613094616844734651[441] = 0;
   out_1613094616844734651[442] = 0;
   out_1613094616844734651[443] = 0;
   out_1613094616844734651[444] = 0;
   out_1613094616844734651[445] = 0;
   out_1613094616844734651[446] = 0;
   out_1613094616844734651[447] = 0;
   out_1613094616844734651[448] = 0;
   out_1613094616844734651[449] = 0;
   out_1613094616844734651[450] = 0;
   out_1613094616844734651[451] = 0;
   out_1613094616844734651[452] = 0;
   out_1613094616844734651[453] = 0;
   out_1613094616844734651[454] = 0;
   out_1613094616844734651[455] = 0;
   out_1613094616844734651[456] = 0;
   out_1613094616844734651[457] = 0;
   out_1613094616844734651[458] = 0;
   out_1613094616844734651[459] = 0;
   out_1613094616844734651[460] = 0;
   out_1613094616844734651[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8292055049526193115) {
   out_8292055049526193115[0] = dt*state[7] + state[0];
   out_8292055049526193115[1] = dt*state[8] + state[1];
   out_8292055049526193115[2] = dt*state[9] + state[2];
   out_8292055049526193115[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8292055049526193115[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8292055049526193115[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8292055049526193115[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8292055049526193115[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8292055049526193115[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8292055049526193115[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8292055049526193115[10] = state[10];
   out_8292055049526193115[11] = state[11];
   out_8292055049526193115[12] = state[12];
   out_8292055049526193115[13] = state[13];
   out_8292055049526193115[14] = state[14];
   out_8292055049526193115[15] = state[15];
   out_8292055049526193115[16] = state[16];
   out_8292055049526193115[17] = state[17];
   out_8292055049526193115[18] = state[18];
   out_8292055049526193115[19] = state[19];
   out_8292055049526193115[20] = state[20];
   out_8292055049526193115[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7850691362293063387) {
   out_7850691362293063387[0] = 1;
   out_7850691362293063387[1] = 0;
   out_7850691362293063387[2] = 0;
   out_7850691362293063387[3] = 0;
   out_7850691362293063387[4] = 0;
   out_7850691362293063387[5] = 0;
   out_7850691362293063387[6] = dt;
   out_7850691362293063387[7] = 0;
   out_7850691362293063387[8] = 0;
   out_7850691362293063387[9] = 0;
   out_7850691362293063387[10] = 0;
   out_7850691362293063387[11] = 0;
   out_7850691362293063387[12] = 0;
   out_7850691362293063387[13] = 0;
   out_7850691362293063387[14] = 0;
   out_7850691362293063387[15] = 0;
   out_7850691362293063387[16] = 0;
   out_7850691362293063387[17] = 0;
   out_7850691362293063387[18] = 0;
   out_7850691362293063387[19] = 0;
   out_7850691362293063387[20] = 0;
   out_7850691362293063387[21] = 0;
   out_7850691362293063387[22] = 1;
   out_7850691362293063387[23] = 0;
   out_7850691362293063387[24] = 0;
   out_7850691362293063387[25] = 0;
   out_7850691362293063387[26] = 0;
   out_7850691362293063387[27] = 0;
   out_7850691362293063387[28] = dt;
   out_7850691362293063387[29] = 0;
   out_7850691362293063387[30] = 0;
   out_7850691362293063387[31] = 0;
   out_7850691362293063387[32] = 0;
   out_7850691362293063387[33] = 0;
   out_7850691362293063387[34] = 0;
   out_7850691362293063387[35] = 0;
   out_7850691362293063387[36] = 0;
   out_7850691362293063387[37] = 0;
   out_7850691362293063387[38] = 0;
   out_7850691362293063387[39] = 0;
   out_7850691362293063387[40] = 0;
   out_7850691362293063387[41] = 0;
   out_7850691362293063387[42] = 0;
   out_7850691362293063387[43] = 0;
   out_7850691362293063387[44] = 1;
   out_7850691362293063387[45] = 0;
   out_7850691362293063387[46] = 0;
   out_7850691362293063387[47] = 0;
   out_7850691362293063387[48] = 0;
   out_7850691362293063387[49] = 0;
   out_7850691362293063387[50] = dt;
   out_7850691362293063387[51] = 0;
   out_7850691362293063387[52] = 0;
   out_7850691362293063387[53] = 0;
   out_7850691362293063387[54] = 0;
   out_7850691362293063387[55] = 0;
   out_7850691362293063387[56] = 0;
   out_7850691362293063387[57] = 0;
   out_7850691362293063387[58] = 0;
   out_7850691362293063387[59] = 0;
   out_7850691362293063387[60] = 0;
   out_7850691362293063387[61] = 0;
   out_7850691362293063387[62] = 0;
   out_7850691362293063387[63] = 0;
   out_7850691362293063387[64] = 0;
   out_7850691362293063387[65] = 0;
   out_7850691362293063387[66] = 1;
   out_7850691362293063387[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7850691362293063387[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7850691362293063387[69] = 0;
   out_7850691362293063387[70] = 0;
   out_7850691362293063387[71] = 0;
   out_7850691362293063387[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7850691362293063387[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7850691362293063387[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7850691362293063387[75] = 0;
   out_7850691362293063387[76] = 0;
   out_7850691362293063387[77] = 0;
   out_7850691362293063387[78] = 0;
   out_7850691362293063387[79] = 0;
   out_7850691362293063387[80] = 0;
   out_7850691362293063387[81] = 0;
   out_7850691362293063387[82] = 0;
   out_7850691362293063387[83] = 0;
   out_7850691362293063387[84] = 0;
   out_7850691362293063387[85] = 0;
   out_7850691362293063387[86] = 0;
   out_7850691362293063387[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7850691362293063387[88] = 1;
   out_7850691362293063387[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7850691362293063387[90] = 0;
   out_7850691362293063387[91] = 0;
   out_7850691362293063387[92] = 0;
   out_7850691362293063387[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7850691362293063387[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7850691362293063387[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7850691362293063387[96] = 0;
   out_7850691362293063387[97] = 0;
   out_7850691362293063387[98] = 0;
   out_7850691362293063387[99] = 0;
   out_7850691362293063387[100] = 0;
   out_7850691362293063387[101] = 0;
   out_7850691362293063387[102] = 0;
   out_7850691362293063387[103] = 0;
   out_7850691362293063387[104] = 0;
   out_7850691362293063387[105] = 0;
   out_7850691362293063387[106] = 0;
   out_7850691362293063387[107] = 0;
   out_7850691362293063387[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7850691362293063387[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7850691362293063387[110] = 1;
   out_7850691362293063387[111] = 0;
   out_7850691362293063387[112] = 0;
   out_7850691362293063387[113] = 0;
   out_7850691362293063387[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7850691362293063387[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7850691362293063387[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7850691362293063387[117] = 0;
   out_7850691362293063387[118] = 0;
   out_7850691362293063387[119] = 0;
   out_7850691362293063387[120] = 0;
   out_7850691362293063387[121] = 0;
   out_7850691362293063387[122] = 0;
   out_7850691362293063387[123] = 0;
   out_7850691362293063387[124] = 0;
   out_7850691362293063387[125] = 0;
   out_7850691362293063387[126] = 0;
   out_7850691362293063387[127] = 0;
   out_7850691362293063387[128] = 0;
   out_7850691362293063387[129] = 0;
   out_7850691362293063387[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7850691362293063387[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7850691362293063387[132] = 1;
   out_7850691362293063387[133] = 0;
   out_7850691362293063387[134] = 0;
   out_7850691362293063387[135] = 0;
   out_7850691362293063387[136] = 0;
   out_7850691362293063387[137] = 0;
   out_7850691362293063387[138] = 0;
   out_7850691362293063387[139] = 0;
   out_7850691362293063387[140] = 0;
   out_7850691362293063387[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7850691362293063387[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7850691362293063387[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7850691362293063387[144] = 0;
   out_7850691362293063387[145] = 0;
   out_7850691362293063387[146] = 0;
   out_7850691362293063387[147] = 0;
   out_7850691362293063387[148] = 0;
   out_7850691362293063387[149] = 0;
   out_7850691362293063387[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7850691362293063387[151] = 0;
   out_7850691362293063387[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7850691362293063387[153] = 0;
   out_7850691362293063387[154] = 1;
   out_7850691362293063387[155] = 0;
   out_7850691362293063387[156] = 0;
   out_7850691362293063387[157] = 0;
   out_7850691362293063387[158] = 0;
   out_7850691362293063387[159] = 0;
   out_7850691362293063387[160] = 0;
   out_7850691362293063387[161] = 0;
   out_7850691362293063387[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7850691362293063387[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7850691362293063387[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7850691362293063387[165] = 0;
   out_7850691362293063387[166] = 0;
   out_7850691362293063387[167] = 0;
   out_7850691362293063387[168] = 0;
   out_7850691362293063387[169] = 0;
   out_7850691362293063387[170] = 0;
   out_7850691362293063387[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7850691362293063387[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7850691362293063387[173] = 0;
   out_7850691362293063387[174] = 0;
   out_7850691362293063387[175] = 0;
   out_7850691362293063387[176] = 1;
   out_7850691362293063387[177] = 0;
   out_7850691362293063387[178] = 0;
   out_7850691362293063387[179] = 0;
   out_7850691362293063387[180] = 0;
   out_7850691362293063387[181] = 0;
   out_7850691362293063387[182] = 0;
   out_7850691362293063387[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7850691362293063387[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7850691362293063387[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7850691362293063387[186] = 0;
   out_7850691362293063387[187] = 0;
   out_7850691362293063387[188] = 0;
   out_7850691362293063387[189] = 0;
   out_7850691362293063387[190] = 0;
   out_7850691362293063387[191] = 0;
   out_7850691362293063387[192] = 0;
   out_7850691362293063387[193] = 0;
   out_7850691362293063387[194] = 0;
   out_7850691362293063387[195] = 0;
   out_7850691362293063387[196] = 0;
   out_7850691362293063387[197] = 0;
   out_7850691362293063387[198] = 1;
   out_7850691362293063387[199] = 0;
   out_7850691362293063387[200] = 0;
   out_7850691362293063387[201] = 0;
   out_7850691362293063387[202] = 0;
   out_7850691362293063387[203] = 0;
   out_7850691362293063387[204] = 0;
   out_7850691362293063387[205] = 0;
   out_7850691362293063387[206] = 0;
   out_7850691362293063387[207] = 0;
   out_7850691362293063387[208] = 0;
   out_7850691362293063387[209] = 0;
   out_7850691362293063387[210] = 0;
   out_7850691362293063387[211] = 0;
   out_7850691362293063387[212] = 0;
   out_7850691362293063387[213] = 0;
   out_7850691362293063387[214] = 0;
   out_7850691362293063387[215] = 0;
   out_7850691362293063387[216] = 0;
   out_7850691362293063387[217] = 0;
   out_7850691362293063387[218] = 0;
   out_7850691362293063387[219] = 0;
   out_7850691362293063387[220] = 1;
   out_7850691362293063387[221] = 0;
   out_7850691362293063387[222] = 0;
   out_7850691362293063387[223] = 0;
   out_7850691362293063387[224] = 0;
   out_7850691362293063387[225] = 0;
   out_7850691362293063387[226] = 0;
   out_7850691362293063387[227] = 0;
   out_7850691362293063387[228] = 0;
   out_7850691362293063387[229] = 0;
   out_7850691362293063387[230] = 0;
   out_7850691362293063387[231] = 0;
   out_7850691362293063387[232] = 0;
   out_7850691362293063387[233] = 0;
   out_7850691362293063387[234] = 0;
   out_7850691362293063387[235] = 0;
   out_7850691362293063387[236] = 0;
   out_7850691362293063387[237] = 0;
   out_7850691362293063387[238] = 0;
   out_7850691362293063387[239] = 0;
   out_7850691362293063387[240] = 0;
   out_7850691362293063387[241] = 0;
   out_7850691362293063387[242] = 1;
   out_7850691362293063387[243] = 0;
   out_7850691362293063387[244] = 0;
   out_7850691362293063387[245] = 0;
   out_7850691362293063387[246] = 0;
   out_7850691362293063387[247] = 0;
   out_7850691362293063387[248] = 0;
   out_7850691362293063387[249] = 0;
   out_7850691362293063387[250] = 0;
   out_7850691362293063387[251] = 0;
   out_7850691362293063387[252] = 0;
   out_7850691362293063387[253] = 0;
   out_7850691362293063387[254] = 0;
   out_7850691362293063387[255] = 0;
   out_7850691362293063387[256] = 0;
   out_7850691362293063387[257] = 0;
   out_7850691362293063387[258] = 0;
   out_7850691362293063387[259] = 0;
   out_7850691362293063387[260] = 0;
   out_7850691362293063387[261] = 0;
   out_7850691362293063387[262] = 0;
   out_7850691362293063387[263] = 0;
   out_7850691362293063387[264] = 1;
   out_7850691362293063387[265] = 0;
   out_7850691362293063387[266] = 0;
   out_7850691362293063387[267] = 0;
   out_7850691362293063387[268] = 0;
   out_7850691362293063387[269] = 0;
   out_7850691362293063387[270] = 0;
   out_7850691362293063387[271] = 0;
   out_7850691362293063387[272] = 0;
   out_7850691362293063387[273] = 0;
   out_7850691362293063387[274] = 0;
   out_7850691362293063387[275] = 0;
   out_7850691362293063387[276] = 0;
   out_7850691362293063387[277] = 0;
   out_7850691362293063387[278] = 0;
   out_7850691362293063387[279] = 0;
   out_7850691362293063387[280] = 0;
   out_7850691362293063387[281] = 0;
   out_7850691362293063387[282] = 0;
   out_7850691362293063387[283] = 0;
   out_7850691362293063387[284] = 0;
   out_7850691362293063387[285] = 0;
   out_7850691362293063387[286] = 1;
   out_7850691362293063387[287] = 0;
   out_7850691362293063387[288] = 0;
   out_7850691362293063387[289] = 0;
   out_7850691362293063387[290] = 0;
   out_7850691362293063387[291] = 0;
   out_7850691362293063387[292] = 0;
   out_7850691362293063387[293] = 0;
   out_7850691362293063387[294] = 0;
   out_7850691362293063387[295] = 0;
   out_7850691362293063387[296] = 0;
   out_7850691362293063387[297] = 0;
   out_7850691362293063387[298] = 0;
   out_7850691362293063387[299] = 0;
   out_7850691362293063387[300] = 0;
   out_7850691362293063387[301] = 0;
   out_7850691362293063387[302] = 0;
   out_7850691362293063387[303] = 0;
   out_7850691362293063387[304] = 0;
   out_7850691362293063387[305] = 0;
   out_7850691362293063387[306] = 0;
   out_7850691362293063387[307] = 0;
   out_7850691362293063387[308] = 1;
   out_7850691362293063387[309] = 0;
   out_7850691362293063387[310] = 0;
   out_7850691362293063387[311] = 0;
   out_7850691362293063387[312] = 0;
   out_7850691362293063387[313] = 0;
   out_7850691362293063387[314] = 0;
   out_7850691362293063387[315] = 0;
   out_7850691362293063387[316] = 0;
   out_7850691362293063387[317] = 0;
   out_7850691362293063387[318] = 0;
   out_7850691362293063387[319] = 0;
   out_7850691362293063387[320] = 0;
   out_7850691362293063387[321] = 0;
   out_7850691362293063387[322] = 0;
   out_7850691362293063387[323] = 0;
   out_7850691362293063387[324] = 0;
   out_7850691362293063387[325] = 0;
   out_7850691362293063387[326] = 0;
   out_7850691362293063387[327] = 0;
   out_7850691362293063387[328] = 0;
   out_7850691362293063387[329] = 0;
   out_7850691362293063387[330] = 1;
   out_7850691362293063387[331] = 0;
   out_7850691362293063387[332] = 0;
   out_7850691362293063387[333] = 0;
   out_7850691362293063387[334] = 0;
   out_7850691362293063387[335] = 0;
   out_7850691362293063387[336] = 0;
   out_7850691362293063387[337] = 0;
   out_7850691362293063387[338] = 0;
   out_7850691362293063387[339] = 0;
   out_7850691362293063387[340] = 0;
   out_7850691362293063387[341] = 0;
   out_7850691362293063387[342] = 0;
   out_7850691362293063387[343] = 0;
   out_7850691362293063387[344] = 0;
   out_7850691362293063387[345] = 0;
   out_7850691362293063387[346] = 0;
   out_7850691362293063387[347] = 0;
   out_7850691362293063387[348] = 0;
   out_7850691362293063387[349] = 0;
   out_7850691362293063387[350] = 0;
   out_7850691362293063387[351] = 0;
   out_7850691362293063387[352] = 1;
   out_7850691362293063387[353] = 0;
   out_7850691362293063387[354] = 0;
   out_7850691362293063387[355] = 0;
   out_7850691362293063387[356] = 0;
   out_7850691362293063387[357] = 0;
   out_7850691362293063387[358] = 0;
   out_7850691362293063387[359] = 0;
   out_7850691362293063387[360] = 0;
   out_7850691362293063387[361] = 0;
   out_7850691362293063387[362] = 0;
   out_7850691362293063387[363] = 0;
   out_7850691362293063387[364] = 0;
   out_7850691362293063387[365] = 0;
   out_7850691362293063387[366] = 0;
   out_7850691362293063387[367] = 0;
   out_7850691362293063387[368] = 0;
   out_7850691362293063387[369] = 0;
   out_7850691362293063387[370] = 0;
   out_7850691362293063387[371] = 0;
   out_7850691362293063387[372] = 0;
   out_7850691362293063387[373] = 0;
   out_7850691362293063387[374] = 1;
   out_7850691362293063387[375] = 0;
   out_7850691362293063387[376] = 0;
   out_7850691362293063387[377] = 0;
   out_7850691362293063387[378] = 0;
   out_7850691362293063387[379] = 0;
   out_7850691362293063387[380] = 0;
   out_7850691362293063387[381] = 0;
   out_7850691362293063387[382] = 0;
   out_7850691362293063387[383] = 0;
   out_7850691362293063387[384] = 0;
   out_7850691362293063387[385] = 0;
   out_7850691362293063387[386] = 0;
   out_7850691362293063387[387] = 0;
   out_7850691362293063387[388] = 0;
   out_7850691362293063387[389] = 0;
   out_7850691362293063387[390] = 0;
   out_7850691362293063387[391] = 0;
   out_7850691362293063387[392] = 0;
   out_7850691362293063387[393] = 0;
   out_7850691362293063387[394] = 0;
   out_7850691362293063387[395] = 0;
   out_7850691362293063387[396] = 1;
   out_7850691362293063387[397] = 0;
   out_7850691362293063387[398] = 0;
   out_7850691362293063387[399] = 0;
   out_7850691362293063387[400] = 0;
   out_7850691362293063387[401] = 0;
   out_7850691362293063387[402] = 0;
   out_7850691362293063387[403] = 0;
   out_7850691362293063387[404] = 0;
   out_7850691362293063387[405] = 0;
   out_7850691362293063387[406] = 0;
   out_7850691362293063387[407] = 0;
   out_7850691362293063387[408] = 0;
   out_7850691362293063387[409] = 0;
   out_7850691362293063387[410] = 0;
   out_7850691362293063387[411] = 0;
   out_7850691362293063387[412] = 0;
   out_7850691362293063387[413] = 0;
   out_7850691362293063387[414] = 0;
   out_7850691362293063387[415] = 0;
   out_7850691362293063387[416] = 0;
   out_7850691362293063387[417] = 0;
   out_7850691362293063387[418] = 1;
   out_7850691362293063387[419] = 0;
   out_7850691362293063387[420] = 0;
   out_7850691362293063387[421] = 0;
   out_7850691362293063387[422] = 0;
   out_7850691362293063387[423] = 0;
   out_7850691362293063387[424] = 0;
   out_7850691362293063387[425] = 0;
   out_7850691362293063387[426] = 0;
   out_7850691362293063387[427] = 0;
   out_7850691362293063387[428] = 0;
   out_7850691362293063387[429] = 0;
   out_7850691362293063387[430] = 0;
   out_7850691362293063387[431] = 0;
   out_7850691362293063387[432] = 0;
   out_7850691362293063387[433] = 0;
   out_7850691362293063387[434] = 0;
   out_7850691362293063387[435] = 0;
   out_7850691362293063387[436] = 0;
   out_7850691362293063387[437] = 0;
   out_7850691362293063387[438] = 0;
   out_7850691362293063387[439] = 0;
   out_7850691362293063387[440] = 1;
}
void h_4(double *state, double *unused, double *out_1870156021305990905) {
   out_1870156021305990905[0] = state[10] + state[13];
   out_1870156021305990905[1] = state[11] + state[14];
   out_1870156021305990905[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4858251518877244797) {
   out_4858251518877244797[0] = 0;
   out_4858251518877244797[1] = 0;
   out_4858251518877244797[2] = 0;
   out_4858251518877244797[3] = 0;
   out_4858251518877244797[4] = 0;
   out_4858251518877244797[5] = 0;
   out_4858251518877244797[6] = 0;
   out_4858251518877244797[7] = 0;
   out_4858251518877244797[8] = 0;
   out_4858251518877244797[9] = 0;
   out_4858251518877244797[10] = 1;
   out_4858251518877244797[11] = 0;
   out_4858251518877244797[12] = 0;
   out_4858251518877244797[13] = 1;
   out_4858251518877244797[14] = 0;
   out_4858251518877244797[15] = 0;
   out_4858251518877244797[16] = 0;
   out_4858251518877244797[17] = 0;
   out_4858251518877244797[18] = 0;
   out_4858251518877244797[19] = 0;
   out_4858251518877244797[20] = 0;
   out_4858251518877244797[21] = 0;
   out_4858251518877244797[22] = 0;
   out_4858251518877244797[23] = 0;
   out_4858251518877244797[24] = 0;
   out_4858251518877244797[25] = 0;
   out_4858251518877244797[26] = 0;
   out_4858251518877244797[27] = 0;
   out_4858251518877244797[28] = 0;
   out_4858251518877244797[29] = 0;
   out_4858251518877244797[30] = 0;
   out_4858251518877244797[31] = 0;
   out_4858251518877244797[32] = 0;
   out_4858251518877244797[33] = 1;
   out_4858251518877244797[34] = 0;
   out_4858251518877244797[35] = 0;
   out_4858251518877244797[36] = 1;
   out_4858251518877244797[37] = 0;
   out_4858251518877244797[38] = 0;
   out_4858251518877244797[39] = 0;
   out_4858251518877244797[40] = 0;
   out_4858251518877244797[41] = 0;
   out_4858251518877244797[42] = 0;
   out_4858251518877244797[43] = 0;
   out_4858251518877244797[44] = 0;
   out_4858251518877244797[45] = 0;
   out_4858251518877244797[46] = 0;
   out_4858251518877244797[47] = 0;
   out_4858251518877244797[48] = 0;
   out_4858251518877244797[49] = 0;
   out_4858251518877244797[50] = 0;
   out_4858251518877244797[51] = 0;
   out_4858251518877244797[52] = 0;
   out_4858251518877244797[53] = 0;
   out_4858251518877244797[54] = 0;
   out_4858251518877244797[55] = 0;
   out_4858251518877244797[56] = 1;
   out_4858251518877244797[57] = 0;
   out_4858251518877244797[58] = 0;
   out_4858251518877244797[59] = 1;
   out_4858251518877244797[60] = 0;
   out_4858251518877244797[61] = 0;
   out_4858251518877244797[62] = 0;
   out_4858251518877244797[63] = 0;
   out_4858251518877244797[64] = 0;
   out_4858251518877244797[65] = 0;
}
void h_9(double *state, double *unused, double *out_5054878707596075090) {
   out_5054878707596075090[0] = state[10];
   out_5054878707596075090[1] = state[11];
   out_5054878707596075090[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6301273619567859349) {
   out_6301273619567859349[0] = 0;
   out_6301273619567859349[1] = 0;
   out_6301273619567859349[2] = 0;
   out_6301273619567859349[3] = 0;
   out_6301273619567859349[4] = 0;
   out_6301273619567859349[5] = 0;
   out_6301273619567859349[6] = 0;
   out_6301273619567859349[7] = 0;
   out_6301273619567859349[8] = 0;
   out_6301273619567859349[9] = 0;
   out_6301273619567859349[10] = 1;
   out_6301273619567859349[11] = 0;
   out_6301273619567859349[12] = 0;
   out_6301273619567859349[13] = 0;
   out_6301273619567859349[14] = 0;
   out_6301273619567859349[15] = 0;
   out_6301273619567859349[16] = 0;
   out_6301273619567859349[17] = 0;
   out_6301273619567859349[18] = 0;
   out_6301273619567859349[19] = 0;
   out_6301273619567859349[20] = 0;
   out_6301273619567859349[21] = 0;
   out_6301273619567859349[22] = 0;
   out_6301273619567859349[23] = 0;
   out_6301273619567859349[24] = 0;
   out_6301273619567859349[25] = 0;
   out_6301273619567859349[26] = 0;
   out_6301273619567859349[27] = 0;
   out_6301273619567859349[28] = 0;
   out_6301273619567859349[29] = 0;
   out_6301273619567859349[30] = 0;
   out_6301273619567859349[31] = 0;
   out_6301273619567859349[32] = 0;
   out_6301273619567859349[33] = 1;
   out_6301273619567859349[34] = 0;
   out_6301273619567859349[35] = 0;
   out_6301273619567859349[36] = 0;
   out_6301273619567859349[37] = 0;
   out_6301273619567859349[38] = 0;
   out_6301273619567859349[39] = 0;
   out_6301273619567859349[40] = 0;
   out_6301273619567859349[41] = 0;
   out_6301273619567859349[42] = 0;
   out_6301273619567859349[43] = 0;
   out_6301273619567859349[44] = 0;
   out_6301273619567859349[45] = 0;
   out_6301273619567859349[46] = 0;
   out_6301273619567859349[47] = 0;
   out_6301273619567859349[48] = 0;
   out_6301273619567859349[49] = 0;
   out_6301273619567859349[50] = 0;
   out_6301273619567859349[51] = 0;
   out_6301273619567859349[52] = 0;
   out_6301273619567859349[53] = 0;
   out_6301273619567859349[54] = 0;
   out_6301273619567859349[55] = 0;
   out_6301273619567859349[56] = 1;
   out_6301273619567859349[57] = 0;
   out_6301273619567859349[58] = 0;
   out_6301273619567859349[59] = 0;
   out_6301273619567859349[60] = 0;
   out_6301273619567859349[61] = 0;
   out_6301273619567859349[62] = 0;
   out_6301273619567859349[63] = 0;
   out_6301273619567859349[64] = 0;
   out_6301273619567859349[65] = 0;
}
void h_10(double *state, double *unused, double *out_7081733196693319237) {
   out_7081733196693319237[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7081733196693319237[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7081733196693319237[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4105413611790639053) {
   out_4105413611790639053[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4105413611790639053[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4105413611790639053[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4105413611790639053[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4105413611790639053[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4105413611790639053[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4105413611790639053[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4105413611790639053[7] = 0;
   out_4105413611790639053[8] = 0;
   out_4105413611790639053[9] = 0;
   out_4105413611790639053[10] = 0;
   out_4105413611790639053[11] = 0;
   out_4105413611790639053[12] = 0;
   out_4105413611790639053[13] = 0;
   out_4105413611790639053[14] = 0;
   out_4105413611790639053[15] = 0;
   out_4105413611790639053[16] = 1;
   out_4105413611790639053[17] = 0;
   out_4105413611790639053[18] = 0;
   out_4105413611790639053[19] = 1;
   out_4105413611790639053[20] = 0;
   out_4105413611790639053[21] = 0;
   out_4105413611790639053[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4105413611790639053[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4105413611790639053[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4105413611790639053[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4105413611790639053[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4105413611790639053[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4105413611790639053[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4105413611790639053[29] = 0;
   out_4105413611790639053[30] = 0;
   out_4105413611790639053[31] = 0;
   out_4105413611790639053[32] = 0;
   out_4105413611790639053[33] = 0;
   out_4105413611790639053[34] = 0;
   out_4105413611790639053[35] = 0;
   out_4105413611790639053[36] = 0;
   out_4105413611790639053[37] = 0;
   out_4105413611790639053[38] = 0;
   out_4105413611790639053[39] = 1;
   out_4105413611790639053[40] = 0;
   out_4105413611790639053[41] = 0;
   out_4105413611790639053[42] = 1;
   out_4105413611790639053[43] = 0;
   out_4105413611790639053[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4105413611790639053[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4105413611790639053[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4105413611790639053[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4105413611790639053[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4105413611790639053[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4105413611790639053[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4105413611790639053[51] = 0;
   out_4105413611790639053[52] = 0;
   out_4105413611790639053[53] = 0;
   out_4105413611790639053[54] = 0;
   out_4105413611790639053[55] = 0;
   out_4105413611790639053[56] = 0;
   out_4105413611790639053[57] = 0;
   out_4105413611790639053[58] = 0;
   out_4105413611790639053[59] = 0;
   out_4105413611790639053[60] = 0;
   out_4105413611790639053[61] = 0;
   out_4105413611790639053[62] = 1;
   out_4105413611790639053[63] = 0;
   out_4105413611790639053[64] = 0;
   out_4105413611790639053[65] = 1;
}
void h_12(double *state, double *unused, double *out_6959964131996505310) {
   out_6959964131996505310[0] = state[0];
   out_6959964131996505310[1] = state[1];
   out_6959964131996505310[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5921364241149856327) {
   out_5921364241149856327[0] = 1;
   out_5921364241149856327[1] = 0;
   out_5921364241149856327[2] = 0;
   out_5921364241149856327[3] = 0;
   out_5921364241149856327[4] = 0;
   out_5921364241149856327[5] = 0;
   out_5921364241149856327[6] = 0;
   out_5921364241149856327[7] = 0;
   out_5921364241149856327[8] = 0;
   out_5921364241149856327[9] = 0;
   out_5921364241149856327[10] = 0;
   out_5921364241149856327[11] = 0;
   out_5921364241149856327[12] = 0;
   out_5921364241149856327[13] = 0;
   out_5921364241149856327[14] = 0;
   out_5921364241149856327[15] = 0;
   out_5921364241149856327[16] = 0;
   out_5921364241149856327[17] = 0;
   out_5921364241149856327[18] = 0;
   out_5921364241149856327[19] = 0;
   out_5921364241149856327[20] = 0;
   out_5921364241149856327[21] = 0;
   out_5921364241149856327[22] = 0;
   out_5921364241149856327[23] = 1;
   out_5921364241149856327[24] = 0;
   out_5921364241149856327[25] = 0;
   out_5921364241149856327[26] = 0;
   out_5921364241149856327[27] = 0;
   out_5921364241149856327[28] = 0;
   out_5921364241149856327[29] = 0;
   out_5921364241149856327[30] = 0;
   out_5921364241149856327[31] = 0;
   out_5921364241149856327[32] = 0;
   out_5921364241149856327[33] = 0;
   out_5921364241149856327[34] = 0;
   out_5921364241149856327[35] = 0;
   out_5921364241149856327[36] = 0;
   out_5921364241149856327[37] = 0;
   out_5921364241149856327[38] = 0;
   out_5921364241149856327[39] = 0;
   out_5921364241149856327[40] = 0;
   out_5921364241149856327[41] = 0;
   out_5921364241149856327[42] = 0;
   out_5921364241149856327[43] = 0;
   out_5921364241149856327[44] = 0;
   out_5921364241149856327[45] = 0;
   out_5921364241149856327[46] = 1;
   out_5921364241149856327[47] = 0;
   out_5921364241149856327[48] = 0;
   out_5921364241149856327[49] = 0;
   out_5921364241149856327[50] = 0;
   out_5921364241149856327[51] = 0;
   out_5921364241149856327[52] = 0;
   out_5921364241149856327[53] = 0;
   out_5921364241149856327[54] = 0;
   out_5921364241149856327[55] = 0;
   out_5921364241149856327[56] = 0;
   out_5921364241149856327[57] = 0;
   out_5921364241149856327[58] = 0;
   out_5921364241149856327[59] = 0;
   out_5921364241149856327[60] = 0;
   out_5921364241149856327[61] = 0;
   out_5921364241149856327[62] = 0;
   out_5921364241149856327[63] = 0;
   out_5921364241149856327[64] = 0;
   out_5921364241149856327[65] = 0;
}
void h_35(double *state, double *unused, double *out_1930321176650879734) {
   out_1930321176650879734[0] = state[7];
   out_1930321176650879734[1] = state[8];
   out_1930321176650879734[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8224913576249852173) {
   out_8224913576249852173[0] = 0;
   out_8224913576249852173[1] = 0;
   out_8224913576249852173[2] = 0;
   out_8224913576249852173[3] = 0;
   out_8224913576249852173[4] = 0;
   out_8224913576249852173[5] = 0;
   out_8224913576249852173[6] = 0;
   out_8224913576249852173[7] = 1;
   out_8224913576249852173[8] = 0;
   out_8224913576249852173[9] = 0;
   out_8224913576249852173[10] = 0;
   out_8224913576249852173[11] = 0;
   out_8224913576249852173[12] = 0;
   out_8224913576249852173[13] = 0;
   out_8224913576249852173[14] = 0;
   out_8224913576249852173[15] = 0;
   out_8224913576249852173[16] = 0;
   out_8224913576249852173[17] = 0;
   out_8224913576249852173[18] = 0;
   out_8224913576249852173[19] = 0;
   out_8224913576249852173[20] = 0;
   out_8224913576249852173[21] = 0;
   out_8224913576249852173[22] = 0;
   out_8224913576249852173[23] = 0;
   out_8224913576249852173[24] = 0;
   out_8224913576249852173[25] = 0;
   out_8224913576249852173[26] = 0;
   out_8224913576249852173[27] = 0;
   out_8224913576249852173[28] = 0;
   out_8224913576249852173[29] = 0;
   out_8224913576249852173[30] = 1;
   out_8224913576249852173[31] = 0;
   out_8224913576249852173[32] = 0;
   out_8224913576249852173[33] = 0;
   out_8224913576249852173[34] = 0;
   out_8224913576249852173[35] = 0;
   out_8224913576249852173[36] = 0;
   out_8224913576249852173[37] = 0;
   out_8224913576249852173[38] = 0;
   out_8224913576249852173[39] = 0;
   out_8224913576249852173[40] = 0;
   out_8224913576249852173[41] = 0;
   out_8224913576249852173[42] = 0;
   out_8224913576249852173[43] = 0;
   out_8224913576249852173[44] = 0;
   out_8224913576249852173[45] = 0;
   out_8224913576249852173[46] = 0;
   out_8224913576249852173[47] = 0;
   out_8224913576249852173[48] = 0;
   out_8224913576249852173[49] = 0;
   out_8224913576249852173[50] = 0;
   out_8224913576249852173[51] = 0;
   out_8224913576249852173[52] = 0;
   out_8224913576249852173[53] = 1;
   out_8224913576249852173[54] = 0;
   out_8224913576249852173[55] = 0;
   out_8224913576249852173[56] = 0;
   out_8224913576249852173[57] = 0;
   out_8224913576249852173[58] = 0;
   out_8224913576249852173[59] = 0;
   out_8224913576249852173[60] = 0;
   out_8224913576249852173[61] = 0;
   out_8224913576249852173[62] = 0;
   out_8224913576249852173[63] = 0;
   out_8224913576249852173[64] = 0;
   out_8224913576249852173[65] = 0;
}
void h_32(double *state, double *unused, double *out_966899961657993423) {
   out_966899961657993423[0] = state[3];
   out_966899961657993423[1] = state[4];
   out_966899961657993423[2] = state[5];
   out_966899961657993423[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8356078361190592642) {
   out_8356078361190592642[0] = 0;
   out_8356078361190592642[1] = 0;
   out_8356078361190592642[2] = 0;
   out_8356078361190592642[3] = 1;
   out_8356078361190592642[4] = 0;
   out_8356078361190592642[5] = 0;
   out_8356078361190592642[6] = 0;
   out_8356078361190592642[7] = 0;
   out_8356078361190592642[8] = 0;
   out_8356078361190592642[9] = 0;
   out_8356078361190592642[10] = 0;
   out_8356078361190592642[11] = 0;
   out_8356078361190592642[12] = 0;
   out_8356078361190592642[13] = 0;
   out_8356078361190592642[14] = 0;
   out_8356078361190592642[15] = 0;
   out_8356078361190592642[16] = 0;
   out_8356078361190592642[17] = 0;
   out_8356078361190592642[18] = 0;
   out_8356078361190592642[19] = 0;
   out_8356078361190592642[20] = 0;
   out_8356078361190592642[21] = 0;
   out_8356078361190592642[22] = 0;
   out_8356078361190592642[23] = 0;
   out_8356078361190592642[24] = 0;
   out_8356078361190592642[25] = 0;
   out_8356078361190592642[26] = 1;
   out_8356078361190592642[27] = 0;
   out_8356078361190592642[28] = 0;
   out_8356078361190592642[29] = 0;
   out_8356078361190592642[30] = 0;
   out_8356078361190592642[31] = 0;
   out_8356078361190592642[32] = 0;
   out_8356078361190592642[33] = 0;
   out_8356078361190592642[34] = 0;
   out_8356078361190592642[35] = 0;
   out_8356078361190592642[36] = 0;
   out_8356078361190592642[37] = 0;
   out_8356078361190592642[38] = 0;
   out_8356078361190592642[39] = 0;
   out_8356078361190592642[40] = 0;
   out_8356078361190592642[41] = 0;
   out_8356078361190592642[42] = 0;
   out_8356078361190592642[43] = 0;
   out_8356078361190592642[44] = 0;
   out_8356078361190592642[45] = 0;
   out_8356078361190592642[46] = 0;
   out_8356078361190592642[47] = 0;
   out_8356078361190592642[48] = 0;
   out_8356078361190592642[49] = 1;
   out_8356078361190592642[50] = 0;
   out_8356078361190592642[51] = 0;
   out_8356078361190592642[52] = 0;
   out_8356078361190592642[53] = 0;
   out_8356078361190592642[54] = 0;
   out_8356078361190592642[55] = 0;
   out_8356078361190592642[56] = 0;
   out_8356078361190592642[57] = 0;
   out_8356078361190592642[58] = 0;
   out_8356078361190592642[59] = 0;
   out_8356078361190592642[60] = 0;
   out_8356078361190592642[61] = 0;
   out_8356078361190592642[62] = 0;
   out_8356078361190592642[63] = 0;
   out_8356078361190592642[64] = 0;
   out_8356078361190592642[65] = 0;
   out_8356078361190592642[66] = 0;
   out_8356078361190592642[67] = 0;
   out_8356078361190592642[68] = 0;
   out_8356078361190592642[69] = 0;
   out_8356078361190592642[70] = 0;
   out_8356078361190592642[71] = 0;
   out_8356078361190592642[72] = 1;
   out_8356078361190592642[73] = 0;
   out_8356078361190592642[74] = 0;
   out_8356078361190592642[75] = 0;
   out_8356078361190592642[76] = 0;
   out_8356078361190592642[77] = 0;
   out_8356078361190592642[78] = 0;
   out_8356078361190592642[79] = 0;
   out_8356078361190592642[80] = 0;
   out_8356078361190592642[81] = 0;
   out_8356078361190592642[82] = 0;
   out_8356078361190592642[83] = 0;
   out_8356078361190592642[84] = 0;
   out_8356078361190592642[85] = 0;
   out_8356078361190592642[86] = 0;
   out_8356078361190592642[87] = 0;
}
void h_13(double *state, double *unused, double *out_3122660602928051458) {
   out_3122660602928051458[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3122660602928051458[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3122660602928051458[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4724152095591650146) {
   out_4724152095591650146[0] = 0;
   out_4724152095591650146[1] = 0;
   out_4724152095591650146[2] = 0;
   out_4724152095591650146[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4724152095591650146[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4724152095591650146[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4724152095591650146[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4724152095591650146[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4724152095591650146[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4724152095591650146[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4724152095591650146[10] = 0;
   out_4724152095591650146[11] = 0;
   out_4724152095591650146[12] = 0;
   out_4724152095591650146[13] = 0;
   out_4724152095591650146[14] = 0;
   out_4724152095591650146[15] = 0;
   out_4724152095591650146[16] = 0;
   out_4724152095591650146[17] = 0;
   out_4724152095591650146[18] = 0;
   out_4724152095591650146[19] = 0;
   out_4724152095591650146[20] = 0;
   out_4724152095591650146[21] = 0;
   out_4724152095591650146[22] = 0;
   out_4724152095591650146[23] = 0;
   out_4724152095591650146[24] = 0;
   out_4724152095591650146[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4724152095591650146[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4724152095591650146[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4724152095591650146[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4724152095591650146[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4724152095591650146[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4724152095591650146[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4724152095591650146[32] = 0;
   out_4724152095591650146[33] = 0;
   out_4724152095591650146[34] = 0;
   out_4724152095591650146[35] = 0;
   out_4724152095591650146[36] = 0;
   out_4724152095591650146[37] = 0;
   out_4724152095591650146[38] = 0;
   out_4724152095591650146[39] = 0;
   out_4724152095591650146[40] = 0;
   out_4724152095591650146[41] = 0;
   out_4724152095591650146[42] = 0;
   out_4724152095591650146[43] = 0;
   out_4724152095591650146[44] = 0;
   out_4724152095591650146[45] = 0;
   out_4724152095591650146[46] = 0;
   out_4724152095591650146[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4724152095591650146[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4724152095591650146[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4724152095591650146[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4724152095591650146[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4724152095591650146[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4724152095591650146[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4724152095591650146[54] = 0;
   out_4724152095591650146[55] = 0;
   out_4724152095591650146[56] = 0;
   out_4724152095591650146[57] = 0;
   out_4724152095591650146[58] = 0;
   out_4724152095591650146[59] = 0;
   out_4724152095591650146[60] = 0;
   out_4724152095591650146[61] = 0;
   out_4724152095591650146[62] = 0;
   out_4724152095591650146[63] = 0;
   out_4724152095591650146[64] = 0;
   out_4724152095591650146[65] = 0;
}
void h_14(double *state, double *unused, double *out_5054878707596075090) {
   out_5054878707596075090[0] = state[10];
   out_5054878707596075090[1] = state[11];
   out_5054878707596075090[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6301273619567859349) {
   out_6301273619567859349[0] = 0;
   out_6301273619567859349[1] = 0;
   out_6301273619567859349[2] = 0;
   out_6301273619567859349[3] = 0;
   out_6301273619567859349[4] = 0;
   out_6301273619567859349[5] = 0;
   out_6301273619567859349[6] = 0;
   out_6301273619567859349[7] = 0;
   out_6301273619567859349[8] = 0;
   out_6301273619567859349[9] = 0;
   out_6301273619567859349[10] = 1;
   out_6301273619567859349[11] = 0;
   out_6301273619567859349[12] = 0;
   out_6301273619567859349[13] = 0;
   out_6301273619567859349[14] = 0;
   out_6301273619567859349[15] = 0;
   out_6301273619567859349[16] = 0;
   out_6301273619567859349[17] = 0;
   out_6301273619567859349[18] = 0;
   out_6301273619567859349[19] = 0;
   out_6301273619567859349[20] = 0;
   out_6301273619567859349[21] = 0;
   out_6301273619567859349[22] = 0;
   out_6301273619567859349[23] = 0;
   out_6301273619567859349[24] = 0;
   out_6301273619567859349[25] = 0;
   out_6301273619567859349[26] = 0;
   out_6301273619567859349[27] = 0;
   out_6301273619567859349[28] = 0;
   out_6301273619567859349[29] = 0;
   out_6301273619567859349[30] = 0;
   out_6301273619567859349[31] = 0;
   out_6301273619567859349[32] = 0;
   out_6301273619567859349[33] = 1;
   out_6301273619567859349[34] = 0;
   out_6301273619567859349[35] = 0;
   out_6301273619567859349[36] = 0;
   out_6301273619567859349[37] = 0;
   out_6301273619567859349[38] = 0;
   out_6301273619567859349[39] = 0;
   out_6301273619567859349[40] = 0;
   out_6301273619567859349[41] = 0;
   out_6301273619567859349[42] = 0;
   out_6301273619567859349[43] = 0;
   out_6301273619567859349[44] = 0;
   out_6301273619567859349[45] = 0;
   out_6301273619567859349[46] = 0;
   out_6301273619567859349[47] = 0;
   out_6301273619567859349[48] = 0;
   out_6301273619567859349[49] = 0;
   out_6301273619567859349[50] = 0;
   out_6301273619567859349[51] = 0;
   out_6301273619567859349[52] = 0;
   out_6301273619567859349[53] = 0;
   out_6301273619567859349[54] = 0;
   out_6301273619567859349[55] = 0;
   out_6301273619567859349[56] = 1;
   out_6301273619567859349[57] = 0;
   out_6301273619567859349[58] = 0;
   out_6301273619567859349[59] = 0;
   out_6301273619567859349[60] = 0;
   out_6301273619567859349[61] = 0;
   out_6301273619567859349[62] = 0;
   out_6301273619567859349[63] = 0;
   out_6301273619567859349[64] = 0;
   out_6301273619567859349[65] = 0;
}
void h_33(double *state, double *unused, double *out_1221839782987832732) {
   out_1221839782987832732[0] = state[16];
   out_1221839782987832732[1] = state[17];
   out_1221839782987832732[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7071273492820841839) {
   out_7071273492820841839[0] = 0;
   out_7071273492820841839[1] = 0;
   out_7071273492820841839[2] = 0;
   out_7071273492820841839[3] = 0;
   out_7071273492820841839[4] = 0;
   out_7071273492820841839[5] = 0;
   out_7071273492820841839[6] = 0;
   out_7071273492820841839[7] = 0;
   out_7071273492820841839[8] = 0;
   out_7071273492820841839[9] = 0;
   out_7071273492820841839[10] = 0;
   out_7071273492820841839[11] = 0;
   out_7071273492820841839[12] = 0;
   out_7071273492820841839[13] = 0;
   out_7071273492820841839[14] = 0;
   out_7071273492820841839[15] = 0;
   out_7071273492820841839[16] = 1;
   out_7071273492820841839[17] = 0;
   out_7071273492820841839[18] = 0;
   out_7071273492820841839[19] = 0;
   out_7071273492820841839[20] = 0;
   out_7071273492820841839[21] = 0;
   out_7071273492820841839[22] = 0;
   out_7071273492820841839[23] = 0;
   out_7071273492820841839[24] = 0;
   out_7071273492820841839[25] = 0;
   out_7071273492820841839[26] = 0;
   out_7071273492820841839[27] = 0;
   out_7071273492820841839[28] = 0;
   out_7071273492820841839[29] = 0;
   out_7071273492820841839[30] = 0;
   out_7071273492820841839[31] = 0;
   out_7071273492820841839[32] = 0;
   out_7071273492820841839[33] = 0;
   out_7071273492820841839[34] = 0;
   out_7071273492820841839[35] = 0;
   out_7071273492820841839[36] = 0;
   out_7071273492820841839[37] = 0;
   out_7071273492820841839[38] = 0;
   out_7071273492820841839[39] = 1;
   out_7071273492820841839[40] = 0;
   out_7071273492820841839[41] = 0;
   out_7071273492820841839[42] = 0;
   out_7071273492820841839[43] = 0;
   out_7071273492820841839[44] = 0;
   out_7071273492820841839[45] = 0;
   out_7071273492820841839[46] = 0;
   out_7071273492820841839[47] = 0;
   out_7071273492820841839[48] = 0;
   out_7071273492820841839[49] = 0;
   out_7071273492820841839[50] = 0;
   out_7071273492820841839[51] = 0;
   out_7071273492820841839[52] = 0;
   out_7071273492820841839[53] = 0;
   out_7071273492820841839[54] = 0;
   out_7071273492820841839[55] = 0;
   out_7071273492820841839[56] = 0;
   out_7071273492820841839[57] = 0;
   out_7071273492820841839[58] = 0;
   out_7071273492820841839[59] = 0;
   out_7071273492820841839[60] = 0;
   out_7071273492820841839[61] = 0;
   out_7071273492820841839[62] = 1;
   out_7071273492820841839[63] = 0;
   out_7071273492820841839[64] = 0;
   out_7071273492820841839[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2932638753638069008) {
  H(in_vec, out_2932638753638069008);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3082778792051611074) {
  err_fun(nom_x, delta_x, out_3082778792051611074);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5124076748781897325) {
  inv_err_fun(nom_x, true_x, out_5124076748781897325);
}
void live_H_mod_fun(double *state, double *out_1613094616844734651) {
  H_mod_fun(state, out_1613094616844734651);
}
void live_f_fun(double *state, double dt, double *out_8292055049526193115) {
  f_fun(state,  dt, out_8292055049526193115);
}
void live_F_fun(double *state, double dt, double *out_7850691362293063387) {
  F_fun(state,  dt, out_7850691362293063387);
}
void live_h_4(double *state, double *unused, double *out_1870156021305990905) {
  h_4(state, unused, out_1870156021305990905);
}
void live_H_4(double *state, double *unused, double *out_4858251518877244797) {
  H_4(state, unused, out_4858251518877244797);
}
void live_h_9(double *state, double *unused, double *out_5054878707596075090) {
  h_9(state, unused, out_5054878707596075090);
}
void live_H_9(double *state, double *unused, double *out_6301273619567859349) {
  H_9(state, unused, out_6301273619567859349);
}
void live_h_10(double *state, double *unused, double *out_7081733196693319237) {
  h_10(state, unused, out_7081733196693319237);
}
void live_H_10(double *state, double *unused, double *out_4105413611790639053) {
  H_10(state, unused, out_4105413611790639053);
}
void live_h_12(double *state, double *unused, double *out_6959964131996505310) {
  h_12(state, unused, out_6959964131996505310);
}
void live_H_12(double *state, double *unused, double *out_5921364241149856327) {
  H_12(state, unused, out_5921364241149856327);
}
void live_h_35(double *state, double *unused, double *out_1930321176650879734) {
  h_35(state, unused, out_1930321176650879734);
}
void live_H_35(double *state, double *unused, double *out_8224913576249852173) {
  H_35(state, unused, out_8224913576249852173);
}
void live_h_32(double *state, double *unused, double *out_966899961657993423) {
  h_32(state, unused, out_966899961657993423);
}
void live_H_32(double *state, double *unused, double *out_8356078361190592642) {
  H_32(state, unused, out_8356078361190592642);
}
void live_h_13(double *state, double *unused, double *out_3122660602928051458) {
  h_13(state, unused, out_3122660602928051458);
}
void live_H_13(double *state, double *unused, double *out_4724152095591650146) {
  H_13(state, unused, out_4724152095591650146);
}
void live_h_14(double *state, double *unused, double *out_5054878707596075090) {
  h_14(state, unused, out_5054878707596075090);
}
void live_H_14(double *state, double *unused, double *out_6301273619567859349) {
  H_14(state, unused, out_6301273619567859349);
}
void live_h_33(double *state, double *unused, double *out_1221839782987832732) {
  h_33(state, unused, out_1221839782987832732);
}
void live_H_33(double *state, double *unused, double *out_7071273492820841839) {
  H_33(state, unused, out_7071273492820841839);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
