#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7498208368369388249) {
   out_7498208368369388249[0] = 0;
   out_7498208368369388249[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7498208368369388249[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7498208368369388249[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7498208368369388249[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7498208368369388249[5] = -sin(in_vec[1]);
   out_7498208368369388249[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7498208368369388249[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7498208368369388249[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7498208368369388249[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7498208368369388249[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7498208368369388249[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7498208368369388249[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7498208368369388249[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7498208368369388249[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7498208368369388249[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7498208368369388249[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7498208368369388249[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7563243142583457209) {
   out_7563243142583457209[0] = delta_x[0] + nom_x[0];
   out_7563243142583457209[1] = delta_x[1] + nom_x[1];
   out_7563243142583457209[2] = delta_x[2] + nom_x[2];
   out_7563243142583457209[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7563243142583457209[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7563243142583457209[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7563243142583457209[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7563243142583457209[7] = delta_x[6] + nom_x[7];
   out_7563243142583457209[8] = delta_x[7] + nom_x[8];
   out_7563243142583457209[9] = delta_x[8] + nom_x[9];
   out_7563243142583457209[10] = delta_x[9] + nom_x[10];
   out_7563243142583457209[11] = delta_x[10] + nom_x[11];
   out_7563243142583457209[12] = delta_x[11] + nom_x[12];
   out_7563243142583457209[13] = delta_x[12] + nom_x[13];
   out_7563243142583457209[14] = delta_x[13] + nom_x[14];
   out_7563243142583457209[15] = delta_x[14] + nom_x[15];
   out_7563243142583457209[16] = delta_x[15] + nom_x[16];
   out_7563243142583457209[17] = delta_x[16] + nom_x[17];
   out_7563243142583457209[18] = delta_x[17] + nom_x[18];
   out_7563243142583457209[19] = delta_x[18] + nom_x[19];
   out_7563243142583457209[20] = delta_x[19] + nom_x[20];
   out_7563243142583457209[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3191905396642450242) {
   out_3191905396642450242[0] = -nom_x[0] + true_x[0];
   out_3191905396642450242[1] = -nom_x[1] + true_x[1];
   out_3191905396642450242[2] = -nom_x[2] + true_x[2];
   out_3191905396642450242[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3191905396642450242[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3191905396642450242[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3191905396642450242[6] = -nom_x[7] + true_x[7];
   out_3191905396642450242[7] = -nom_x[8] + true_x[8];
   out_3191905396642450242[8] = -nom_x[9] + true_x[9];
   out_3191905396642450242[9] = -nom_x[10] + true_x[10];
   out_3191905396642450242[10] = -nom_x[11] + true_x[11];
   out_3191905396642450242[11] = -nom_x[12] + true_x[12];
   out_3191905396642450242[12] = -nom_x[13] + true_x[13];
   out_3191905396642450242[13] = -nom_x[14] + true_x[14];
   out_3191905396642450242[14] = -nom_x[15] + true_x[15];
   out_3191905396642450242[15] = -nom_x[16] + true_x[16];
   out_3191905396642450242[16] = -nom_x[17] + true_x[17];
   out_3191905396642450242[17] = -nom_x[18] + true_x[18];
   out_3191905396642450242[18] = -nom_x[19] + true_x[19];
   out_3191905396642450242[19] = -nom_x[20] + true_x[20];
   out_3191905396642450242[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5177927025347625679) {
   out_5177927025347625679[0] = 1.0;
   out_5177927025347625679[1] = 0;
   out_5177927025347625679[2] = 0;
   out_5177927025347625679[3] = 0;
   out_5177927025347625679[4] = 0;
   out_5177927025347625679[5] = 0;
   out_5177927025347625679[6] = 0;
   out_5177927025347625679[7] = 0;
   out_5177927025347625679[8] = 0;
   out_5177927025347625679[9] = 0;
   out_5177927025347625679[10] = 0;
   out_5177927025347625679[11] = 0;
   out_5177927025347625679[12] = 0;
   out_5177927025347625679[13] = 0;
   out_5177927025347625679[14] = 0;
   out_5177927025347625679[15] = 0;
   out_5177927025347625679[16] = 0;
   out_5177927025347625679[17] = 0;
   out_5177927025347625679[18] = 0;
   out_5177927025347625679[19] = 0;
   out_5177927025347625679[20] = 0;
   out_5177927025347625679[21] = 0;
   out_5177927025347625679[22] = 1.0;
   out_5177927025347625679[23] = 0;
   out_5177927025347625679[24] = 0;
   out_5177927025347625679[25] = 0;
   out_5177927025347625679[26] = 0;
   out_5177927025347625679[27] = 0;
   out_5177927025347625679[28] = 0;
   out_5177927025347625679[29] = 0;
   out_5177927025347625679[30] = 0;
   out_5177927025347625679[31] = 0;
   out_5177927025347625679[32] = 0;
   out_5177927025347625679[33] = 0;
   out_5177927025347625679[34] = 0;
   out_5177927025347625679[35] = 0;
   out_5177927025347625679[36] = 0;
   out_5177927025347625679[37] = 0;
   out_5177927025347625679[38] = 0;
   out_5177927025347625679[39] = 0;
   out_5177927025347625679[40] = 0;
   out_5177927025347625679[41] = 0;
   out_5177927025347625679[42] = 0;
   out_5177927025347625679[43] = 0;
   out_5177927025347625679[44] = 1.0;
   out_5177927025347625679[45] = 0;
   out_5177927025347625679[46] = 0;
   out_5177927025347625679[47] = 0;
   out_5177927025347625679[48] = 0;
   out_5177927025347625679[49] = 0;
   out_5177927025347625679[50] = 0;
   out_5177927025347625679[51] = 0;
   out_5177927025347625679[52] = 0;
   out_5177927025347625679[53] = 0;
   out_5177927025347625679[54] = 0;
   out_5177927025347625679[55] = 0;
   out_5177927025347625679[56] = 0;
   out_5177927025347625679[57] = 0;
   out_5177927025347625679[58] = 0;
   out_5177927025347625679[59] = 0;
   out_5177927025347625679[60] = 0;
   out_5177927025347625679[61] = 0;
   out_5177927025347625679[62] = 0;
   out_5177927025347625679[63] = 0;
   out_5177927025347625679[64] = 0;
   out_5177927025347625679[65] = 0;
   out_5177927025347625679[66] = -0.5*state[4];
   out_5177927025347625679[67] = -0.5*state[5];
   out_5177927025347625679[68] = -0.5*state[6];
   out_5177927025347625679[69] = 0;
   out_5177927025347625679[70] = 0;
   out_5177927025347625679[71] = 0;
   out_5177927025347625679[72] = 0;
   out_5177927025347625679[73] = 0;
   out_5177927025347625679[74] = 0;
   out_5177927025347625679[75] = 0;
   out_5177927025347625679[76] = 0;
   out_5177927025347625679[77] = 0;
   out_5177927025347625679[78] = 0;
   out_5177927025347625679[79] = 0;
   out_5177927025347625679[80] = 0;
   out_5177927025347625679[81] = 0;
   out_5177927025347625679[82] = 0;
   out_5177927025347625679[83] = 0;
   out_5177927025347625679[84] = 0;
   out_5177927025347625679[85] = 0;
   out_5177927025347625679[86] = 0;
   out_5177927025347625679[87] = 0.5*state[3];
   out_5177927025347625679[88] = 0.5*state[6];
   out_5177927025347625679[89] = -0.5*state[5];
   out_5177927025347625679[90] = 0;
   out_5177927025347625679[91] = 0;
   out_5177927025347625679[92] = 0;
   out_5177927025347625679[93] = 0;
   out_5177927025347625679[94] = 0;
   out_5177927025347625679[95] = 0;
   out_5177927025347625679[96] = 0;
   out_5177927025347625679[97] = 0;
   out_5177927025347625679[98] = 0;
   out_5177927025347625679[99] = 0;
   out_5177927025347625679[100] = 0;
   out_5177927025347625679[101] = 0;
   out_5177927025347625679[102] = 0;
   out_5177927025347625679[103] = 0;
   out_5177927025347625679[104] = 0;
   out_5177927025347625679[105] = 0;
   out_5177927025347625679[106] = 0;
   out_5177927025347625679[107] = 0;
   out_5177927025347625679[108] = -0.5*state[6];
   out_5177927025347625679[109] = 0.5*state[3];
   out_5177927025347625679[110] = 0.5*state[4];
   out_5177927025347625679[111] = 0;
   out_5177927025347625679[112] = 0;
   out_5177927025347625679[113] = 0;
   out_5177927025347625679[114] = 0;
   out_5177927025347625679[115] = 0;
   out_5177927025347625679[116] = 0;
   out_5177927025347625679[117] = 0;
   out_5177927025347625679[118] = 0;
   out_5177927025347625679[119] = 0;
   out_5177927025347625679[120] = 0;
   out_5177927025347625679[121] = 0;
   out_5177927025347625679[122] = 0;
   out_5177927025347625679[123] = 0;
   out_5177927025347625679[124] = 0;
   out_5177927025347625679[125] = 0;
   out_5177927025347625679[126] = 0;
   out_5177927025347625679[127] = 0;
   out_5177927025347625679[128] = 0;
   out_5177927025347625679[129] = 0.5*state[5];
   out_5177927025347625679[130] = -0.5*state[4];
   out_5177927025347625679[131] = 0.5*state[3];
   out_5177927025347625679[132] = 0;
   out_5177927025347625679[133] = 0;
   out_5177927025347625679[134] = 0;
   out_5177927025347625679[135] = 0;
   out_5177927025347625679[136] = 0;
   out_5177927025347625679[137] = 0;
   out_5177927025347625679[138] = 0;
   out_5177927025347625679[139] = 0;
   out_5177927025347625679[140] = 0;
   out_5177927025347625679[141] = 0;
   out_5177927025347625679[142] = 0;
   out_5177927025347625679[143] = 0;
   out_5177927025347625679[144] = 0;
   out_5177927025347625679[145] = 0;
   out_5177927025347625679[146] = 0;
   out_5177927025347625679[147] = 0;
   out_5177927025347625679[148] = 0;
   out_5177927025347625679[149] = 0;
   out_5177927025347625679[150] = 0;
   out_5177927025347625679[151] = 0;
   out_5177927025347625679[152] = 0;
   out_5177927025347625679[153] = 1.0;
   out_5177927025347625679[154] = 0;
   out_5177927025347625679[155] = 0;
   out_5177927025347625679[156] = 0;
   out_5177927025347625679[157] = 0;
   out_5177927025347625679[158] = 0;
   out_5177927025347625679[159] = 0;
   out_5177927025347625679[160] = 0;
   out_5177927025347625679[161] = 0;
   out_5177927025347625679[162] = 0;
   out_5177927025347625679[163] = 0;
   out_5177927025347625679[164] = 0;
   out_5177927025347625679[165] = 0;
   out_5177927025347625679[166] = 0;
   out_5177927025347625679[167] = 0;
   out_5177927025347625679[168] = 0;
   out_5177927025347625679[169] = 0;
   out_5177927025347625679[170] = 0;
   out_5177927025347625679[171] = 0;
   out_5177927025347625679[172] = 0;
   out_5177927025347625679[173] = 0;
   out_5177927025347625679[174] = 0;
   out_5177927025347625679[175] = 1.0;
   out_5177927025347625679[176] = 0;
   out_5177927025347625679[177] = 0;
   out_5177927025347625679[178] = 0;
   out_5177927025347625679[179] = 0;
   out_5177927025347625679[180] = 0;
   out_5177927025347625679[181] = 0;
   out_5177927025347625679[182] = 0;
   out_5177927025347625679[183] = 0;
   out_5177927025347625679[184] = 0;
   out_5177927025347625679[185] = 0;
   out_5177927025347625679[186] = 0;
   out_5177927025347625679[187] = 0;
   out_5177927025347625679[188] = 0;
   out_5177927025347625679[189] = 0;
   out_5177927025347625679[190] = 0;
   out_5177927025347625679[191] = 0;
   out_5177927025347625679[192] = 0;
   out_5177927025347625679[193] = 0;
   out_5177927025347625679[194] = 0;
   out_5177927025347625679[195] = 0;
   out_5177927025347625679[196] = 0;
   out_5177927025347625679[197] = 1.0;
   out_5177927025347625679[198] = 0;
   out_5177927025347625679[199] = 0;
   out_5177927025347625679[200] = 0;
   out_5177927025347625679[201] = 0;
   out_5177927025347625679[202] = 0;
   out_5177927025347625679[203] = 0;
   out_5177927025347625679[204] = 0;
   out_5177927025347625679[205] = 0;
   out_5177927025347625679[206] = 0;
   out_5177927025347625679[207] = 0;
   out_5177927025347625679[208] = 0;
   out_5177927025347625679[209] = 0;
   out_5177927025347625679[210] = 0;
   out_5177927025347625679[211] = 0;
   out_5177927025347625679[212] = 0;
   out_5177927025347625679[213] = 0;
   out_5177927025347625679[214] = 0;
   out_5177927025347625679[215] = 0;
   out_5177927025347625679[216] = 0;
   out_5177927025347625679[217] = 0;
   out_5177927025347625679[218] = 0;
   out_5177927025347625679[219] = 1.0;
   out_5177927025347625679[220] = 0;
   out_5177927025347625679[221] = 0;
   out_5177927025347625679[222] = 0;
   out_5177927025347625679[223] = 0;
   out_5177927025347625679[224] = 0;
   out_5177927025347625679[225] = 0;
   out_5177927025347625679[226] = 0;
   out_5177927025347625679[227] = 0;
   out_5177927025347625679[228] = 0;
   out_5177927025347625679[229] = 0;
   out_5177927025347625679[230] = 0;
   out_5177927025347625679[231] = 0;
   out_5177927025347625679[232] = 0;
   out_5177927025347625679[233] = 0;
   out_5177927025347625679[234] = 0;
   out_5177927025347625679[235] = 0;
   out_5177927025347625679[236] = 0;
   out_5177927025347625679[237] = 0;
   out_5177927025347625679[238] = 0;
   out_5177927025347625679[239] = 0;
   out_5177927025347625679[240] = 0;
   out_5177927025347625679[241] = 1.0;
   out_5177927025347625679[242] = 0;
   out_5177927025347625679[243] = 0;
   out_5177927025347625679[244] = 0;
   out_5177927025347625679[245] = 0;
   out_5177927025347625679[246] = 0;
   out_5177927025347625679[247] = 0;
   out_5177927025347625679[248] = 0;
   out_5177927025347625679[249] = 0;
   out_5177927025347625679[250] = 0;
   out_5177927025347625679[251] = 0;
   out_5177927025347625679[252] = 0;
   out_5177927025347625679[253] = 0;
   out_5177927025347625679[254] = 0;
   out_5177927025347625679[255] = 0;
   out_5177927025347625679[256] = 0;
   out_5177927025347625679[257] = 0;
   out_5177927025347625679[258] = 0;
   out_5177927025347625679[259] = 0;
   out_5177927025347625679[260] = 0;
   out_5177927025347625679[261] = 0;
   out_5177927025347625679[262] = 0;
   out_5177927025347625679[263] = 1.0;
   out_5177927025347625679[264] = 0;
   out_5177927025347625679[265] = 0;
   out_5177927025347625679[266] = 0;
   out_5177927025347625679[267] = 0;
   out_5177927025347625679[268] = 0;
   out_5177927025347625679[269] = 0;
   out_5177927025347625679[270] = 0;
   out_5177927025347625679[271] = 0;
   out_5177927025347625679[272] = 0;
   out_5177927025347625679[273] = 0;
   out_5177927025347625679[274] = 0;
   out_5177927025347625679[275] = 0;
   out_5177927025347625679[276] = 0;
   out_5177927025347625679[277] = 0;
   out_5177927025347625679[278] = 0;
   out_5177927025347625679[279] = 0;
   out_5177927025347625679[280] = 0;
   out_5177927025347625679[281] = 0;
   out_5177927025347625679[282] = 0;
   out_5177927025347625679[283] = 0;
   out_5177927025347625679[284] = 0;
   out_5177927025347625679[285] = 1.0;
   out_5177927025347625679[286] = 0;
   out_5177927025347625679[287] = 0;
   out_5177927025347625679[288] = 0;
   out_5177927025347625679[289] = 0;
   out_5177927025347625679[290] = 0;
   out_5177927025347625679[291] = 0;
   out_5177927025347625679[292] = 0;
   out_5177927025347625679[293] = 0;
   out_5177927025347625679[294] = 0;
   out_5177927025347625679[295] = 0;
   out_5177927025347625679[296] = 0;
   out_5177927025347625679[297] = 0;
   out_5177927025347625679[298] = 0;
   out_5177927025347625679[299] = 0;
   out_5177927025347625679[300] = 0;
   out_5177927025347625679[301] = 0;
   out_5177927025347625679[302] = 0;
   out_5177927025347625679[303] = 0;
   out_5177927025347625679[304] = 0;
   out_5177927025347625679[305] = 0;
   out_5177927025347625679[306] = 0;
   out_5177927025347625679[307] = 1.0;
   out_5177927025347625679[308] = 0;
   out_5177927025347625679[309] = 0;
   out_5177927025347625679[310] = 0;
   out_5177927025347625679[311] = 0;
   out_5177927025347625679[312] = 0;
   out_5177927025347625679[313] = 0;
   out_5177927025347625679[314] = 0;
   out_5177927025347625679[315] = 0;
   out_5177927025347625679[316] = 0;
   out_5177927025347625679[317] = 0;
   out_5177927025347625679[318] = 0;
   out_5177927025347625679[319] = 0;
   out_5177927025347625679[320] = 0;
   out_5177927025347625679[321] = 0;
   out_5177927025347625679[322] = 0;
   out_5177927025347625679[323] = 0;
   out_5177927025347625679[324] = 0;
   out_5177927025347625679[325] = 0;
   out_5177927025347625679[326] = 0;
   out_5177927025347625679[327] = 0;
   out_5177927025347625679[328] = 0;
   out_5177927025347625679[329] = 1.0;
   out_5177927025347625679[330] = 0;
   out_5177927025347625679[331] = 0;
   out_5177927025347625679[332] = 0;
   out_5177927025347625679[333] = 0;
   out_5177927025347625679[334] = 0;
   out_5177927025347625679[335] = 0;
   out_5177927025347625679[336] = 0;
   out_5177927025347625679[337] = 0;
   out_5177927025347625679[338] = 0;
   out_5177927025347625679[339] = 0;
   out_5177927025347625679[340] = 0;
   out_5177927025347625679[341] = 0;
   out_5177927025347625679[342] = 0;
   out_5177927025347625679[343] = 0;
   out_5177927025347625679[344] = 0;
   out_5177927025347625679[345] = 0;
   out_5177927025347625679[346] = 0;
   out_5177927025347625679[347] = 0;
   out_5177927025347625679[348] = 0;
   out_5177927025347625679[349] = 0;
   out_5177927025347625679[350] = 0;
   out_5177927025347625679[351] = 1.0;
   out_5177927025347625679[352] = 0;
   out_5177927025347625679[353] = 0;
   out_5177927025347625679[354] = 0;
   out_5177927025347625679[355] = 0;
   out_5177927025347625679[356] = 0;
   out_5177927025347625679[357] = 0;
   out_5177927025347625679[358] = 0;
   out_5177927025347625679[359] = 0;
   out_5177927025347625679[360] = 0;
   out_5177927025347625679[361] = 0;
   out_5177927025347625679[362] = 0;
   out_5177927025347625679[363] = 0;
   out_5177927025347625679[364] = 0;
   out_5177927025347625679[365] = 0;
   out_5177927025347625679[366] = 0;
   out_5177927025347625679[367] = 0;
   out_5177927025347625679[368] = 0;
   out_5177927025347625679[369] = 0;
   out_5177927025347625679[370] = 0;
   out_5177927025347625679[371] = 0;
   out_5177927025347625679[372] = 0;
   out_5177927025347625679[373] = 1.0;
   out_5177927025347625679[374] = 0;
   out_5177927025347625679[375] = 0;
   out_5177927025347625679[376] = 0;
   out_5177927025347625679[377] = 0;
   out_5177927025347625679[378] = 0;
   out_5177927025347625679[379] = 0;
   out_5177927025347625679[380] = 0;
   out_5177927025347625679[381] = 0;
   out_5177927025347625679[382] = 0;
   out_5177927025347625679[383] = 0;
   out_5177927025347625679[384] = 0;
   out_5177927025347625679[385] = 0;
   out_5177927025347625679[386] = 0;
   out_5177927025347625679[387] = 0;
   out_5177927025347625679[388] = 0;
   out_5177927025347625679[389] = 0;
   out_5177927025347625679[390] = 0;
   out_5177927025347625679[391] = 0;
   out_5177927025347625679[392] = 0;
   out_5177927025347625679[393] = 0;
   out_5177927025347625679[394] = 0;
   out_5177927025347625679[395] = 1.0;
   out_5177927025347625679[396] = 0;
   out_5177927025347625679[397] = 0;
   out_5177927025347625679[398] = 0;
   out_5177927025347625679[399] = 0;
   out_5177927025347625679[400] = 0;
   out_5177927025347625679[401] = 0;
   out_5177927025347625679[402] = 0;
   out_5177927025347625679[403] = 0;
   out_5177927025347625679[404] = 0;
   out_5177927025347625679[405] = 0;
   out_5177927025347625679[406] = 0;
   out_5177927025347625679[407] = 0;
   out_5177927025347625679[408] = 0;
   out_5177927025347625679[409] = 0;
   out_5177927025347625679[410] = 0;
   out_5177927025347625679[411] = 0;
   out_5177927025347625679[412] = 0;
   out_5177927025347625679[413] = 0;
   out_5177927025347625679[414] = 0;
   out_5177927025347625679[415] = 0;
   out_5177927025347625679[416] = 0;
   out_5177927025347625679[417] = 1.0;
   out_5177927025347625679[418] = 0;
   out_5177927025347625679[419] = 0;
   out_5177927025347625679[420] = 0;
   out_5177927025347625679[421] = 0;
   out_5177927025347625679[422] = 0;
   out_5177927025347625679[423] = 0;
   out_5177927025347625679[424] = 0;
   out_5177927025347625679[425] = 0;
   out_5177927025347625679[426] = 0;
   out_5177927025347625679[427] = 0;
   out_5177927025347625679[428] = 0;
   out_5177927025347625679[429] = 0;
   out_5177927025347625679[430] = 0;
   out_5177927025347625679[431] = 0;
   out_5177927025347625679[432] = 0;
   out_5177927025347625679[433] = 0;
   out_5177927025347625679[434] = 0;
   out_5177927025347625679[435] = 0;
   out_5177927025347625679[436] = 0;
   out_5177927025347625679[437] = 0;
   out_5177927025347625679[438] = 0;
   out_5177927025347625679[439] = 1.0;
   out_5177927025347625679[440] = 0;
   out_5177927025347625679[441] = 0;
   out_5177927025347625679[442] = 0;
   out_5177927025347625679[443] = 0;
   out_5177927025347625679[444] = 0;
   out_5177927025347625679[445] = 0;
   out_5177927025347625679[446] = 0;
   out_5177927025347625679[447] = 0;
   out_5177927025347625679[448] = 0;
   out_5177927025347625679[449] = 0;
   out_5177927025347625679[450] = 0;
   out_5177927025347625679[451] = 0;
   out_5177927025347625679[452] = 0;
   out_5177927025347625679[453] = 0;
   out_5177927025347625679[454] = 0;
   out_5177927025347625679[455] = 0;
   out_5177927025347625679[456] = 0;
   out_5177927025347625679[457] = 0;
   out_5177927025347625679[458] = 0;
   out_5177927025347625679[459] = 0;
   out_5177927025347625679[460] = 0;
   out_5177927025347625679[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5389902022275563575) {
   out_5389902022275563575[0] = dt*state[7] + state[0];
   out_5389902022275563575[1] = dt*state[8] + state[1];
   out_5389902022275563575[2] = dt*state[9] + state[2];
   out_5389902022275563575[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5389902022275563575[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5389902022275563575[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5389902022275563575[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5389902022275563575[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5389902022275563575[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5389902022275563575[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5389902022275563575[10] = state[10];
   out_5389902022275563575[11] = state[11];
   out_5389902022275563575[12] = state[12];
   out_5389902022275563575[13] = state[13];
   out_5389902022275563575[14] = state[14];
   out_5389902022275563575[15] = state[15];
   out_5389902022275563575[16] = state[16];
   out_5389902022275563575[17] = state[17];
   out_5389902022275563575[18] = state[18];
   out_5389902022275563575[19] = state[19];
   out_5389902022275563575[20] = state[20];
   out_5389902022275563575[21] = state[21];
}
void F_fun(double *state, double dt, double *out_416779900854679) {
   out_416779900854679[0] = 1;
   out_416779900854679[1] = 0;
   out_416779900854679[2] = 0;
   out_416779900854679[3] = 0;
   out_416779900854679[4] = 0;
   out_416779900854679[5] = 0;
   out_416779900854679[6] = dt;
   out_416779900854679[7] = 0;
   out_416779900854679[8] = 0;
   out_416779900854679[9] = 0;
   out_416779900854679[10] = 0;
   out_416779900854679[11] = 0;
   out_416779900854679[12] = 0;
   out_416779900854679[13] = 0;
   out_416779900854679[14] = 0;
   out_416779900854679[15] = 0;
   out_416779900854679[16] = 0;
   out_416779900854679[17] = 0;
   out_416779900854679[18] = 0;
   out_416779900854679[19] = 0;
   out_416779900854679[20] = 0;
   out_416779900854679[21] = 0;
   out_416779900854679[22] = 1;
   out_416779900854679[23] = 0;
   out_416779900854679[24] = 0;
   out_416779900854679[25] = 0;
   out_416779900854679[26] = 0;
   out_416779900854679[27] = 0;
   out_416779900854679[28] = dt;
   out_416779900854679[29] = 0;
   out_416779900854679[30] = 0;
   out_416779900854679[31] = 0;
   out_416779900854679[32] = 0;
   out_416779900854679[33] = 0;
   out_416779900854679[34] = 0;
   out_416779900854679[35] = 0;
   out_416779900854679[36] = 0;
   out_416779900854679[37] = 0;
   out_416779900854679[38] = 0;
   out_416779900854679[39] = 0;
   out_416779900854679[40] = 0;
   out_416779900854679[41] = 0;
   out_416779900854679[42] = 0;
   out_416779900854679[43] = 0;
   out_416779900854679[44] = 1;
   out_416779900854679[45] = 0;
   out_416779900854679[46] = 0;
   out_416779900854679[47] = 0;
   out_416779900854679[48] = 0;
   out_416779900854679[49] = 0;
   out_416779900854679[50] = dt;
   out_416779900854679[51] = 0;
   out_416779900854679[52] = 0;
   out_416779900854679[53] = 0;
   out_416779900854679[54] = 0;
   out_416779900854679[55] = 0;
   out_416779900854679[56] = 0;
   out_416779900854679[57] = 0;
   out_416779900854679[58] = 0;
   out_416779900854679[59] = 0;
   out_416779900854679[60] = 0;
   out_416779900854679[61] = 0;
   out_416779900854679[62] = 0;
   out_416779900854679[63] = 0;
   out_416779900854679[64] = 0;
   out_416779900854679[65] = 0;
   out_416779900854679[66] = 1;
   out_416779900854679[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_416779900854679[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_416779900854679[69] = 0;
   out_416779900854679[70] = 0;
   out_416779900854679[71] = 0;
   out_416779900854679[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_416779900854679[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_416779900854679[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_416779900854679[75] = 0;
   out_416779900854679[76] = 0;
   out_416779900854679[77] = 0;
   out_416779900854679[78] = 0;
   out_416779900854679[79] = 0;
   out_416779900854679[80] = 0;
   out_416779900854679[81] = 0;
   out_416779900854679[82] = 0;
   out_416779900854679[83] = 0;
   out_416779900854679[84] = 0;
   out_416779900854679[85] = 0;
   out_416779900854679[86] = 0;
   out_416779900854679[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_416779900854679[88] = 1;
   out_416779900854679[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_416779900854679[90] = 0;
   out_416779900854679[91] = 0;
   out_416779900854679[92] = 0;
   out_416779900854679[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_416779900854679[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_416779900854679[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_416779900854679[96] = 0;
   out_416779900854679[97] = 0;
   out_416779900854679[98] = 0;
   out_416779900854679[99] = 0;
   out_416779900854679[100] = 0;
   out_416779900854679[101] = 0;
   out_416779900854679[102] = 0;
   out_416779900854679[103] = 0;
   out_416779900854679[104] = 0;
   out_416779900854679[105] = 0;
   out_416779900854679[106] = 0;
   out_416779900854679[107] = 0;
   out_416779900854679[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_416779900854679[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_416779900854679[110] = 1;
   out_416779900854679[111] = 0;
   out_416779900854679[112] = 0;
   out_416779900854679[113] = 0;
   out_416779900854679[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_416779900854679[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_416779900854679[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_416779900854679[117] = 0;
   out_416779900854679[118] = 0;
   out_416779900854679[119] = 0;
   out_416779900854679[120] = 0;
   out_416779900854679[121] = 0;
   out_416779900854679[122] = 0;
   out_416779900854679[123] = 0;
   out_416779900854679[124] = 0;
   out_416779900854679[125] = 0;
   out_416779900854679[126] = 0;
   out_416779900854679[127] = 0;
   out_416779900854679[128] = 0;
   out_416779900854679[129] = 0;
   out_416779900854679[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_416779900854679[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_416779900854679[132] = 1;
   out_416779900854679[133] = 0;
   out_416779900854679[134] = 0;
   out_416779900854679[135] = 0;
   out_416779900854679[136] = 0;
   out_416779900854679[137] = 0;
   out_416779900854679[138] = 0;
   out_416779900854679[139] = 0;
   out_416779900854679[140] = 0;
   out_416779900854679[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_416779900854679[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_416779900854679[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_416779900854679[144] = 0;
   out_416779900854679[145] = 0;
   out_416779900854679[146] = 0;
   out_416779900854679[147] = 0;
   out_416779900854679[148] = 0;
   out_416779900854679[149] = 0;
   out_416779900854679[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_416779900854679[151] = 0;
   out_416779900854679[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_416779900854679[153] = 0;
   out_416779900854679[154] = 1;
   out_416779900854679[155] = 0;
   out_416779900854679[156] = 0;
   out_416779900854679[157] = 0;
   out_416779900854679[158] = 0;
   out_416779900854679[159] = 0;
   out_416779900854679[160] = 0;
   out_416779900854679[161] = 0;
   out_416779900854679[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_416779900854679[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_416779900854679[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_416779900854679[165] = 0;
   out_416779900854679[166] = 0;
   out_416779900854679[167] = 0;
   out_416779900854679[168] = 0;
   out_416779900854679[169] = 0;
   out_416779900854679[170] = 0;
   out_416779900854679[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_416779900854679[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_416779900854679[173] = 0;
   out_416779900854679[174] = 0;
   out_416779900854679[175] = 0;
   out_416779900854679[176] = 1;
   out_416779900854679[177] = 0;
   out_416779900854679[178] = 0;
   out_416779900854679[179] = 0;
   out_416779900854679[180] = 0;
   out_416779900854679[181] = 0;
   out_416779900854679[182] = 0;
   out_416779900854679[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_416779900854679[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_416779900854679[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_416779900854679[186] = 0;
   out_416779900854679[187] = 0;
   out_416779900854679[188] = 0;
   out_416779900854679[189] = 0;
   out_416779900854679[190] = 0;
   out_416779900854679[191] = 0;
   out_416779900854679[192] = 0;
   out_416779900854679[193] = 0;
   out_416779900854679[194] = 0;
   out_416779900854679[195] = 0;
   out_416779900854679[196] = 0;
   out_416779900854679[197] = 0;
   out_416779900854679[198] = 1;
   out_416779900854679[199] = 0;
   out_416779900854679[200] = 0;
   out_416779900854679[201] = 0;
   out_416779900854679[202] = 0;
   out_416779900854679[203] = 0;
   out_416779900854679[204] = 0;
   out_416779900854679[205] = 0;
   out_416779900854679[206] = 0;
   out_416779900854679[207] = 0;
   out_416779900854679[208] = 0;
   out_416779900854679[209] = 0;
   out_416779900854679[210] = 0;
   out_416779900854679[211] = 0;
   out_416779900854679[212] = 0;
   out_416779900854679[213] = 0;
   out_416779900854679[214] = 0;
   out_416779900854679[215] = 0;
   out_416779900854679[216] = 0;
   out_416779900854679[217] = 0;
   out_416779900854679[218] = 0;
   out_416779900854679[219] = 0;
   out_416779900854679[220] = 1;
   out_416779900854679[221] = 0;
   out_416779900854679[222] = 0;
   out_416779900854679[223] = 0;
   out_416779900854679[224] = 0;
   out_416779900854679[225] = 0;
   out_416779900854679[226] = 0;
   out_416779900854679[227] = 0;
   out_416779900854679[228] = 0;
   out_416779900854679[229] = 0;
   out_416779900854679[230] = 0;
   out_416779900854679[231] = 0;
   out_416779900854679[232] = 0;
   out_416779900854679[233] = 0;
   out_416779900854679[234] = 0;
   out_416779900854679[235] = 0;
   out_416779900854679[236] = 0;
   out_416779900854679[237] = 0;
   out_416779900854679[238] = 0;
   out_416779900854679[239] = 0;
   out_416779900854679[240] = 0;
   out_416779900854679[241] = 0;
   out_416779900854679[242] = 1;
   out_416779900854679[243] = 0;
   out_416779900854679[244] = 0;
   out_416779900854679[245] = 0;
   out_416779900854679[246] = 0;
   out_416779900854679[247] = 0;
   out_416779900854679[248] = 0;
   out_416779900854679[249] = 0;
   out_416779900854679[250] = 0;
   out_416779900854679[251] = 0;
   out_416779900854679[252] = 0;
   out_416779900854679[253] = 0;
   out_416779900854679[254] = 0;
   out_416779900854679[255] = 0;
   out_416779900854679[256] = 0;
   out_416779900854679[257] = 0;
   out_416779900854679[258] = 0;
   out_416779900854679[259] = 0;
   out_416779900854679[260] = 0;
   out_416779900854679[261] = 0;
   out_416779900854679[262] = 0;
   out_416779900854679[263] = 0;
   out_416779900854679[264] = 1;
   out_416779900854679[265] = 0;
   out_416779900854679[266] = 0;
   out_416779900854679[267] = 0;
   out_416779900854679[268] = 0;
   out_416779900854679[269] = 0;
   out_416779900854679[270] = 0;
   out_416779900854679[271] = 0;
   out_416779900854679[272] = 0;
   out_416779900854679[273] = 0;
   out_416779900854679[274] = 0;
   out_416779900854679[275] = 0;
   out_416779900854679[276] = 0;
   out_416779900854679[277] = 0;
   out_416779900854679[278] = 0;
   out_416779900854679[279] = 0;
   out_416779900854679[280] = 0;
   out_416779900854679[281] = 0;
   out_416779900854679[282] = 0;
   out_416779900854679[283] = 0;
   out_416779900854679[284] = 0;
   out_416779900854679[285] = 0;
   out_416779900854679[286] = 1;
   out_416779900854679[287] = 0;
   out_416779900854679[288] = 0;
   out_416779900854679[289] = 0;
   out_416779900854679[290] = 0;
   out_416779900854679[291] = 0;
   out_416779900854679[292] = 0;
   out_416779900854679[293] = 0;
   out_416779900854679[294] = 0;
   out_416779900854679[295] = 0;
   out_416779900854679[296] = 0;
   out_416779900854679[297] = 0;
   out_416779900854679[298] = 0;
   out_416779900854679[299] = 0;
   out_416779900854679[300] = 0;
   out_416779900854679[301] = 0;
   out_416779900854679[302] = 0;
   out_416779900854679[303] = 0;
   out_416779900854679[304] = 0;
   out_416779900854679[305] = 0;
   out_416779900854679[306] = 0;
   out_416779900854679[307] = 0;
   out_416779900854679[308] = 1;
   out_416779900854679[309] = 0;
   out_416779900854679[310] = 0;
   out_416779900854679[311] = 0;
   out_416779900854679[312] = 0;
   out_416779900854679[313] = 0;
   out_416779900854679[314] = 0;
   out_416779900854679[315] = 0;
   out_416779900854679[316] = 0;
   out_416779900854679[317] = 0;
   out_416779900854679[318] = 0;
   out_416779900854679[319] = 0;
   out_416779900854679[320] = 0;
   out_416779900854679[321] = 0;
   out_416779900854679[322] = 0;
   out_416779900854679[323] = 0;
   out_416779900854679[324] = 0;
   out_416779900854679[325] = 0;
   out_416779900854679[326] = 0;
   out_416779900854679[327] = 0;
   out_416779900854679[328] = 0;
   out_416779900854679[329] = 0;
   out_416779900854679[330] = 1;
   out_416779900854679[331] = 0;
   out_416779900854679[332] = 0;
   out_416779900854679[333] = 0;
   out_416779900854679[334] = 0;
   out_416779900854679[335] = 0;
   out_416779900854679[336] = 0;
   out_416779900854679[337] = 0;
   out_416779900854679[338] = 0;
   out_416779900854679[339] = 0;
   out_416779900854679[340] = 0;
   out_416779900854679[341] = 0;
   out_416779900854679[342] = 0;
   out_416779900854679[343] = 0;
   out_416779900854679[344] = 0;
   out_416779900854679[345] = 0;
   out_416779900854679[346] = 0;
   out_416779900854679[347] = 0;
   out_416779900854679[348] = 0;
   out_416779900854679[349] = 0;
   out_416779900854679[350] = 0;
   out_416779900854679[351] = 0;
   out_416779900854679[352] = 1;
   out_416779900854679[353] = 0;
   out_416779900854679[354] = 0;
   out_416779900854679[355] = 0;
   out_416779900854679[356] = 0;
   out_416779900854679[357] = 0;
   out_416779900854679[358] = 0;
   out_416779900854679[359] = 0;
   out_416779900854679[360] = 0;
   out_416779900854679[361] = 0;
   out_416779900854679[362] = 0;
   out_416779900854679[363] = 0;
   out_416779900854679[364] = 0;
   out_416779900854679[365] = 0;
   out_416779900854679[366] = 0;
   out_416779900854679[367] = 0;
   out_416779900854679[368] = 0;
   out_416779900854679[369] = 0;
   out_416779900854679[370] = 0;
   out_416779900854679[371] = 0;
   out_416779900854679[372] = 0;
   out_416779900854679[373] = 0;
   out_416779900854679[374] = 1;
   out_416779900854679[375] = 0;
   out_416779900854679[376] = 0;
   out_416779900854679[377] = 0;
   out_416779900854679[378] = 0;
   out_416779900854679[379] = 0;
   out_416779900854679[380] = 0;
   out_416779900854679[381] = 0;
   out_416779900854679[382] = 0;
   out_416779900854679[383] = 0;
   out_416779900854679[384] = 0;
   out_416779900854679[385] = 0;
   out_416779900854679[386] = 0;
   out_416779900854679[387] = 0;
   out_416779900854679[388] = 0;
   out_416779900854679[389] = 0;
   out_416779900854679[390] = 0;
   out_416779900854679[391] = 0;
   out_416779900854679[392] = 0;
   out_416779900854679[393] = 0;
   out_416779900854679[394] = 0;
   out_416779900854679[395] = 0;
   out_416779900854679[396] = 1;
   out_416779900854679[397] = 0;
   out_416779900854679[398] = 0;
   out_416779900854679[399] = 0;
   out_416779900854679[400] = 0;
   out_416779900854679[401] = 0;
   out_416779900854679[402] = 0;
   out_416779900854679[403] = 0;
   out_416779900854679[404] = 0;
   out_416779900854679[405] = 0;
   out_416779900854679[406] = 0;
   out_416779900854679[407] = 0;
   out_416779900854679[408] = 0;
   out_416779900854679[409] = 0;
   out_416779900854679[410] = 0;
   out_416779900854679[411] = 0;
   out_416779900854679[412] = 0;
   out_416779900854679[413] = 0;
   out_416779900854679[414] = 0;
   out_416779900854679[415] = 0;
   out_416779900854679[416] = 0;
   out_416779900854679[417] = 0;
   out_416779900854679[418] = 1;
   out_416779900854679[419] = 0;
   out_416779900854679[420] = 0;
   out_416779900854679[421] = 0;
   out_416779900854679[422] = 0;
   out_416779900854679[423] = 0;
   out_416779900854679[424] = 0;
   out_416779900854679[425] = 0;
   out_416779900854679[426] = 0;
   out_416779900854679[427] = 0;
   out_416779900854679[428] = 0;
   out_416779900854679[429] = 0;
   out_416779900854679[430] = 0;
   out_416779900854679[431] = 0;
   out_416779900854679[432] = 0;
   out_416779900854679[433] = 0;
   out_416779900854679[434] = 0;
   out_416779900854679[435] = 0;
   out_416779900854679[436] = 0;
   out_416779900854679[437] = 0;
   out_416779900854679[438] = 0;
   out_416779900854679[439] = 0;
   out_416779900854679[440] = 1;
}
void h_4(double *state, double *unused, double *out_4634159900462410291) {
   out_4634159900462410291[0] = state[10] + state[13];
   out_4634159900462410291[1] = state[11] + state[14];
   out_4634159900462410291[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1307159817450021698) {
   out_1307159817450021698[0] = 0;
   out_1307159817450021698[1] = 0;
   out_1307159817450021698[2] = 0;
   out_1307159817450021698[3] = 0;
   out_1307159817450021698[4] = 0;
   out_1307159817450021698[5] = 0;
   out_1307159817450021698[6] = 0;
   out_1307159817450021698[7] = 0;
   out_1307159817450021698[8] = 0;
   out_1307159817450021698[9] = 0;
   out_1307159817450021698[10] = 1;
   out_1307159817450021698[11] = 0;
   out_1307159817450021698[12] = 0;
   out_1307159817450021698[13] = 1;
   out_1307159817450021698[14] = 0;
   out_1307159817450021698[15] = 0;
   out_1307159817450021698[16] = 0;
   out_1307159817450021698[17] = 0;
   out_1307159817450021698[18] = 0;
   out_1307159817450021698[19] = 0;
   out_1307159817450021698[20] = 0;
   out_1307159817450021698[21] = 0;
   out_1307159817450021698[22] = 0;
   out_1307159817450021698[23] = 0;
   out_1307159817450021698[24] = 0;
   out_1307159817450021698[25] = 0;
   out_1307159817450021698[26] = 0;
   out_1307159817450021698[27] = 0;
   out_1307159817450021698[28] = 0;
   out_1307159817450021698[29] = 0;
   out_1307159817450021698[30] = 0;
   out_1307159817450021698[31] = 0;
   out_1307159817450021698[32] = 0;
   out_1307159817450021698[33] = 1;
   out_1307159817450021698[34] = 0;
   out_1307159817450021698[35] = 0;
   out_1307159817450021698[36] = 1;
   out_1307159817450021698[37] = 0;
   out_1307159817450021698[38] = 0;
   out_1307159817450021698[39] = 0;
   out_1307159817450021698[40] = 0;
   out_1307159817450021698[41] = 0;
   out_1307159817450021698[42] = 0;
   out_1307159817450021698[43] = 0;
   out_1307159817450021698[44] = 0;
   out_1307159817450021698[45] = 0;
   out_1307159817450021698[46] = 0;
   out_1307159817450021698[47] = 0;
   out_1307159817450021698[48] = 0;
   out_1307159817450021698[49] = 0;
   out_1307159817450021698[50] = 0;
   out_1307159817450021698[51] = 0;
   out_1307159817450021698[52] = 0;
   out_1307159817450021698[53] = 0;
   out_1307159817450021698[54] = 0;
   out_1307159817450021698[55] = 0;
   out_1307159817450021698[56] = 1;
   out_1307159817450021698[57] = 0;
   out_1307159817450021698[58] = 0;
   out_1307159817450021698[59] = 1;
   out_1307159817450021698[60] = 0;
   out_1307159817450021698[61] = 0;
   out_1307159817450021698[62] = 0;
   out_1307159817450021698[63] = 0;
   out_1307159817450021698[64] = 0;
   out_1307159817450021698[65] = 0;
}
void h_9(double *state, double *unused, double *out_2049693769246343618) {
   out_2049693769246343618[0] = state[10];
   out_2049693769246343618[1] = state[11];
   out_2049693769246343618[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8594378752714469168) {
   out_8594378752714469168[0] = 0;
   out_8594378752714469168[1] = 0;
   out_8594378752714469168[2] = 0;
   out_8594378752714469168[3] = 0;
   out_8594378752714469168[4] = 0;
   out_8594378752714469168[5] = 0;
   out_8594378752714469168[6] = 0;
   out_8594378752714469168[7] = 0;
   out_8594378752714469168[8] = 0;
   out_8594378752714469168[9] = 0;
   out_8594378752714469168[10] = 1;
   out_8594378752714469168[11] = 0;
   out_8594378752714469168[12] = 0;
   out_8594378752714469168[13] = 0;
   out_8594378752714469168[14] = 0;
   out_8594378752714469168[15] = 0;
   out_8594378752714469168[16] = 0;
   out_8594378752714469168[17] = 0;
   out_8594378752714469168[18] = 0;
   out_8594378752714469168[19] = 0;
   out_8594378752714469168[20] = 0;
   out_8594378752714469168[21] = 0;
   out_8594378752714469168[22] = 0;
   out_8594378752714469168[23] = 0;
   out_8594378752714469168[24] = 0;
   out_8594378752714469168[25] = 0;
   out_8594378752714469168[26] = 0;
   out_8594378752714469168[27] = 0;
   out_8594378752714469168[28] = 0;
   out_8594378752714469168[29] = 0;
   out_8594378752714469168[30] = 0;
   out_8594378752714469168[31] = 0;
   out_8594378752714469168[32] = 0;
   out_8594378752714469168[33] = 1;
   out_8594378752714469168[34] = 0;
   out_8594378752714469168[35] = 0;
   out_8594378752714469168[36] = 0;
   out_8594378752714469168[37] = 0;
   out_8594378752714469168[38] = 0;
   out_8594378752714469168[39] = 0;
   out_8594378752714469168[40] = 0;
   out_8594378752714469168[41] = 0;
   out_8594378752714469168[42] = 0;
   out_8594378752714469168[43] = 0;
   out_8594378752714469168[44] = 0;
   out_8594378752714469168[45] = 0;
   out_8594378752714469168[46] = 0;
   out_8594378752714469168[47] = 0;
   out_8594378752714469168[48] = 0;
   out_8594378752714469168[49] = 0;
   out_8594378752714469168[50] = 0;
   out_8594378752714469168[51] = 0;
   out_8594378752714469168[52] = 0;
   out_8594378752714469168[53] = 0;
   out_8594378752714469168[54] = 0;
   out_8594378752714469168[55] = 0;
   out_8594378752714469168[56] = 1;
   out_8594378752714469168[57] = 0;
   out_8594378752714469168[58] = 0;
   out_8594378752714469168[59] = 0;
   out_8594378752714469168[60] = 0;
   out_8594378752714469168[61] = 0;
   out_8594378752714469168[62] = 0;
   out_8594378752714469168[63] = 0;
   out_8594378752714469168[64] = 0;
   out_8594378752714469168[65] = 0;
}
void h_10(double *state, double *unused, double *out_3765718171681492333) {
   out_3765718171681492333[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3765718171681492333[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3765718171681492333[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6361224389039409133) {
   out_6361224389039409133[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6361224389039409133[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6361224389039409133[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6361224389039409133[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6361224389039409133[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6361224389039409133[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6361224389039409133[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6361224389039409133[7] = 0;
   out_6361224389039409133[8] = 0;
   out_6361224389039409133[9] = 0;
   out_6361224389039409133[10] = 0;
   out_6361224389039409133[11] = 0;
   out_6361224389039409133[12] = 0;
   out_6361224389039409133[13] = 0;
   out_6361224389039409133[14] = 0;
   out_6361224389039409133[15] = 0;
   out_6361224389039409133[16] = 1;
   out_6361224389039409133[17] = 0;
   out_6361224389039409133[18] = 0;
   out_6361224389039409133[19] = 1;
   out_6361224389039409133[20] = 0;
   out_6361224389039409133[21] = 0;
   out_6361224389039409133[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6361224389039409133[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6361224389039409133[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6361224389039409133[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6361224389039409133[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6361224389039409133[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6361224389039409133[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6361224389039409133[29] = 0;
   out_6361224389039409133[30] = 0;
   out_6361224389039409133[31] = 0;
   out_6361224389039409133[32] = 0;
   out_6361224389039409133[33] = 0;
   out_6361224389039409133[34] = 0;
   out_6361224389039409133[35] = 0;
   out_6361224389039409133[36] = 0;
   out_6361224389039409133[37] = 0;
   out_6361224389039409133[38] = 0;
   out_6361224389039409133[39] = 1;
   out_6361224389039409133[40] = 0;
   out_6361224389039409133[41] = 0;
   out_6361224389039409133[42] = 1;
   out_6361224389039409133[43] = 0;
   out_6361224389039409133[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6361224389039409133[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6361224389039409133[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6361224389039409133[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6361224389039409133[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6361224389039409133[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6361224389039409133[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6361224389039409133[51] = 0;
   out_6361224389039409133[52] = 0;
   out_6361224389039409133[53] = 0;
   out_6361224389039409133[54] = 0;
   out_6361224389039409133[55] = 0;
   out_6361224389039409133[56] = 0;
   out_6361224389039409133[57] = 0;
   out_6361224389039409133[58] = 0;
   out_6361224389039409133[59] = 0;
   out_6361224389039409133[60] = 0;
   out_6361224389039409133[61] = 0;
   out_6361224389039409133[62] = 1;
   out_6361224389039409133[63] = 0;
   out_6361224389039409133[64] = 0;
   out_6361224389039409133[65] = 1;
}
void h_12(double *state, double *unused, double *out_9075403053282122966) {
   out_9075403053282122966[0] = state[0];
   out_9075403053282122966[1] = state[1];
   out_9075403053282122966[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5074098559592711298) {
   out_5074098559592711298[0] = 1;
   out_5074098559592711298[1] = 0;
   out_5074098559592711298[2] = 0;
   out_5074098559592711298[3] = 0;
   out_5074098559592711298[4] = 0;
   out_5074098559592711298[5] = 0;
   out_5074098559592711298[6] = 0;
   out_5074098559592711298[7] = 0;
   out_5074098559592711298[8] = 0;
   out_5074098559592711298[9] = 0;
   out_5074098559592711298[10] = 0;
   out_5074098559592711298[11] = 0;
   out_5074098559592711298[12] = 0;
   out_5074098559592711298[13] = 0;
   out_5074098559592711298[14] = 0;
   out_5074098559592711298[15] = 0;
   out_5074098559592711298[16] = 0;
   out_5074098559592711298[17] = 0;
   out_5074098559592711298[18] = 0;
   out_5074098559592711298[19] = 0;
   out_5074098559592711298[20] = 0;
   out_5074098559592711298[21] = 0;
   out_5074098559592711298[22] = 0;
   out_5074098559592711298[23] = 1;
   out_5074098559592711298[24] = 0;
   out_5074098559592711298[25] = 0;
   out_5074098559592711298[26] = 0;
   out_5074098559592711298[27] = 0;
   out_5074098559592711298[28] = 0;
   out_5074098559592711298[29] = 0;
   out_5074098559592711298[30] = 0;
   out_5074098559592711298[31] = 0;
   out_5074098559592711298[32] = 0;
   out_5074098559592711298[33] = 0;
   out_5074098559592711298[34] = 0;
   out_5074098559592711298[35] = 0;
   out_5074098559592711298[36] = 0;
   out_5074098559592711298[37] = 0;
   out_5074098559592711298[38] = 0;
   out_5074098559592711298[39] = 0;
   out_5074098559592711298[40] = 0;
   out_5074098559592711298[41] = 0;
   out_5074098559592711298[42] = 0;
   out_5074098559592711298[43] = 0;
   out_5074098559592711298[44] = 0;
   out_5074098559592711298[45] = 0;
   out_5074098559592711298[46] = 1;
   out_5074098559592711298[47] = 0;
   out_5074098559592711298[48] = 0;
   out_5074098559592711298[49] = 0;
   out_5074098559592711298[50] = 0;
   out_5074098559592711298[51] = 0;
   out_5074098559592711298[52] = 0;
   out_5074098559592711298[53] = 0;
   out_5074098559592711298[54] = 0;
   out_5074098559592711298[55] = 0;
   out_5074098559592711298[56] = 0;
   out_5074098559592711298[57] = 0;
   out_5074098559592711298[58] = 0;
   out_5074098559592711298[59] = 0;
   out_5074098559592711298[60] = 0;
   out_5074098559592711298[61] = 0;
   out_5074098559592711298[62] = 0;
   out_5074098559592711298[63] = 0;
   out_5074098559592711298[64] = 0;
   out_5074098559592711298[65] = 0;
}
void h_35(double *state, double *unused, double *out_6627425846890378114) {
   out_6627425846890378114[0] = state[7];
   out_6627425846890378114[1] = state[8];
   out_6627425846890378114[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4673821874822629074) {
   out_4673821874822629074[0] = 0;
   out_4673821874822629074[1] = 0;
   out_4673821874822629074[2] = 0;
   out_4673821874822629074[3] = 0;
   out_4673821874822629074[4] = 0;
   out_4673821874822629074[5] = 0;
   out_4673821874822629074[6] = 0;
   out_4673821874822629074[7] = 1;
   out_4673821874822629074[8] = 0;
   out_4673821874822629074[9] = 0;
   out_4673821874822629074[10] = 0;
   out_4673821874822629074[11] = 0;
   out_4673821874822629074[12] = 0;
   out_4673821874822629074[13] = 0;
   out_4673821874822629074[14] = 0;
   out_4673821874822629074[15] = 0;
   out_4673821874822629074[16] = 0;
   out_4673821874822629074[17] = 0;
   out_4673821874822629074[18] = 0;
   out_4673821874822629074[19] = 0;
   out_4673821874822629074[20] = 0;
   out_4673821874822629074[21] = 0;
   out_4673821874822629074[22] = 0;
   out_4673821874822629074[23] = 0;
   out_4673821874822629074[24] = 0;
   out_4673821874822629074[25] = 0;
   out_4673821874822629074[26] = 0;
   out_4673821874822629074[27] = 0;
   out_4673821874822629074[28] = 0;
   out_4673821874822629074[29] = 0;
   out_4673821874822629074[30] = 1;
   out_4673821874822629074[31] = 0;
   out_4673821874822629074[32] = 0;
   out_4673821874822629074[33] = 0;
   out_4673821874822629074[34] = 0;
   out_4673821874822629074[35] = 0;
   out_4673821874822629074[36] = 0;
   out_4673821874822629074[37] = 0;
   out_4673821874822629074[38] = 0;
   out_4673821874822629074[39] = 0;
   out_4673821874822629074[40] = 0;
   out_4673821874822629074[41] = 0;
   out_4673821874822629074[42] = 0;
   out_4673821874822629074[43] = 0;
   out_4673821874822629074[44] = 0;
   out_4673821874822629074[45] = 0;
   out_4673821874822629074[46] = 0;
   out_4673821874822629074[47] = 0;
   out_4673821874822629074[48] = 0;
   out_4673821874822629074[49] = 0;
   out_4673821874822629074[50] = 0;
   out_4673821874822629074[51] = 0;
   out_4673821874822629074[52] = 0;
   out_4673821874822629074[53] = 1;
   out_4673821874822629074[54] = 0;
   out_4673821874822629074[55] = 0;
   out_4673821874822629074[56] = 0;
   out_4673821874822629074[57] = 0;
   out_4673821874822629074[58] = 0;
   out_4673821874822629074[59] = 0;
   out_4673821874822629074[60] = 0;
   out_4673821874822629074[61] = 0;
   out_4673821874822629074[62] = 0;
   out_4673821874822629074[63] = 0;
   out_4673821874822629074[64] = 0;
   out_4673821874822629074[65] = 0;
}
void h_32(double *state, double *unused, double *out_8061479894163039375) {
   out_8061479894163039375[0] = state[3];
   out_8061479894163039375[1] = state[4];
   out_8061479894163039375[2] = state[5];
   out_8061479894163039375[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4315588672025323761) {
   out_4315588672025323761[0] = 0;
   out_4315588672025323761[1] = 0;
   out_4315588672025323761[2] = 0;
   out_4315588672025323761[3] = 1;
   out_4315588672025323761[4] = 0;
   out_4315588672025323761[5] = 0;
   out_4315588672025323761[6] = 0;
   out_4315588672025323761[7] = 0;
   out_4315588672025323761[8] = 0;
   out_4315588672025323761[9] = 0;
   out_4315588672025323761[10] = 0;
   out_4315588672025323761[11] = 0;
   out_4315588672025323761[12] = 0;
   out_4315588672025323761[13] = 0;
   out_4315588672025323761[14] = 0;
   out_4315588672025323761[15] = 0;
   out_4315588672025323761[16] = 0;
   out_4315588672025323761[17] = 0;
   out_4315588672025323761[18] = 0;
   out_4315588672025323761[19] = 0;
   out_4315588672025323761[20] = 0;
   out_4315588672025323761[21] = 0;
   out_4315588672025323761[22] = 0;
   out_4315588672025323761[23] = 0;
   out_4315588672025323761[24] = 0;
   out_4315588672025323761[25] = 0;
   out_4315588672025323761[26] = 1;
   out_4315588672025323761[27] = 0;
   out_4315588672025323761[28] = 0;
   out_4315588672025323761[29] = 0;
   out_4315588672025323761[30] = 0;
   out_4315588672025323761[31] = 0;
   out_4315588672025323761[32] = 0;
   out_4315588672025323761[33] = 0;
   out_4315588672025323761[34] = 0;
   out_4315588672025323761[35] = 0;
   out_4315588672025323761[36] = 0;
   out_4315588672025323761[37] = 0;
   out_4315588672025323761[38] = 0;
   out_4315588672025323761[39] = 0;
   out_4315588672025323761[40] = 0;
   out_4315588672025323761[41] = 0;
   out_4315588672025323761[42] = 0;
   out_4315588672025323761[43] = 0;
   out_4315588672025323761[44] = 0;
   out_4315588672025323761[45] = 0;
   out_4315588672025323761[46] = 0;
   out_4315588672025323761[47] = 0;
   out_4315588672025323761[48] = 0;
   out_4315588672025323761[49] = 1;
   out_4315588672025323761[50] = 0;
   out_4315588672025323761[51] = 0;
   out_4315588672025323761[52] = 0;
   out_4315588672025323761[53] = 0;
   out_4315588672025323761[54] = 0;
   out_4315588672025323761[55] = 0;
   out_4315588672025323761[56] = 0;
   out_4315588672025323761[57] = 0;
   out_4315588672025323761[58] = 0;
   out_4315588672025323761[59] = 0;
   out_4315588672025323761[60] = 0;
   out_4315588672025323761[61] = 0;
   out_4315588672025323761[62] = 0;
   out_4315588672025323761[63] = 0;
   out_4315588672025323761[64] = 0;
   out_4315588672025323761[65] = 0;
   out_4315588672025323761[66] = 0;
   out_4315588672025323761[67] = 0;
   out_4315588672025323761[68] = 0;
   out_4315588672025323761[69] = 0;
   out_4315588672025323761[70] = 0;
   out_4315588672025323761[71] = 0;
   out_4315588672025323761[72] = 1;
   out_4315588672025323761[73] = 0;
   out_4315588672025323761[74] = 0;
   out_4315588672025323761[75] = 0;
   out_4315588672025323761[76] = 0;
   out_4315588672025323761[77] = 0;
   out_4315588672025323761[78] = 0;
   out_4315588672025323761[79] = 0;
   out_4315588672025323761[80] = 0;
   out_4315588672025323761[81] = 0;
   out_4315588672025323761[82] = 0;
   out_4315588672025323761[83] = 0;
   out_4315588672025323761[84] = 0;
   out_4315588672025323761[85] = 0;
   out_4315588672025323761[86] = 0;
   out_4315588672025323761[87] = 0;
}
void h_13(double *state, double *unused, double *out_2445625875292938388) {
   out_2445625875292938388[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2445625875292938388[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2445625875292938388[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5620801622632054635) {
   out_5620801622632054635[0] = 0;
   out_5620801622632054635[1] = 0;
   out_5620801622632054635[2] = 0;
   out_5620801622632054635[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5620801622632054635[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5620801622632054635[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5620801622632054635[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5620801622632054635[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5620801622632054635[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5620801622632054635[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5620801622632054635[10] = 0;
   out_5620801622632054635[11] = 0;
   out_5620801622632054635[12] = 0;
   out_5620801622632054635[13] = 0;
   out_5620801622632054635[14] = 0;
   out_5620801622632054635[15] = 0;
   out_5620801622632054635[16] = 0;
   out_5620801622632054635[17] = 0;
   out_5620801622632054635[18] = 0;
   out_5620801622632054635[19] = 0;
   out_5620801622632054635[20] = 0;
   out_5620801622632054635[21] = 0;
   out_5620801622632054635[22] = 0;
   out_5620801622632054635[23] = 0;
   out_5620801622632054635[24] = 0;
   out_5620801622632054635[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5620801622632054635[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5620801622632054635[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5620801622632054635[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5620801622632054635[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5620801622632054635[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5620801622632054635[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5620801622632054635[32] = 0;
   out_5620801622632054635[33] = 0;
   out_5620801622632054635[34] = 0;
   out_5620801622632054635[35] = 0;
   out_5620801622632054635[36] = 0;
   out_5620801622632054635[37] = 0;
   out_5620801622632054635[38] = 0;
   out_5620801622632054635[39] = 0;
   out_5620801622632054635[40] = 0;
   out_5620801622632054635[41] = 0;
   out_5620801622632054635[42] = 0;
   out_5620801622632054635[43] = 0;
   out_5620801622632054635[44] = 0;
   out_5620801622632054635[45] = 0;
   out_5620801622632054635[46] = 0;
   out_5620801622632054635[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5620801622632054635[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5620801622632054635[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5620801622632054635[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5620801622632054635[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5620801622632054635[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5620801622632054635[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5620801622632054635[54] = 0;
   out_5620801622632054635[55] = 0;
   out_5620801622632054635[56] = 0;
   out_5620801622632054635[57] = 0;
   out_5620801622632054635[58] = 0;
   out_5620801622632054635[59] = 0;
   out_5620801622632054635[60] = 0;
   out_5620801622632054635[61] = 0;
   out_5620801622632054635[62] = 0;
   out_5620801622632054635[63] = 0;
   out_5620801622632054635[64] = 0;
   out_5620801622632054635[65] = 0;
}
void h_14(double *state, double *unused, double *out_2049693769246343618) {
   out_2049693769246343618[0] = state[10];
   out_2049693769246343618[1] = state[11];
   out_2049693769246343618[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8594378752714469168) {
   out_8594378752714469168[0] = 0;
   out_8594378752714469168[1] = 0;
   out_8594378752714469168[2] = 0;
   out_8594378752714469168[3] = 0;
   out_8594378752714469168[4] = 0;
   out_8594378752714469168[5] = 0;
   out_8594378752714469168[6] = 0;
   out_8594378752714469168[7] = 0;
   out_8594378752714469168[8] = 0;
   out_8594378752714469168[9] = 0;
   out_8594378752714469168[10] = 1;
   out_8594378752714469168[11] = 0;
   out_8594378752714469168[12] = 0;
   out_8594378752714469168[13] = 0;
   out_8594378752714469168[14] = 0;
   out_8594378752714469168[15] = 0;
   out_8594378752714469168[16] = 0;
   out_8594378752714469168[17] = 0;
   out_8594378752714469168[18] = 0;
   out_8594378752714469168[19] = 0;
   out_8594378752714469168[20] = 0;
   out_8594378752714469168[21] = 0;
   out_8594378752714469168[22] = 0;
   out_8594378752714469168[23] = 0;
   out_8594378752714469168[24] = 0;
   out_8594378752714469168[25] = 0;
   out_8594378752714469168[26] = 0;
   out_8594378752714469168[27] = 0;
   out_8594378752714469168[28] = 0;
   out_8594378752714469168[29] = 0;
   out_8594378752714469168[30] = 0;
   out_8594378752714469168[31] = 0;
   out_8594378752714469168[32] = 0;
   out_8594378752714469168[33] = 1;
   out_8594378752714469168[34] = 0;
   out_8594378752714469168[35] = 0;
   out_8594378752714469168[36] = 0;
   out_8594378752714469168[37] = 0;
   out_8594378752714469168[38] = 0;
   out_8594378752714469168[39] = 0;
   out_8594378752714469168[40] = 0;
   out_8594378752714469168[41] = 0;
   out_8594378752714469168[42] = 0;
   out_8594378752714469168[43] = 0;
   out_8594378752714469168[44] = 0;
   out_8594378752714469168[45] = 0;
   out_8594378752714469168[46] = 0;
   out_8594378752714469168[47] = 0;
   out_8594378752714469168[48] = 0;
   out_8594378752714469168[49] = 0;
   out_8594378752714469168[50] = 0;
   out_8594378752714469168[51] = 0;
   out_8594378752714469168[52] = 0;
   out_8594378752714469168[53] = 0;
   out_8594378752714469168[54] = 0;
   out_8594378752714469168[55] = 0;
   out_8594378752714469168[56] = 1;
   out_8594378752714469168[57] = 0;
   out_8594378752714469168[58] = 0;
   out_8594378752714469168[59] = 0;
   out_8594378752714469168[60] = 0;
   out_8594378752714469168[61] = 0;
   out_8594378752714469168[62] = 0;
   out_8594378752714469168[63] = 0;
   out_8594378752714469168[64] = 0;
   out_8594378752714469168[65] = 0;
}
void h_33(double *state, double *unused, double *out_4301628161043884925) {
   out_4301628161043884925[0] = state[16];
   out_4301628161043884925[1] = state[17];
   out_4301628161043884925[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7824378879461486678) {
   out_7824378879461486678[0] = 0;
   out_7824378879461486678[1] = 0;
   out_7824378879461486678[2] = 0;
   out_7824378879461486678[3] = 0;
   out_7824378879461486678[4] = 0;
   out_7824378879461486678[5] = 0;
   out_7824378879461486678[6] = 0;
   out_7824378879461486678[7] = 0;
   out_7824378879461486678[8] = 0;
   out_7824378879461486678[9] = 0;
   out_7824378879461486678[10] = 0;
   out_7824378879461486678[11] = 0;
   out_7824378879461486678[12] = 0;
   out_7824378879461486678[13] = 0;
   out_7824378879461486678[14] = 0;
   out_7824378879461486678[15] = 0;
   out_7824378879461486678[16] = 1;
   out_7824378879461486678[17] = 0;
   out_7824378879461486678[18] = 0;
   out_7824378879461486678[19] = 0;
   out_7824378879461486678[20] = 0;
   out_7824378879461486678[21] = 0;
   out_7824378879461486678[22] = 0;
   out_7824378879461486678[23] = 0;
   out_7824378879461486678[24] = 0;
   out_7824378879461486678[25] = 0;
   out_7824378879461486678[26] = 0;
   out_7824378879461486678[27] = 0;
   out_7824378879461486678[28] = 0;
   out_7824378879461486678[29] = 0;
   out_7824378879461486678[30] = 0;
   out_7824378879461486678[31] = 0;
   out_7824378879461486678[32] = 0;
   out_7824378879461486678[33] = 0;
   out_7824378879461486678[34] = 0;
   out_7824378879461486678[35] = 0;
   out_7824378879461486678[36] = 0;
   out_7824378879461486678[37] = 0;
   out_7824378879461486678[38] = 0;
   out_7824378879461486678[39] = 1;
   out_7824378879461486678[40] = 0;
   out_7824378879461486678[41] = 0;
   out_7824378879461486678[42] = 0;
   out_7824378879461486678[43] = 0;
   out_7824378879461486678[44] = 0;
   out_7824378879461486678[45] = 0;
   out_7824378879461486678[46] = 0;
   out_7824378879461486678[47] = 0;
   out_7824378879461486678[48] = 0;
   out_7824378879461486678[49] = 0;
   out_7824378879461486678[50] = 0;
   out_7824378879461486678[51] = 0;
   out_7824378879461486678[52] = 0;
   out_7824378879461486678[53] = 0;
   out_7824378879461486678[54] = 0;
   out_7824378879461486678[55] = 0;
   out_7824378879461486678[56] = 0;
   out_7824378879461486678[57] = 0;
   out_7824378879461486678[58] = 0;
   out_7824378879461486678[59] = 0;
   out_7824378879461486678[60] = 0;
   out_7824378879461486678[61] = 0;
   out_7824378879461486678[62] = 1;
   out_7824378879461486678[63] = 0;
   out_7824378879461486678[64] = 0;
   out_7824378879461486678[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7498208368369388249) {
  H(in_vec, out_7498208368369388249);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7563243142583457209) {
  err_fun(nom_x, delta_x, out_7563243142583457209);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3191905396642450242) {
  inv_err_fun(nom_x, true_x, out_3191905396642450242);
}
void live_H_mod_fun(double *state, double *out_5177927025347625679) {
  H_mod_fun(state, out_5177927025347625679);
}
void live_f_fun(double *state, double dt, double *out_5389902022275563575) {
  f_fun(state,  dt, out_5389902022275563575);
}
void live_F_fun(double *state, double dt, double *out_416779900854679) {
  F_fun(state,  dt, out_416779900854679);
}
void live_h_4(double *state, double *unused, double *out_4634159900462410291) {
  h_4(state, unused, out_4634159900462410291);
}
void live_H_4(double *state, double *unused, double *out_1307159817450021698) {
  H_4(state, unused, out_1307159817450021698);
}
void live_h_9(double *state, double *unused, double *out_2049693769246343618) {
  h_9(state, unused, out_2049693769246343618);
}
void live_H_9(double *state, double *unused, double *out_8594378752714469168) {
  H_9(state, unused, out_8594378752714469168);
}
void live_h_10(double *state, double *unused, double *out_3765718171681492333) {
  h_10(state, unused, out_3765718171681492333);
}
void live_H_10(double *state, double *unused, double *out_6361224389039409133) {
  H_10(state, unused, out_6361224389039409133);
}
void live_h_12(double *state, double *unused, double *out_9075403053282122966) {
  h_12(state, unused, out_9075403053282122966);
}
void live_H_12(double *state, double *unused, double *out_5074098559592711298) {
  H_12(state, unused, out_5074098559592711298);
}
void live_h_35(double *state, double *unused, double *out_6627425846890378114) {
  h_35(state, unused, out_6627425846890378114);
}
void live_H_35(double *state, double *unused, double *out_4673821874822629074) {
  H_35(state, unused, out_4673821874822629074);
}
void live_h_32(double *state, double *unused, double *out_8061479894163039375) {
  h_32(state, unused, out_8061479894163039375);
}
void live_H_32(double *state, double *unused, double *out_4315588672025323761) {
  H_32(state, unused, out_4315588672025323761);
}
void live_h_13(double *state, double *unused, double *out_2445625875292938388) {
  h_13(state, unused, out_2445625875292938388);
}
void live_H_13(double *state, double *unused, double *out_5620801622632054635) {
  H_13(state, unused, out_5620801622632054635);
}
void live_h_14(double *state, double *unused, double *out_2049693769246343618) {
  h_14(state, unused, out_2049693769246343618);
}
void live_H_14(double *state, double *unused, double *out_8594378752714469168) {
  H_14(state, unused, out_8594378752714469168);
}
void live_h_33(double *state, double *unused, double *out_4301628161043884925) {
  h_33(state, unused, out_4301628161043884925);
}
void live_H_33(double *state, double *unused, double *out_7824378879461486678) {
  H_33(state, unused, out_7824378879461486678);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
